{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\Contacts.js\",\n  _s = $RefreshSig$();\n// // src/Contacts.js\n// import React from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n\n// const sampleContacts = {\n//   Family: [\n//     { name: 'Alice', avatar: 'A' },\n//     { name: 'Bob', avatar: 'B' },\n//     { name: 'Charlie', avatar: 'C' },\n//     { name: 'David', avatar: 'D' },\n//   ],\n//   Friends: [\n//     { name: 'Charlie', avatar: 'C' },\n//     { name: 'David', avatar: 'D' },\n//   ],\n//   Others: [\n//     { name: 'Eve', avatar: 'E' },\n//     { name: 'Frank', avatar: 'F' },\n//   ],\n// };\n\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n\n//   const contacts = sampleContacts[category] || [];\n\n//   return (\n//     <>\n//       <header className=\"header\">\n//         <div className=\"logo\">PeoplePixel</div>\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\n//         <div className=\"profile-icon\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//       </header>\n//       <h2>  <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button></h2>\n//       <h3><button className=\"add-contact\" >Add Contact</button></h3>\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//       <footer>\n//         <div className=\"footer-links\">\n//           <a href=\"#\">About</a>\n//           <a href=\"#\">Help</a>\n//           <a href=\"#\">Privacy Policy</a>\n//         </div>\n//         <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\n//       </footer>\n//     </>\n//   );\n// }\n\n// export default Contacts;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []);\n\n//   return (\n//     <>\n//       {/* ... your existing code ... */}\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//       {/* ... your existing code ... */}\n//     </>\n//   );\n// }\n\n// export default Contacts;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n//   const [newContactName, setNewContactName] = useState('');\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []);\n\n//   const handleAddContact = async () => {\n//     try {\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\n//       setContacts([...contacts, response.data]); // Update contacts state\n//       setNewContactName('');\n//       setNewContactAvatar('');\n//       setShowForm(false); // Hide the form after submission\n//     } catch (error) {\n//       console.error('Error adding contact:', error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <button onClick={() => setShowForm(!showForm)}>\n//         {showForm ? 'Cancel' : 'Create New Contact'}\n//       </button>\n\n//       {showForm && (\n//         <div className=\"new-contact-form\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Contact Name\"\n//             value={newContactName}\n//             onChange={(e) => setNewContactName(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Avatar URL\"\n//             value={newContactAvatar}\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\n//           />\n//           <button onClick={handleAddContact}>Save Contact</button>\n//         </div>\n//       )}\n\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Contacts;\n\n// \n\n// src/Contacts.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const category = params.get('category');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newContact, setNewContact] = useState({\n    name: '',\n    avatar: '',\n    email: '',\n    contact: ''\n  });\n  const [contacts, setContacts] = useState([]);\n\n  // Fetch initial contacts\n  useEffect(() => {\n    // Replace with API call if fetching from server\n    setContacts(contacts[category] || []);\n  }, [category]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewContact({\n      ...newContact,\n      [name]: value\n    });\n  };\n  const handleAddContact = () => {\n    if (!newContact.name || !newContact.avatar) {\n      alert('Please fill in the required fields.');\n      return;\n    }\n\n    // Replace with your backend endpoint\n    axios.post('http://localhost:5000/api/contacts', newContact).then(response => {\n      console.log('Contact added:', response.data);\n      // Update the UI by adding the new contact to the current list\n      setContacts([...contacts, newContact]);\n      setIsModalOpen(false);\n    }).catch(error => {\n      console.error('There was an error adding the contact!', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"PeoplePixel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-person-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-contact\",\n        onClick: () => {\n          setIsModalOpen(true);\n          console.log('Add Contact button clicked'); // Debugging line\n        },\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: contacts.length > 0 ? contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"card\",\n        to: `/contact?name=${contact.name}&avatar=${contact.avatar}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: contact.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-contacts\",\n        children: \"No contacts found for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newContact.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Avatar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"avatar\",\n            value: newContact.avatar,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: newContact.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"contact\",\n            value: newContact.contact,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddContact,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsModalOpen(false);\n            console.log('Modal closed'); // Debugging line\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"copyright\",\n        children: \"\\xA9 2024 PeoplePixel. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Contacts, \"GjUZGl0ni+zx0u/2GsNt4YV+k1g=\", false, function () {\n  return [useLocation];\n});\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Contacts","_s","location","params","URLSearchParams","search","category","get","isModalOpen","setIsModalOpen","newContact","setNewContact","name","avatar","email","contact","contacts","setContacts","handleInputChange","e","value","target","handleAddContact","alert","post","then","response","console","log","data","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","window","history","back","length","map","index","to","onChange","required","href","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/Contacts.js"],"sourcesContent":["\r\n// // src/Contacts.js\r\n// import React from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n\r\n// const sampleContacts = {\r\n//   Family: [\r\n//     { name: 'Alice', avatar: 'A' },\r\n//     { name: 'Bob', avatar: 'B' },\r\n//     { name: 'Charlie', avatar: 'C' },\r\n//     { name: 'David', avatar: 'D' },\r\n//   ],\r\n//   Friends: [\r\n//     { name: 'Charlie', avatar: 'C' },\r\n//     { name: 'David', avatar: 'D' },\r\n//   ],\r\n//   Others: [\r\n//     { name: 'Eve', avatar: 'E' },\r\n//     { name: 'Frank', avatar: 'F' },\r\n//   ],\r\n// };\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n\r\n//   const contacts = sampleContacts[category] || [];\r\n\r\n//   return (\r\n//     <>\r\n//       <header className=\"header\">\r\n//         <div className=\"logo\">PeoplePixel</div>\r\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n//         <div className=\"profile-icon\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//       </header>\r\n//       <h2>  <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button></h2>\r\n//       <h3><button className=\"add-contact\" >Add Contact</button></h3>\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//       <footer>\r\n//         <div className=\"footer-links\">\r\n//           <a href=\"#\">About</a>\r\n//           <a href=\"#\">Help</a>\r\n//           <a href=\"#\">Privacy Policy</a>\r\n//         </div>\r\n//         <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\r\n//       </footer>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       {/* ... your existing code ... */}\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//       {/* ... your existing code ... */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [newContactName, setNewContactName] = useState('');\r\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\r\n//   const [showForm, setShowForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   const handleAddContact = async () => {\r\n//     try {\r\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\r\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\r\n//       setContacts([...contacts, response.data]); // Update contacts state\r\n//       setNewContactName('');\r\n//       setNewContactAvatar('');\r\n//       setShowForm(false); // Hide the form after submission\r\n//     } catch (error) {\r\n//       console.error('Error adding contact:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={() => setShowForm(!showForm)}>\r\n//         {showForm ? 'Cancel' : 'Create New Contact'}\r\n//       </button>\r\n\r\n//       {showForm && (\r\n//         <div className=\"new-contact-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Contact Name\"\r\n//             value={newContactName}\r\n//             onChange={(e) => setNewContactName(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Avatar URL\"\r\n//             value={newContactAvatar}\r\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\r\n//           />\r\n//           <button onClick={handleAddContact}>Save Contact</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/Contacts.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\n\r\nconst Contacts = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const category = params.get('category');\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newContact, setNewContact] = useState({\r\n    name: '',\r\n    avatar: '',\r\n    email: '',\r\n    contact: ''\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  // Fetch initial contacts\r\n  useEffect(() => {\r\n    // Replace with API call if fetching from server\r\n    setContacts(contacts[category] || []);\r\n  }, [category]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewContact({ ...newContact, [name]: value });\r\n  };\r\n\r\n  const handleAddContact = () => {\r\n    if (!newContact.name || !newContact.avatar) {\r\n      alert('Please fill in the required fields.');\r\n      return;\r\n    }\r\n\r\n    // Replace with your backend endpoint\r\n    axios.post('http://localhost:5000/api/contacts', newContact)\r\n      .then(response => {\r\n        console.log('Contact added:', response.data);\r\n        // Update the UI by adding the new contact to the current list\r\n        setContacts([...contacts, newContact]);\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error adding the contact!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"logo\">PeoplePixel</div>\r\n        <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n        <div className=\"profile-icon\">\r\n          <i className=\"bi bi-person-circle\"></i>\r\n        </div>\r\n      </header>\r\n      <h2>\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n      </h2>\r\n      <h3>\r\n        <button className=\"add-contact\" onClick={() => {\r\n          setIsModalOpen(true);\r\n          console.log('Add Contact button clicked'); // Debugging line\r\n        }}>\r\n          Add Contact\r\n        </button>\r\n      </h3>\r\n      <div className=\"container\">\r\n        {contacts.length > 0 ? (\r\n          contacts.map((contact, index) => (\r\n            <Link\r\n              key={index}\r\n              className=\"card\"\r\n              to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n            >\r\n              <div className=\"avatar\">{contact.avatar}</div>\r\n              <p className=\"name\">{contact.name}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-contacts\">No contacts found for this category.</p>\r\n        )}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Add New Contact</h2>\r\n            <form>\r\n              <label>Name:</label>\r\n              <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\r\n              <label>Avatar:</label>\r\n              <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} required />\r\n              <label>Email:</label>\r\n              <input type=\"email\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\r\n              <label>Contact:</label>\r\n              <input type=\"text\" name=\"contact\" value={newContact.contact} onChange={handleInputChange} />\r\n            </form>\r\n            <button onClick={handleAddContact}>Save</button>\r\n            <button onClick={() => {\r\n              setIsModalOpen(false);\r\n              console.log('Modal closed'); // Debugging line\r\n            }}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <footer>\r\n        <div className=\"footer-links\">\r\n          <a href=\"#\">About</a>\r\n          <a href=\"#\">Help</a>\r\n          <a href=\"#\">Privacy Policy</a>\r\n        </div>\r\n        <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;;AAaA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}