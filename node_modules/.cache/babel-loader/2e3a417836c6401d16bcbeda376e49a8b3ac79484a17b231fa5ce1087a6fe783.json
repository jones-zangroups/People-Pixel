{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\Contacts.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n//   const [newContactName, setNewContactName] = useState('');\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []);\n\n//   const handleAddContact = async () => {\n//     try {\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\n//       setContacts([...contacts, response.data]); // Update contacts state\n//       setNewContactName('');\n//       setNewContactAvatar('');\n//       setShowForm(false); // Hide the form after submission\n//     } catch (error) {\n//       console.error('Error adding contact:', error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <button onClick={() => setShowForm(!showForm)}>\n//         {showForm ? 'Cancel' : 'Create New Contact'}\n//       </button>\n\n//       {showForm && (\n//         <div className=\"new-contact-form\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Contact Name\"\n//             value={newContactName}\n//             onChange={(e) => setNewContactName(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Avatar URL\"\n//             value={newContactAvatar}\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\n//           />\n//           <button onClick={handleAddContact}>Save Contact</button>\n//         </div>\n//       )}\n\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Contacts;\n\n// \n\n// // src/Contacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import axios from 'axios';\n\n// const Contacts = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [newContact, setNewContact] = useState({\n//     name: '',\n//     avatar: '',\n//     email: '',\n//     contact: ''\n//   });\n//   const [contacts, setContacts] = useState([]);\n\n//   // Fetch initial contacts\n//   useEffect(() => {\n//     // Replace with API call if fetching from server\n//     setContacts(contacts[category] || []);\n//   }, [category]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewContact({ ...newContact, [name]: value });\n//   };\n\n//   const handleAddContact = () => {\n//     if (!newContact.name || !newContact.avatar) {\n//       alert('Please fill in the required fields.');\n//       return;\n//     }\n\n//     // Replace with your backend endpoint\n//     axios.post('http://localhost:5000/api/contacts', newContact)\n//       .then(response => {\n//         console.log('Contact added:', response.data);\n//         setContacts([...contacts, newContact]);\n//         setIsModalOpen(false);\n//       })\n//       .catch(error => {\n//         console.error('There was an error adding the contact!', error);\n//       });\n//   };\n\n//   return (\n//     <>\n//       <header className=\"header\">\n//         <div className=\"logo\">PeoplePixel</div>\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\n//         <div className=\"profile-icon\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//       </header>\n//       <h2>\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </h2>\n//       <h3>\n//         <button className=\"add-contact\" onClick={() => {\n//           setIsModalOpen(true);\n//           console.log('Add Contact button clicked'); // Debugging line\n//         }}>\n//           Add Contact\n//         </button>\n//       </h3>\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n\n//       {isModalOpen && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <h2>Add New Contact</h2>\n//             <form>\n//               <label>Name:</label>\n//               <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\n//               <label>Avatar:</label>\n//               <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} required />\n//               <label>Email:</label>\n//               <input type=\"email\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\n//               <label>Contact:</label>\n//               <input type=\"text\" name=\"contact\" value={newContact.contact} onChange={handleInputChange} />\n//             </form>\n//             <button onClick={handleAddContact}>Save</button>\n//             <button onClick={() => {\n//               setIsModalOpen(false);\n//               console.log('Modal closed'); // Debugging line\n//             }}>Cancel</button>\n//           </div>\n//         </div>\n//       )}\n\n//       <footer>\n//         <div className=\"footer-links\">\n//           <a href=\"#\">About</a>\n//           <a href=\"#\">Help</a>\n//           <a href=\"#\">Privacy Policy</a>\n//         </div>\n//         <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\n//       </footer>\n//     </>\n//   );\n// };\n\n// export default Contacts;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [newContact, setNewContact] = useState({\n    name: '',\n    avatar: '',\n    category: ''\n  });\n  const category = 'YourCategoryName'; // Replace this with the actual category you want to fetch\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/contacts/${category}`);\n      setContacts(response.data);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n    }\n  };\n  const handleAddContact = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/contacts', newContact);\n      setNewContact({\n        name: '',\n        avatar: '',\n        category: ''\n      }); // Reset input fields\n      fetchContacts(); // Fetch contacts again to update the UI\n    } catch (error) {\n      console.error('Error adding contact:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddContact,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: newContact.name,\n        onChange: e => setNewContact({\n          ...newContact,\n          name: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Avatar URL\",\n        value: newContact.avatar,\n        onChange: e => setNewContact({\n          ...newContact,\n          avatar: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        value: newContact.category,\n        onChange: e => setNewContact({\n          ...newContact,\n          category: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: contact.avatar,\n          alt: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", contact.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, contact._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(Contacts, \"MNXWB9ysIN+c5NWIF4eMu8MbSc0=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","newContact","setNewContact","name","avatar","category","fetchContacts","response","get","data","error","console","handleAddContact","e","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","contact","src","alt","_id","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/Contacts.js"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [newContactName, setNewContactName] = useState('');\r\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\r\n//   const [showForm, setShowForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   const handleAddContact = async () => {\r\n//     try {\r\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\r\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\r\n//       setContacts([...contacts, response.data]); // Update contacts state\r\n//       setNewContactName('');\r\n//       setNewContactAvatar('');\r\n//       setShowForm(false); // Hide the form after submission\r\n//     } catch (error) {\r\n//       console.error('Error adding contact:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={() => setShowForm(!showForm)}>\r\n//         {showForm ? 'Cancel' : 'Create New Contact'}\r\n//       </button>\r\n\r\n//       {showForm && (\r\n//         <div className=\"new-contact-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Contact Name\"\r\n//             value={newContactName}\r\n//             onChange={(e) => setNewContactName(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Avatar URL\"\r\n//             value={newContactAvatar}\r\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\r\n//           />\r\n//           <button onClick={handleAddContact}>Save Contact</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/Contacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import axios from 'axios';\r\n\r\n// const Contacts = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [newContact, setNewContact] = useState({\r\n//     name: '',\r\n//     avatar: '',\r\n//     email: '',\r\n//     contact: ''\r\n//   });\r\n//   const [contacts, setContacts] = useState([]);\r\n\r\n//   // Fetch initial contacts\r\n//   useEffect(() => {\r\n//     // Replace with API call if fetching from server\r\n//     setContacts(contacts[category] || []);\r\n//   }, [category]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewContact({ ...newContact, [name]: value });\r\n//   };\r\n\r\n//   const handleAddContact = () => {\r\n//     if (!newContact.name || !newContact.avatar) {\r\n//       alert('Please fill in the required fields.');\r\n//       return;\r\n//     }\r\n\r\n//     // Replace with your backend endpoint\r\n//     axios.post('http://localhost:5000/api/contacts', newContact)\r\n//       .then(response => {\r\n//         console.log('Contact added:', response.data);\r\n//         setContacts([...contacts, newContact]);\r\n//         setIsModalOpen(false);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('There was an error adding the contact!', error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <header className=\"header\">\r\n//         <div className=\"logo\">PeoplePixel</div>\r\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n//         <div className=\"profile-icon\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//       </header>\r\n//       <h2>\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </h2>\r\n//       <h3>\r\n//         <button className=\"add-contact\" onClick={() => {\r\n//           setIsModalOpen(true);\r\n//           console.log('Add Contact button clicked'); // Debugging line\r\n//         }}>\r\n//           Add Contact\r\n//         </button>\r\n//       </h3>\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       {isModalOpen && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h2>Add New Contact</h2>\r\n//             <form>\r\n//               <label>Name:</label>\r\n//               <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\r\n//               <label>Avatar:</label>\r\n//               <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} required />\r\n//               <label>Email:</label>\r\n//               <input type=\"email\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\r\n//               <label>Contact:</label>\r\n//               <input type=\"text\" name=\"contact\" value={newContact.contact} onChange={handleInputChange} />\r\n//             </form>\r\n//             <button onClick={handleAddContact}>Save</button>\r\n//             <button onClick={() => {\r\n//               setIsModalOpen(false);\r\n//               console.log('Modal closed'); // Debugging line\r\n//             }}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <footer>\r\n//         <div className=\"footer-links\">\r\n//           <a href=\"#\">About</a>\r\n//           <a href=\"#\">Help</a>\r\n//           <a href=\"#\">Privacy Policy</a>\r\n//         </div>\r\n//         <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\r\n//       </footer>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Contacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [newContact, setNewContact] = useState({ name: '', avatar: '', category: '' });\r\n  const category = 'YourCategoryName'; // Replace this with the actual category you want to fetch\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const fetchContacts = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/contacts/${category}`);\r\n      setContacts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching contacts:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddContact = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/contacts', newContact);\r\n      setNewContact({ name: '', avatar: '', category: '' }); // Reset input fields\r\n      fetchContacts(); // Fetch contacts again to update the UI\r\n    } catch (error) {\r\n      console.error('Error adding contact:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n      <form onSubmit={handleAddContact}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={newContact.name}\r\n          onChange={(e) => setNewContact({ ...newContact, name: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Avatar URL\"\r\n          value={newContact.avatar}\r\n          onChange={(e) => setNewContact({ ...newContact, avatar: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Category\"\r\n          value={newContact.category}\r\n          onChange={(e) => setNewContact({ ...newContact, category: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Contact</button>\r\n      </form>\r\n      <div>\r\n        {contacts.map((contact) => (\r\n          <div key={contact._id}>\r\n            <h2>{contact.name}</h2>\r\n            <img src={contact.avatar} alt={contact.name} />\r\n            <p>Category: {contact.category}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}