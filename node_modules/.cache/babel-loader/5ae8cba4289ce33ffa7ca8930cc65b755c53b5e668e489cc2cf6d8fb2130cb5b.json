{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\n// import TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\n\n//   // Fetch todos for the contact when component mounts\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         // Replace this URL with your API to fetch todos for a specific contact\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\n//         setTodos(response.data);\n//       } catch (error) {\n//         console.error('Error fetching todos:', error);\n//       }\n//     };\n\n//     fetchTodos();\n//   }, [params.get('id')]); // Trigger fetch whenever the contact ID changes\n\n//   // Handle adding a new todo\n//   const addTodo = async (newTodoText) => {\n//     try {\n//       const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\n//       const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n//       setTodos([...todos, response.data]); // Add the new todo to the list\n//     } catch (error) {\n//       console.error('Error adding todo in contact:', error);\n//     }\n//   };\n\n//   // Handle toggling todo completion\n//   const toggleTodo = async (todoId) => {\n//     try {\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\n//       updatedTodo.completed = !updatedTodo.completed;\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\n//     } catch (error) {\n//       console.error('Error toggling todo completion:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             <div className=\"todo-header\">\n//               <button\n//                 className=\"add-button\"\n//                 onClick={() => {\n//                   const newTodoText = prompt('Enter new todo:');\n//                   if (newTodoText) addTodo(newTodoText);\n//                 }}\n//               >\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\n//               </button>\n//             </div>\n//             <div className=\"todo-list\">\n//               {todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => toggleTodo(todo._id)}\n//                     />\n//                     <span>{todo.text}</span>\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// src/IndividualContact.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\nimport { fetchTodos, addTodo, toggleTodo } from './api'; // Import API functions\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId'); // Ensure contactId is retrieved\n\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const todos = await fetchTodos(contactId);\n        setTodos(todos);\n      } catch (error) {\n        console.error('Error loading todos:', error);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const addTodo = async (contactId, newTodoText) => {\n    try {\n      const response = await fetch(`${API_URL}/contacts/${contactId}/todos`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: newTodoText,\n          completed: false\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add todo');\n      }\n      return response.json();\n    } catch (error) {\n      console.error('Error adding todo:', error);\n      throw error;\n    }\n  };\n  const handleAddTodo = async () => {\n    const newTodoText = prompt('Enter new todo:');\n    if (newTodoText) {\n      try {\n        const newTodo = await addTodo(contactId, newTodoText);\n        setTodos([...todos, newTodo]);\n      } catch (error) {\n        console.error('Error adding todo:', error);\n      }\n    }\n  };\n  const handleToggleTodo = async todoId => {\n    try {\n      const updatedTodo = todos.find(todo => todo._id === todoId);\n      updatedTodo.completed = !updatedTodo.completed;\n      const toggledTodo = await toggleTodo(contactId, todoId, updatedTodo.completed);\n      setTodos(todos.map(todo => todo._id === todoId ? toggledTodo : todo));\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            onClick: handleAddTodo,\n            children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), \" Add New Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No todos found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${todo.completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 21\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"xKWz6IClZxTznROeG7x8plW2p6A=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","fetchTodos","addTodo","toggleTodo","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","activeTab","setActiveTab","todos","setTodos","loadTodos","error","console","newTodoText","response","fetch","API_URL","method","headers","body","JSON","stringify","text","completed","ok","Error","json","handleAddTodo","prompt","newTodo","handleToggleTodo","todoId","updatedTodo","find","todo","_id","toggledTodo","map","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","type","checked","onChange","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["// //src/IndividualContacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n// import TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  \r\n\r\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\r\n\r\n//   // Fetch todos for the contact when component mounts\r\n//   useEffect(() => {\r\n//     const fetchTodos = async () => {\r\n//       try {\r\n//         // Replace this URL with your API to fetch todos for a specific contact\r\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\r\n//         setTodos(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching todos:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTodos();\r\n//   }, [params.get('id')]); // Trigger fetch whenever the contact ID changes\r\n\r\n//   // Handle adding a new todo\r\n//   const addTodo = async (newTodoText) => {\r\n//     try {\r\n//       const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\r\n//       const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n//       setTodos([...todos, response.data]); // Add the new todo to the list\r\n//     } catch (error) {\r\n//       console.error('Error adding todo in contact:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle toggling todo completion\r\n//   const toggleTodo = async (todoId) => {\r\n//     try {\r\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\r\n//       updatedTodo.completed = !updatedTodo.completed;\r\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error toggling todo completion:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             <div className=\"todo-header\">\r\n//               <button\r\n//                 className=\"add-button\"\r\n//                 onClick={() => {\r\n//                   const newTodoText = prompt('Enter new todo:');\r\n//                   if (newTodoText) addTodo(newTodoText);\r\n//                 }}\r\n//               >\r\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"todo-list\">\r\n//               {todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => toggleTodo(todo._id)}\r\n//                     />\r\n//                     <span>{todo.text}</span>\r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/IndividualContact.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\nimport { fetchTodos, addTodo, toggleTodo } from './api'; // Import API functions\r\nimport './styles.css';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId'); // Ensure contactId is retrieved\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        const todos = await fetchTodos(contactId);\r\n        setTodos(todos);\r\n      } catch (error) {\r\n        console.error('Error loading todos:', error);\r\n      }\r\n    };\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n\r\n  const addTodo = async (contactId, newTodoText) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/contacts/${contactId}/todos`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text: newTodoText, completed: false }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add todo');\r\n      }\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAddTodo = async () => {\r\n    const newTodoText = prompt('Enter new todo:');\r\n    if (newTodoText) {\r\n      try {\r\n        const newTodo = await addTodo(contactId, newTodoText);\r\n        setTodos([...todos, newTodo]);\r\n      } catch (error) {\r\n        console.error('Error adding todo:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = todos.find((todo) => todo._id === todoId);\r\n      updatedTodo.completed = !updatedTodo.completed;\r\n      const toggledTodo = await toggleTodo(contactId, todoId, updatedTodo.completed);\r\n      setTodos(todos.map((todo) => (todo._id === todoId ? toggledTodo : todo)));\r\n    } catch (error) {\r\n      console.error('Error toggling todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            <div className=\"todo-header\">\r\n              <button\r\n                className=\"add-button\"\r\n                onClick={handleAddTodo}\r\n              >\r\n                <FaPlusCircle className=\"icon\" /> Add New Todo\r\n              </button>\r\n            </div>\r\n            <div className=\"todo-list\">\r\n              {todos.length === 0 ? (\r\n                <p>No todos found</p>\r\n              ) : (\r\n                todos.map((todo) => (\r\n                  <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => handleToggleTodo(todo._id)}\r\n                    />\r\n                    <span>{todo.text}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAeA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,QAAQ,gBAAgB;AACrF,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO,CAAC,CAAC;AACzD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC;EACnC,MAAME,SAAS,GAAGN,MAAM,CAACI,GAAG,CAAC,WAAW,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}