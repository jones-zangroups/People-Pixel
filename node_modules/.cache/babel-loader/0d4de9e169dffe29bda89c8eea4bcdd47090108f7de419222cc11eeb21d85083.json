{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\n// import TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\n\n//   // Fetch todos for the contact when component mounts\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         // Replace this URL with your API to fetch todos for a specific contact\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\n//         setTodos(response.data);\n//       } catch (error) {\n//         console.error('Error fetching todos:', error);\n//       }\n//     };\n\n//     fetchTodos();\n//   }, [params.get('id')]); // Trigger fetch whenever the contact ID changes\n\n//   // Handle adding a new todo\n//   const addTodo = async (newTodoText) => {\n//     try {\n//       const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\n//       const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n//       setTodos([...todos, response.data]); // Add the new todo to the list\n//     } catch (error) {\n//       console.error('Error adding todo in contact:', error);\n//     }\n//   };\n\n//   // Handle toggling todo completion\n//   const toggleTodo = async (todoId) => {\n//     try {\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\n//       updatedTodo.completed = !updatedTodo.completed;\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\n//     } catch (error) {\n//       console.error('Error toggling todo completion:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             <div className=\"todo-header\">\n//               <button\n//                 className=\"add-button\"\n//                 onClick={() => {\n//                   const newTodoText = prompt('Enter new todo:');\n//                   if (newTodoText) addTodo(newTodoText);\n//                 }}\n//               >\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\n//               </button>\n//             </div>\n//             <div className=\"todo-list\">\n//               {todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => toggleTodo(todo._id)}\n//                     />\n//                     <span>{todo.text}</span>\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const contactId = params.get('contactId'); // Get the contact ID from URL\n  const name = params.get('name'); // Get the contact name from URL\n  const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [finances, setFinances] = useState([]);\n\n  // Fetch todos for the contact when component mounts\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const todosData = await fetchTodos(contactId);\n        setTodos(todosData);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n\n  // Handle adding a new todo\n  const handleAddTodo = async () => {\n    const newTodo = {\n      text: todoText,\n      priority: todoPriority,\n      dueDate: todoDueDate\n    };\n    try {\n      await addTodo(contactId, newTodo);\n      // Additional logic for updating the UI\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  // Handle toggling todo completion\n  const handleToggleTodo = async todoId => {\n    const todo = todos.find(todo => todo._id === todoId);\n    if (todo) {\n      try {\n        const updatedTodo = await toggleTodo(todoId, !todo.completed);\n        setTodos(todos.map(t => t._id === todoId ? updatedTodo : t));\n      } catch (error) {\n        console.error('Error toggling todo completion:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            onClick: handleAddTodo,\n            children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), \" Add New Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No todos found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${todo.completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"l8Lr+vwD3qbdzshGKcBjQHFqutU=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","contactId","get","name","avatar","activeTab","setActiveTab","todos","setTodos","reminders","setReminders","finances","setFinances","loadTodos","todosData","error","console","handleAddTodo","newTodo","text","todoText","priority","todoPriority","dueDate","todoDueDate","handleToggleTodo","todoId","todo","find","_id","updatedTodo","completed","map","t","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","type","checked","onChange","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["// //src/IndividualContacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n// import TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  \r\n\r\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\r\n\r\n//   // Fetch todos for the contact when component mounts\r\n//   useEffect(() => {\r\n//     const fetchTodos = async () => {\r\n//       try {\r\n//         // Replace this URL with your API to fetch todos for a specific contact\r\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\r\n//         setTodos(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching todos:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTodos();\r\n//   }, [params.get('id')]); // Trigger fetch whenever the contact ID changes\r\n\r\n//   // Handle adding a new todo\r\n//   const addTodo = async (newTodoText) => {\r\n//     try {\r\n//       const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\r\n//       const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n//       setTodos([...todos, response.data]); // Add the new todo to the list\r\n//     } catch (error) {\r\n//       console.error('Error adding todo in contact:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle toggling todo completion\r\n//   const toggleTodo = async (todoId) => {\r\n//     try {\r\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\r\n//       updatedTodo.completed = !updatedTodo.completed;\r\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error toggling todo completion:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             <div className=\"todo-header\">\r\n//               <button\r\n//                 className=\"add-button\"\r\n//                 onClick={() => {\r\n//                   const newTodoText = prompt('Enter new todo:');\r\n//                   if (newTodoText) addTodo(newTodoText);\r\n//                 }}\r\n//               >\r\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"todo-list\">\r\n//               {todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => toggleTodo(todo._id)}\r\n//                     />\r\n//                     <span>{todo.text}</span>\r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const contactId = params.get('contactId'); // Get the contact ID from URL\r\n  const name = params.get('name'); // Get the contact name from URL\r\n  const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [reminders, setReminders] = useState([]);\r\n  const [finances, setFinances] = useState([]);\r\n\r\n  // Fetch todos for the contact when component mounts\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        const todosData = await fetchTodos(contactId);\r\n        setTodos(todosData);\r\n      } catch (error) {\r\n        console.error('Error fetching todos:', error);\r\n      }\r\n    };\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n  // Handle adding a new todo\r\n  const handleAddTodo = async () => {\r\n    const newTodo = {\r\n      text: todoText,\r\n      priority: todoPriority,\r\n      dueDate: todoDueDate,\r\n    };\r\n  \r\n    try {\r\n      await addTodo(contactId, newTodo);\r\n      // Additional logic for updating the UI\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle toggling todo completion\r\n  const handleToggleTodo = async (todoId) => {\r\n    const todo = todos.find(todo => todo._id === todoId);\r\n    if (todo) {\r\n      try {\r\n        const updatedTodo = await toggleTodo(todoId, !todo.completed);\r\n        setTodos(todos.map(t => (t._id === todoId ? updatedTodo : t)));\r\n      } catch (error) {\r\n        console.error('Error toggling todo completion:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            <div className=\"todo-header\">\r\n              <button className=\"add-button\" onClick={handleAddTodo}>\r\n                <FaPlusCircle className=\"icon\" /> Add New Todo\r\n              </button>\r\n            </div>\r\n            <div className=\"todo-list\">\r\n              {todos.length === 0 ? (\r\n                <p>No todos found</p>\r\n              ) : (\r\n                todos.map(todo => (\r\n                  <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => handleToggleTodo(todo._id)}\r\n                    />\r\n                    <span>{todo.text}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAeA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;EAC3C,MAAMC,IAAI,GAAGL,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EACjC,MAAME,MAAM,GAAGN,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAErC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAM6B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAM5B,UAAU,CAACe,SAAS,CAAC;QAC7CO,QAAQ,CAACM,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAEC,QAAQ;MACdC,QAAQ,EAAEC,YAAY;MACtBC,OAAO,EAAEC;IACX,CAAC;IAED,IAAI;MACF,MAAMrC,OAAO,CAACc,SAAS,EAAEiB,OAAO,CAAC;MACjC;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAGD;EACA,MAAMU,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,MAAMC,IAAI,GAAGpB,KAAK,CAACqB,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKH,MAAM,CAAC;IACpD,IAAIC,IAAI,EAAE;MACR,IAAI;QACF,MAAMG,WAAW,GAAG,MAAM1C,UAAU,CAACsC,MAAM,EAAE,CAACC,IAAI,CAACI,SAAS,CAAC;QAC7DvB,QAAQ,CAACD,KAAK,CAACyB,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACJ,GAAG,KAAKH,MAAM,GAAGI,WAAW,GAAGG,CAAE,CAAC,CAAC;MAChE,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF;EACF,CAAC;EAED,oBACErB,OAAA;IAAKwC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCzC,OAAA;MAAQwC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBzC,OAAA;QAAQwC,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eAETjD,OAAA;MAAKwC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BzC,OAAA;QAAKwC,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BzC,OAAA;UAAKkD,GAAG,EAAExC,MAAM,IAAI,qBAAsB;UAACyC,GAAG,EAAE,GAAG1C,IAAI;QAAY;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACNjD,OAAA;QAAAyC,QAAA,EAAKhC,IAAI,IAAI;MAAS;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENjD,OAAA;MAAKwC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBzC,OAAA;QACEwC,SAAS,EAAE,OAAO7B,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzD+B,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,MAAM,CAAE;QAAA6B,QAAA,gBAEpCzC,OAAA,CAACL,aAAa;UAAC6C,SAAS,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SACpC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QACEwC,SAAS,EAAE,OAAO7B,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC7D+B,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,UAAU,CAAE;QAAA6B,QAAA,gBAExCzC,OAAA,CAACJ,MAAM;UAAC4C,SAAS,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,aAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QACEwC,SAAS,EAAE,OAAO7B,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC5D+B,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,SAAS,CAAE;QAAA6B,QAAA,gBAEvCzC,OAAA,CAACH,eAAe;UAAC2C,SAAS,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,YACtC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENjD,OAAA;MAAKwC,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzB9B,SAAS,KAAK,MAAM,iBACnBX,OAAA;QAAKwC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BzC,OAAA;UAAKwC,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BzC,OAAA;YAAQwC,SAAS,EAAC,YAAY;YAACE,OAAO,EAAEnB,aAAc;YAAAkB,QAAA,gBACpDzC,OAAA,CAACF,YAAY;cAAC0C,SAAS,EAAC;YAAM;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBACnC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjD,OAAA;UAAKwC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvB5B,KAAK,CAACuC,MAAM,KAAK,CAAC,gBACjBpD,OAAA;YAAAyC,QAAA,EAAG;UAAc;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,GAErBpC,KAAK,CAACyB,GAAG,CAACL,IAAI,iBACZjC,OAAA;YAAoBwC,SAAS,EAAE,aAAaP,IAAI,CAACI,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;YAAAI,QAAA,gBAC9EzC,OAAA;cACEqD,IAAI,EAAC,UAAU;cACfC,OAAO,EAAErB,IAAI,CAACI,SAAU;cACxBkB,QAAQ,EAAEA,CAAA,KAAMxB,gBAAgB,CAACE,IAAI,CAACE,GAAG;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,eACFjD,OAAA;cAAAyC,QAAA,EAAOR,IAAI,CAACR;YAAI;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GANhBhB,IAAI,CAACE,GAAG;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOb,CACN;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAtC,SAAS,KAAK,UAAU,iBACvBX,OAAA;QAAKwC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BzC,OAAA;UAAQwC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACN,EAEAtC,SAAS,KAAK,SAAS,iBACtBX,OAAA;QAAKwC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BzC,OAAA;UAAQwC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAlIID,iBAAiB;EAAA,QACJV,WAAW;AAAA;AAAAiE,EAAA,GADxBvD,iBAAiB;AAoIvB,eAAeA,iBAAiB;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}