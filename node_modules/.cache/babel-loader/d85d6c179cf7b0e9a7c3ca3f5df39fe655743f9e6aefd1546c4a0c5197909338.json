{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\Contacts.js\",\n  _s = $RefreshSig$();\n// src/Contacts.js\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sampleContacts = {\n  Family: [{\n    name: 'Alice',\n    avatar: 'A'\n  }, {\n    name: 'Bob',\n    avatar: 'B'\n  }, {\n    name: 'Charlie',\n    avatar: 'C'\n  }, {\n    name: 'David',\n    avatar: 'D'\n  }],\n  Friends: [{\n    name: 'Charlie',\n    avatar: 'C'\n  }, {\n    name: 'David',\n    avatar: 'D'\n  }],\n  Others: [{\n    name: 'Eve',\n    avatar: 'E'\n  }, {\n    name: 'Frank',\n    avatar: 'F'\n  }]\n};\nfunction Contacts() {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const category = params.get('category');\n  const contacts = sampleContacts[category] || [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"PeoplePixel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-person-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: contacts.length > 0 ? contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"card\",\n        to: `/contact?name=${contact.name}&avatar=${contact.avatar}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: contact.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-contacts\",\n        children: \"No contacts found for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Privacy Policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"copyright\",\n        children: \"\\xA9 2024 PeoplePixel. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Contacts, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Contacts;\nexport default Contacts;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []);\n\n//   return (\n//     <>\n//       {/* ... your existing code ... */}\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//       {/* ... your existing code ... */}\n//     </>\n//   );\n// }\n\n// export default Contacts;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n//   const [newContactName, setNewContactName] = useState('');\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n\n//     fetchContacts();\n//   }, []);\n\n//   const handleAddContact = async () => {\n//     try {\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\n//       setContacts([...contacts, response.data]); // Update contacts state\n//       setNewContactName('');\n//       setNewContactAvatar('');\n//       setShowForm(false); // Hide the form after submission\n//     } catch (error) {\n//       console.error('Error adding contact:', error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <button onClick={() => setShowForm(!showForm)}>\n//         {showForm ? 'Cancel' : 'Create New Contact'}\n//       </button>\n\n//       {showForm && (\n//         <div className=\"new-contact-form\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Contact Name\"\n//             value={newContactName}\n//             onChange={(e) => setNewContactName(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Avatar URL\"\n//             value={newContactAvatar}\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\n//           />\n//           <button onClick={handleAddContact}>Save Contact</button>\n//         </div>\n//       )}\n\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useLocation","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","sampleContacts","Family","name","avatar","Friends","Others","Contacts","_s","location","params","URLSearchParams","search","category","get","contacts","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","window","history","back","length","map","contact","index","to","href","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/Contacts.js"],"sourcesContent":["\r\n// src/Contacts.js\r\nimport React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst sampleContacts = {\r\n  Family: [\r\n    { name: 'Alice', avatar: 'A' },\r\n    { name: 'Bob', avatar: 'B' },\r\n    { name: 'Charlie', avatar: 'C' },\r\n    { name: 'David', avatar: 'D' },\r\n  ],\r\n  Friends: [\r\n    { name: 'Charlie', avatar: 'C' },\r\n    { name: 'David', avatar: 'D' },\r\n  ],\r\n  Others: [\r\n    { name: 'Eve', avatar: 'E' },\r\n    { name: 'Frank', avatar: 'F' },\r\n  ],\r\n};\r\n\r\nfunction Contacts() {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const category = params.get('category');\r\n\r\n  const contacts = sampleContacts[category] || [];\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"logo\">PeoplePixel</div>\r\n        <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n        <div className=\"profile-icon\">\r\n          <i className=\"bi bi-person-circle\"></i>\r\n        </div>\r\n      </header>\r\n      <h2>  <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button></h2>\r\n      <h3><button className=\"add-contact\" ></button></h3>\r\n      <div className=\"container\">\r\n        {contacts.length > 0 ? (\r\n          contacts.map((contact, index) => (\r\n            <Link\r\n              key={index}\r\n              className=\"card\"\r\n              to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n            >\r\n              <div className=\"avatar\">{contact.avatar}</div>\r\n              <p className=\"name\">{contact.name}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-contacts\">No contacts found for this category.</p>\r\n        )}\r\n      </div>\r\n      <footer>\r\n        <div className=\"footer-links\">\r\n          <a href=\"#\">About</a>\r\n          <a href=\"#\">Help</a>\r\n          <a href=\"#\">Privacy Policy</a>\r\n        </div>\r\n        <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       {/* ... your existing code ... */}\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//       {/* ... your existing code ... */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [newContactName, setNewContactName] = useState('');\r\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\r\n//   const [showForm, setShowForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   const handleAddContact = async () => {\r\n//     try {\r\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\r\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\r\n//       setContacts([...contacts, response.data]); // Update contacts state\r\n//       setNewContactName('');\r\n//       setNewContactAvatar('');\r\n//       setShowForm(false); // Hide the form after submission\r\n//     } catch (error) {\r\n//       console.error('Error adding contact:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={() => setShowForm(!showForm)}>\r\n//         {showForm ? 'Cancel' : 'Create New Contact'}\r\n//       </button>\r\n\r\n//       {showForm && (\r\n//         <div className=\"new-contact-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Contact Name\"\r\n//             value={newContactName}\r\n//             onChange={(e) => setNewContactName(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Avatar URL\"\r\n//             value={newContactAvatar}\r\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\r\n//           />\r\n//           <button onClick={handleAddContact}>Save Contact</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}