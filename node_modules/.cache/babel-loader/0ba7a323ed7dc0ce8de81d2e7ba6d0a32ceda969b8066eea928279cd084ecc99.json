{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s2 = $RefreshSig$();\n// src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo, fetchReminders, addReminder, updateReminder, deleteReminder } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [sortOption, setSortOption] = useState(\"\");\n  const [filterPriority, setFilterPriority] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n\n  //reminder\n  const [reminders, setReminders] = useState([]);\n  const [newReminderText, setNewReminderText] = useState('');\n  const [newReminderDate, setNewReminderDate] = useState('');\n  const [newReminderTime, setNewReminderTime] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [isReminderFormVisible, setReminderFormVisible] = useState(false);\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    try {\n      const newTodo = {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      };\n      const response = await addTodo(contactId, newTodo);\n      setTodos([...todos, response]);\n      setNewTodoText('');\n      setNewTodoPriority('Medium');\n      setNewTodoDueDate('');\n      setTodoFormVisible(false);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n    }\n  };\n\n  //loads reminder if active\n  useEffect(() => {\n    if (activeTab === 'reminder') {\n      loadReminders();\n    }\n  }, [activeTab, contactId]);\n  const loadReminders = async () => {\n    try {\n      const reminderData = await fetchReminders(contactId);\n      setReminders(reminderData);\n    } catch (error) {\n      console.error('Failed to load reminders:', error);\n    }\n  };\n  const IndividualContact = () => {\n    _s();\n    const [isCalendarView, setIsCalendarView] = useState(true);\n    const [selectedDateReminders, setSelectedDateReminders] = useState([]);\n    const handleDayClick = date => {\n      const remindersForDate = reminders.filter(reminder => new Date(reminder.date).toDateString() === date.toDateString());\n      setSelectedDateReminders(remindersForDate);\n    };\n    const toggleView = () => setIsCalendarView(!isCalendarView);\n    const handleAddReminder = async e => {\n      e.preventDefault();\n      const newReminder = {\n        text: newReminderText,\n        date: newReminderDate,\n        time: newReminderTime,\n        isRecurring\n      };\n      try {\n        const addedReminder = await addReminder(contactId, newReminder);\n        setReminders([...reminders, addedReminder]);\n        setNewReminderText('');\n        setNewReminderDate('');\n        setNewReminderTime('');\n        setIsRecurring(false);\n      } catch (error) {\n        console.error('Failed to add reminder:', error);\n      }\n    };\n    const handleDeleteReminder = async reminderId => {\n      try {\n        await deleteReminder(reminderId);\n        setReminders(reminders.filter(reminder => reminder._id !== reminderId));\n      } catch (error) {\n        console.error('Failed to delete reminder:', error);\n      }\n    };\n    const notifyDueReminders = () => {\n      reminders.forEach(reminder => {\n        const reminderDate = new Date(`${reminder.date}T${reminder.time}`);\n        if (reminderDate - new Date() < 60000) {\n          // Check if reminder is within the next minute\n          if (Notification.permission === 'granted') {\n            new Notification('Reminder', {\n              body: reminder.text\n            });\n          }\n        }\n      });\n    };\n    useEffect(() => {\n      if (Notification.permission !== 'granted') {\n        Notification.requestPermission();\n      }\n      const interval = setInterval(notifyDueReminders, 60000); // Check every minute\n      return () => clearInterval(interval);\n    }, [reminders]);\n\n    //end for crud for reminder\n\n    const filteredAndSortedTodos = todos.filter(todo => {\n      if (filterPriority && todo.priority !== filterPriority) return false;\n      if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\n      return true;\n    }).sort((a, b) => {\n      if (sortOption === \"date\") {\n        return new Date(a.dueDate) - new Date(b.dueDate);\n      } else if (sortOption === \"priority\") {\n        const priorities = {\n          High: 1,\n          Medium: 2,\n          Low: 3\n        };\n        return priorities[a.priority] - priorities[b.priority];\n      } else if (sortOption === \"status\") {\n        return a.completed === b.completed ? 0 : a.completed ? -1 : 1;\n      }\n      return 0;\n    });\n    const handleUpdateTodo = async todoId => {\n      try {\n        const updatedTodo = await updateTodo(todoId, {\n          text: newTodoText,\n          priority: newTodoPriority,\n          dueDate: newTodoDueDate\n        });\n        setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n        setSelectedTodo(null); // Close the update form\n      } catch (err) {\n        setError('Failed to update todo: ' + err.message);\n      }\n    };\n    const handleDeleteTodo = async todoId => {\n      const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\n      if (confirmDelete) {\n        try {\n          await deleteTodo(todoId);\n          setTodos(todos.filter(todo => todo._id !== todoId));\n        } catch (err) {\n          setError('Failed to delete todo: ' + err.message);\n        }\n      }\n    };\n    const handleToggleTodo = async (todoId, completed) => {\n      try {\n        const updatedTodo = await toggleTodo(todoId, !completed);\n        setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n      } catch (err) {\n        setError('Failed to update todo: ' + err.message);\n      }\n    };\n    const showUpdateForm = todo => {\n      setSelectedTodo(todo);\n      setNewTodoText(todo.text);\n      setNewTodoPriority(todo.priority);\n      setNewTodoDueDate(todo.dueDate.split('T')[0]);\n    };\n    const resetFilters = () => {\n      setFilterPriority('');\n      setFilterStatus('');\n      setSortOption('');\n    };\n\n    //   return (\n    //     <div className=\"individual-contact\">\n    //       <header className=\"header\">\n    //         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\n    //       </header>\n\n    //       <div className=\"contact-summary\">\n    //         <div className=\"contact-photo\">\n    //           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n    //         </div>\n    //         <h2>{name || \"Contact\"}</h2>\n    //       </div>\n\n    //       <div className=\"tab-bar\">\n    //         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\n    //           <FaCheckSquare className=\"icon\" /> Todo\n    //         </button>\n    //         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\n    //           <FaBell className=\"icon\" /> Reminder\n    //         </button>\n    //         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\n    //           <FaMoneyBillWave className=\"icon\" /> Finance\n    //         </button>\n    //       </div>\n\n    //       <div className=\"tab-content\">\n    //         <div className=\"sorting-filtering\">\n    //           <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\n    //             <option value=\"\">Sort by</option>\n    //             <option value=\"date\">Due Date</option>\n    //             <option value=\"priority\">Priority</option>\n    //             <option value=\"status\">Status</option>\n    //           </select>\n\n    //           <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\n    //             <option value=\"\">Filter by Priority</option>\n    //             <option value=\"High\">High</option>\n    //             <option value=\"Medium\">Medium</option>\n    //             <option value=\"Low\">Low</option>\n    //           </select>\n\n    //           <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\n    //             <option value=\"\">Filter by Status</option>\n    //             <option value=\"completed\">Completed</option>\n    //             <option value=\"notCompleted\">Not Completed</option>\n    //           </select>\n\n    //           <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\n    //         </div>\n\n    //         {activeTab === 'todo' && (\n    //           <div className=\"todo-content\">\n    //             {error && <div className=\"error-message\">{error}</div>}\n\n    //             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\n    //               <FaPlusCircle className=\"icon\" /> Add New Todo\n    //             </button>\n\n    //             {isTodoFormVisible && (\n    //               <div className=\"todo-form-overlay\">\n    //                 <form onSubmit={handleAddTodo} className=\"todo-form\">\n    //                   <input\n    //                     type=\"text\"\n    //                     value={newTodoText}\n    //                     onChange={(e) => setNewTodoText(e.target.value)}\n    //                     placeholder=\"New todo text\"\n    //                     required\n    //                   />\n    //                   <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\n    //                     <option value=\"High\"> High </option>\n    //                     <option value=\"Medium\">Medium</option>\n    //                     <option value=\"Low\"> Low  </option>\n    //                   </select>\n    //                   <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\n    //                   <button type=\"submit\">Save Todo</button>\n    //                   <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\n    //                 </form>\n    //               </div>\n    //             )}\n\n    //             <div className=\"todo-list\">\n    //               {loading ? (\n    //                 <p>Loading todos...</p>\n    //               ) : filteredAndSortedTodos.map(todo => (\n    //                 <div key={todo._id} className=\"todo-item\">\n    //                   <span>{todo.text}</span>\n    //                   <span>{todo.priority}</span>\n    //                   <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\n    //                   <button onClick={() => showUpdateForm(todo)}>Update</button>\n    //                   <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n    //                   <input\n    //                     type=\"checkbox\"\n    //                     checked={todo.completed}\n    //                     onChange={() => handleToggleTodo(todo._id, todo.completed)}\n    //                   />\n    //                 </div>\n    //               ))}\n    //             </div>\n    //             {selectedTodo && (\n    //               <div className=\"centered-container\">\n    //               <form onSubmit={(e) => {\n    //                 e.preventDefault();\n    //                 handleUpdateTodo(selectedTodo._id);\n    //               }} className=\"update-form\">\n    //                 <input\n    //                   type=\"text\"\n    //                   value={newTodoText}\n    //                   onChange={(e) => setNewTodoText(e.target.value)}\n    //                   required\n    //                 />\n    //                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\n    //                   <option value=\"High\"> High </option>\n    //                   <option value=\"Medium\">Medium</option>\n    //                   <option value=\"Low\"> Low  </option>\n    //                 </select>\n    //                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\n    //                 <button type=\"submit\">Update Todo</button>\n    //                 <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\n    //               </form>\n    //               </div>\n    //             )}\n    //           </div>\n    //         )}\n\n    //       </div>\n    //     </div>\n    //   );\n    // };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individual-contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => window.history.back(),\n          children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 9\n          }, this), \" Contacts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-photo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar || '/default-avatar.jpg',\n            alt: `${name}'s avatar`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name || \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n          onClick: () => setActiveTab('todo'),\n          children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 9\n          }, this), \" Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n          onClick: () => setActiveTab('reminder'),\n          children: [/*#__PURE__*/_jsxDEV(FaBell, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 9\n          }, this), \" Reminder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n          onClick: () => setActiveTab('finance'),\n          children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 9\n          }, this), \" Finance\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sorting-filtering\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: sortOption,\n              onChange: e => setSortOption(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Sort by\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"date\",\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"priority\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: filterPriority,\n              onChange: e => setFilterPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Filter by Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: filterStatus,\n              onChange: e => setFilterStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Filter by Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"notCompleted\",\n                children: \"Not Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetFilters,\n              className: \"cancel-filters-button\",\n              children: \"Cancel Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-todo-button\",\n            onClick: () => setTodoFormVisible(true),\n            children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 13\n            }, this), \" Add New Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 11\n          }, this), isTodoFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-form-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleAddTodo,\n              className: \"todo-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTodoText,\n                onChange: e => setNewTodoText(e.target.value),\n                placeholder: \"New todo text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTodoPriority,\n                onChange: e => setNewTodoPriority(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: newTodoDueDate,\n                onChange: e => setNewTodoDueDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Save Todo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setTodoFormVisible(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading todos...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this) : filteredAndSortedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: todo.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: todo.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(todo.dueDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => showUpdateForm(todo),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTodo(todo._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: todo.completed,\n                onChange: () => handleToggleTodo(todo._id, todo.completed)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)]\n            }, todo._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 11\n          }, this), selectedTodo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"centered-container\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                handleUpdateTodo(selectedTodo._id);\n              },\n              className: \"update-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTodoText,\n                onChange: e => setNewTodoText(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTodoPriority,\n                onChange: e => setNewTodoPriority(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: newTodoDueDate,\n                onChange: e => setNewTodoDueDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Update Todo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setSelectedTodo(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 9\n        }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-reminder-button\",\n            onClick: () => setReminderFormVisible(!isReminderFormVisible),\n            children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 13\n            }, this), \" Add New Reminder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleView,\n            className: \"view-toggle-button\",\n            children: isCalendarView ? 'Switch to List View' : 'Switch to Calendar View'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-view\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Reminders Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n              onClickDay: value => handleDayClick(value),\n              tileContent: ({\n                date,\n                view\n              }) => {\n                const remindersForDate = reminders.filter(reminder => new Date(reminder.date).toDateString() === date.toDateString());\n                return remindersForDate.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [remindersForDate.length, \" reminders\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 48\n                }, this) : null;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 11\n          }, this), isReminderFormVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddReminder,\n            className: \"reminder-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newReminderText,\n              onChange: e => setNewReminderText(e.target.value),\n              placeholder: \"Reminder text\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newReminderDate,\n              onChange: e => setNewReminderDate(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: newReminderTime,\n              onChange: e => setNewReminderTime(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Recurring\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isRecurring,\n                onChange: () => setIsRecurring(!isRecurring)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Reminder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setReminderFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reminder-list\",\n            children: reminders.map(reminder => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reminder-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: reminder.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [reminder.date, \" \", reminder.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteReminder(reminder._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)]\n            }, reminder._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 3\n    }, this);\n  };\n  _s(IndividualContact, \"NdVByvSZUJ4keHlfdz9Ct6qipCY=\");\n};\n_s2(IndividualContact, \"qoUJmx0ooxr31/Ibn9tJcRNUlBU=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","updateTodo","deleteTodo","fetchReminders","addReminder","updateReminder","deleteReminder","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","FaChevronLeft","Calendar","jsxDEV","_jsxDEV","IndividualContact","_s2","_s","$RefreshSig$","location","params","URLSearchParams","search","name","get","avatar","contactId","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","newTodoText","setNewTodoText","newTodoPriority","setNewTodoPriority","newTodoDueDate","setNewTodoDueDate","isTodoFormVisible","setTodoFormVisible","selectedTodo","setSelectedTodo","sortOption","setSortOption","filterPriority","setFilterPriority","filterStatus","setFilterStatus","reminders","setReminders","newReminderText","setNewReminderText","newReminderDate","setNewReminderDate","newReminderTime","setNewReminderTime","isRecurring","setIsRecurring","isReminderFormVisible","setReminderFormVisible","loadTodos","todoData","err","message","handleAddTodo","e","preventDefault","newTodo","text","priority","dueDate","response","loadReminders","reminderData","console","isCalendarView","setIsCalendarView","selectedDateReminders","setSelectedDateReminders","handleDayClick","date","remindersForDate","filter","reminder","Date","toDateString","toggleView","handleAddReminder","newReminder","time","addedReminder","handleDeleteReminder","reminderId","_id","notifyDueReminders","forEach","reminderDate","Notification","permission","body","requestPermission","interval","setInterval","clearInterval","filteredAndSortedTodos","todo","completed","sort","a","b","priorities","High","Medium","Low","handleUpdateTodo","todoId","updatedTodo","map","handleDeleteTodo","confirmDelete","window","confirm","handleToggleTodo","prevTodos","showUpdateForm","split","resetFilters","className","children","onClick","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","value","onChange","target","onSubmit","type","placeholder","required","toLocaleDateString","checked","onClickDay","tileContent","view","length","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["// src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo, fetchReminders, addReminder, updateReminder, deleteReminder } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\nimport Calendar from 'react-calendar';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n  const [filterPriority, setFilterPriority] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n  //reminder\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminderText, setNewReminderText] = useState('');\r\n  const [newReminderDate, setNewReminderDate] = useState('');\r\n  const [newReminderTime, setNewReminderTime] = useState('');\r\n  const [isRecurring, setIsRecurring] = useState(false);\r\n  const [isReminderFormVisible, setReminderFormVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n\r\n  const handleAddTodo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTodo = {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      };\r\n      const response = await addTodo(contactId, newTodo);\r\n      setTodos([...todos, response]);\r\n      setNewTodoText('');\r\n      setNewTodoPriority('Medium');\r\n      setNewTodoDueDate('');\r\n      setTodoFormVisible(false);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n    //loads reminder if active\r\n    useEffect(() => {\r\n      if (activeTab === 'reminder') {\r\n        loadReminders();\r\n      }\r\n    }, [activeTab, contactId]);\r\n  \r\n    const loadReminders = async () => {\r\n      try {\r\n        const reminderData = await fetchReminders(contactId);\r\n        setReminders(reminderData);\r\n      } catch (error) {\r\n        console.error('Failed to load reminders:', error);\r\n      }\r\n    };\r\n  \r\n\r\n    const IndividualContact = () => {\r\n      const [isCalendarView, setIsCalendarView] = useState(true);\r\n      const [selectedDateReminders, setSelectedDateReminders] = useState([]);\r\n    \r\n      const handleDayClick = (date) => {\r\n        const remindersForDate = reminders.filter(reminder => \r\n          new Date(reminder.date).toDateString() === date.toDateString()\r\n        );\r\n        setSelectedDateReminders(remindersForDate);\r\n      };\r\n    \r\n      const toggleView = () => setIsCalendarView(!isCalendarView);\r\n\r\n    const handleAddReminder = async (e) => {\r\n      e.preventDefault();\r\n      const newReminder = {\r\n        text: newReminderText,\r\n        date: newReminderDate,\r\n        time: newReminderTime,\r\n        isRecurring,\r\n      };\r\n      try {\r\n        const addedReminder = await addReminder(contactId, newReminder);\r\n        setReminders([...reminders, addedReminder]);\r\n        setNewReminderText('');\r\n        setNewReminderDate('');\r\n        setNewReminderTime('');\r\n        setIsRecurring(false);\r\n      } catch (error) {\r\n        console.error('Failed to add reminder:', error);\r\n      }\r\n    };\r\n  \r\n    const handleDeleteReminder = async (reminderId) => {\r\n      try {\r\n        await deleteReminder(reminderId);\r\n        setReminders(reminders.filter(reminder => reminder._id !== reminderId));\r\n      } catch (error) {\r\n        console.error('Failed to delete reminder:', error);\r\n      }\r\n    };\r\n  \r\n    const notifyDueReminders = () => {\r\n      reminders.forEach(reminder => {\r\n        const reminderDate = new Date(`${reminder.date}T${reminder.time}`);\r\n        if (reminderDate - new Date() < 60000) { // Check if reminder is within the next minute\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('Reminder', { body: reminder.text });\r\n          }\r\n        }\r\n      });\r\n    };\r\n  \r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if (Notification.permission !== 'granted') {\r\n        Notification.requestPermission();\r\n      }\r\n      const interval = setInterval(notifyDueReminders, 60000); // Check every minute\r\n      return () => clearInterval(interval);\r\n    }, [reminders]);\r\n\r\n    //end for crud for reminder\r\n\r\n  const filteredAndSortedTodos = todos\r\n    .filter(todo => {\r\n      if (filterPriority && todo.priority !== filterPriority) return false;\r\n      if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortOption === \"date\") {\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      } else if (sortOption === \"priority\") {\r\n        const priorities = { High: 1, Medium: 2, Low: 3 };\r\n        return priorities[a.priority] - priorities[b.priority];\r\n      } else if (sortOption === \"status\") {\r\n        return (a.completed === b.completed) ? 0 : a.completed ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  const handleUpdateTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = await updateTodo(todoId, {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      });\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n      setSelectedTodo(null); // Close the update form\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteTodo = async (todoId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteTodo(todoId);\r\n        setTodos(todos.filter(todo => todo._id !== todoId));\r\n      } catch (err) {\r\n        setError('Failed to delete todo: ' + err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const showUpdateForm = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setNewTodoText(todo.text);\r\n    setNewTodoPriority(todo.priority);\r\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilterPriority('');\r\n    setFilterStatus('');\r\n    setSortOption('');\r\n  };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         <div className=\"sorting-filtering\">\r\n//           <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n//             <option value=\"\">Sort by</option>\r\n//             <option value=\"date\">Due Date</option>\r\n//             <option value=\"priority\">Priority</option>\r\n//             <option value=\"status\">Status</option>\r\n//           </select>\r\n\r\n//           <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n//             <option value=\"\">Filter by Priority</option>\r\n//             <option value=\"High\">High</option>\r\n//             <option value=\"Medium\">Medium</option>\r\n//             <option value=\"Low\">Low</option>\r\n//           </select>\r\n\r\n//           <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n//             <option value=\"\">Filter by Status</option>\r\n//             <option value=\"completed\">Completed</option>\r\n//             <option value=\"notCompleted\">Not Completed</option>\r\n//           </select>\r\n\r\n//           <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\r\n//         </div>\r\n\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n//               <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//             </button>\r\n\r\n//             {isTodoFormVisible && (\r\n//               <div className=\"todo-form-overlay\">\r\n//                 <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={newTodoText}\r\n//                     onChange={(e) => setNewTodoText(e.target.value)}\r\n//                     placeholder=\"New todo text\"\r\n//                     required\r\n//                   />\r\n//                   <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n//                     <option value=\"High\"> High </option>\r\n//                     <option value=\"Medium\">Medium</option>\r\n//                     <option value=\"Low\"> Low  </option>\r\n//                   </select>\r\n//                   <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n//                   <button type=\"submit\">Save Todo</button>\r\n//                   <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n//                 </form>\r\n//               </div>\r\n//             )}\r\n\r\n//             <div className=\"todo-list\">\r\n//               {loading ? (\r\n//                 <p>Loading todos...</p>\r\n//               ) : filteredAndSortedTodos.map(todo => (\r\n//                 <div key={todo._id} className=\"todo-item\">\r\n//                   <span>{todo.text}</span>\r\n//                   <span>{todo.priority}</span>\r\n//                   <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n//                   <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n//                   <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     checked={todo.completed}\r\n//                     onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n//                   />\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//             {selectedTodo && (\r\n//               <div className=\"centered-container\">\r\n//               <form onSubmit={(e) => {\r\n//                 e.preventDefault();\r\n//                 handleUpdateTodo(selectedTodo._id);\r\n//               }} className=\"update-form\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={newTodoText}\r\n//                   onChange={(e) => setNewTodoText(e.target.value)}\r\n//                   required\r\n//                 />\r\n//                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n//                   <option value=\"High\"> High </option>\r\n//                   <option value=\"Medium\">Medium</option>\r\n//                   <option value=\"Low\"> Low  </option>\r\n//                 </select>\r\n//                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n//                 <button type=\"submit\">Update Todo</button>\r\n//                 <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n//               </form>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n        \r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nreturn (\r\n  <div className=\"individual-contact\">\r\n    <header className=\"header\">\r\n      <button className=\"back-button\" onClick={() => window.history.back()}>\r\n        <FaChevronLeft className=\"icon\" /> Contacts\r\n      </button>\r\n    </header>\r\n\r\n    <div className=\"contact-summary\">\r\n      <div className=\"contact-photo\">\r\n        <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n      </div>\r\n      <h2>{name || \"Contact\"}</h2>\r\n    </div>\r\n\r\n    <div className=\"tab-bar\">\r\n      <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n        <FaCheckSquare className=\"icon\" /> Todo\r\n      </button>\r\n      <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n        <FaBell className=\"icon\" /> Reminder\r\n      </button>\r\n      <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n        <FaMoneyBillWave className=\"icon\" /> Finance\r\n      </button>\r\n    </div>\r\n\r\n    <div className=\"tab-content\">\r\n      {activeTab === 'todo' && (\r\n        <div className=\"todo-content\">\r\n          <div className=\"sorting-filtering\">\r\n            <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n              <option value=\"\">Sort by</option>\r\n              <option value=\"date\">Due Date</option>\r\n              <option value=\"priority\">Priority</option>\r\n              <option value=\"status\">Status</option>\r\n            </select>\r\n\r\n            <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n              <option value=\"\">Filter by Priority</option>\r\n              <option value=\"High\">High</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"Low\">Low</option>\r\n            </select>\r\n\r\n            <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n              <option value=\"\">Filter by Status</option>\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"notCompleted\">Not Completed</option>\r\n            </select>\r\n\r\n            <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\r\n          </div>\r\n\r\n          <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n            <FaPlusCircle className=\"icon\" /> Add New Todo\r\n          </button>\r\n\r\n          {isTodoFormVisible && (\r\n            <div className=\"todo-form-overlay\">\r\n              <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  placeholder=\"New todo text\"\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\">Low</option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Save Todo</button>\r\n                <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"todo-list\">\r\n            {loading ? (\r\n              <p>Loading todos...</p>\r\n            ) : filteredAndSortedTodos.map(todo => (\r\n              <div key={todo._id} className=\"todo-item\">\r\n                <span>{todo.text}</span>\r\n                <span>{todo.priority}</span>\r\n                <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n                <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n                <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {selectedTodo && (\r\n            <div className=\"centered-container\">\r\n              <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleUpdateTodo(selectedTodo._id);\r\n              }} className=\"update-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\">Low</option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Update Todo</button>\r\n                <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'reminder' && (\r\n        <div className=\"reminder-content\">\r\n          <button className=\"add-reminder-button\" onClick={() => setReminderFormVisible(!isReminderFormVisible)}>\r\n            <FaPlusCircle className=\"icon\" /> Add New Reminder\r\n          </button>\r\n\r\n\r\n          \r\n      <button onClick={toggleView} className=\"view-toggle-button\">\r\n        {isCalendarView ? 'Switch to List View' : 'Switch to Calendar View'}\r\n      </button>\r\n     \r\n          <div className=\"calendar-view\">\r\n          <h3>Reminders Calendar</h3>\r\n          <Calendar\r\n            onClickDay={(value) => handleDayClick(value)}\r\n            tileContent={({ date, view }) => {\r\n              const remindersForDate = reminders.filter(reminder => \r\n                new Date(reminder.date).toDateString() === date.toDateString()\r\n              );\r\n              return remindersForDate.length ? <span>{remindersForDate.length} reminders</span> : null;\r\n            }}\r\n          />\r\n        </div>\r\n        {isReminderFormVisible && (\r\n        <form onSubmit={handleAddReminder} className=\"reminder-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={newReminderText}\r\n            onChange={(e) => setNewReminderText(e.target.value)}\r\n            placeholder=\"Reminder text\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={newReminderDate}\r\n            onChange={(e) => setNewReminderDate(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            value={newReminderTime}\r\n            onChange={(e) => setNewReminderTime(e.target.value)}\r\n            required\r\n          />\r\n          <label>\r\n            Recurring\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isRecurring}\r\n              onChange={() => setIsRecurring(!isRecurring)}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Save Reminder</button>\r\n          <button type=\"button\" onClick={() => setReminderFormVisible(false)}>\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n          <div className=\"reminder-list\">\r\n            {reminders.map(reminder => (\r\n              <div key={reminder._id} className=\"reminder-item\">\r\n                <span>{reminder.text}</span>\r\n                <span>{reminder.date} {reminder.time}</span>\r\n                <button onClick={() => handleDeleteReminder(reminder._id)}>Delete</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n)};\r\n\r\n}\r\nexport default IndividualContact;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,cAAc,EAAEC,WAAW,EAAEC,cAAc,EAAEC,cAAc,QAAQ,OAAO;AAC5I,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AACpG,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC9B,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,MAAMuB,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC;EACnC,MAAME,SAAS,GAAGN,MAAM,CAACI,GAAG,CAAC,WAAW,CAAC;EAEzC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC8C,iBAAiB,EAAEC,kBAAkB,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkD,UAAU,EAAEC,aAAa,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoD,cAAc,EAAEC,iBAAiB,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsD,YAAY,EAAEC,eAAe,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0D,eAAe,EAAEC,kBAAkB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4D,eAAe,EAAEC,kBAAkB,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC8D,eAAe,EAAEC,kBAAkB,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkE,qBAAqB,EAAEC,sBAAsB,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACd,MAAMmE,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF/B,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMgC,QAAQ,GAAG,MAAMlE,UAAU,CAAC4B,SAAS,CAAC;QAC5CI,QAAQ,CAACkC,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ/B,QAAQ,CAAC,wBAAwB,GAAG+B,GAAG,CAACC,OAAO,CAAC;MAClD,CAAC,SAAS;QACRlC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED+B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACrC,SAAS,CAAC,CAAC;EAGf,MAAMyC,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAEpC,WAAW;QACjBqC,QAAQ,EAAEnC,eAAe;QACzBoC,OAAO,EAAElC;MACX,CAAC;MACD,MAAMmC,QAAQ,GAAG,MAAM3E,OAAO,CAAC2B,SAAS,EAAE4C,OAAO,CAAC;MAClDxC,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE6C,QAAQ,CAAC,CAAC;MAC9BtC,cAAc,CAAC,EAAE,CAAC;MAClBE,kBAAkB,CAAC,QAAQ,CAAC;MAC5BE,iBAAiB,CAAC,EAAE,CAAC;MACrBE,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZ/B,QAAQ,CAAC,sBAAsB,GAAG+B,GAAG,CAACC,OAAO,CAAC;IAChD;EACF,CAAC;;EAEC;EACAtE,SAAS,CAAC,MAAM;IACd,IAAI+B,SAAS,KAAK,UAAU,EAAE;MAC5BgD,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAAChD,SAAS,EAAED,SAAS,CAAC,CAAC;EAE1B,MAAMiD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMzE,cAAc,CAACuB,SAAS,CAAC;MACpD0B,YAAY,CAACwB,YAAY,CAAC;IAC5B,CAAC,CAAC,OAAO3C,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAGD,MAAMlB,iBAAiB,GAAGA,CAAA,KAAM;IAAAE,EAAA;IAC9B,MAAM,CAAC6D,cAAc,EAAEC,iBAAiB,CAAC,GAAGpF,QAAQ,CAAC,IAAI,CAAC;IAC1D,MAAM,CAACqF,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtF,QAAQ,CAAC,EAAE,CAAC;IAEtE,MAAMuF,cAAc,GAAIC,IAAI,IAAK;MAC/B,MAAMC,gBAAgB,GAAGjC,SAAS,CAACkC,MAAM,CAACC,QAAQ,IAChD,IAAIC,IAAI,CAACD,QAAQ,CAACH,IAAI,CAAC,CAACK,YAAY,CAAC,CAAC,KAAKL,IAAI,CAACK,YAAY,CAAC,CAC/D,CAAC;MACDP,wBAAwB,CAACG,gBAAgB,CAAC;IAC5C,CAAC;IAED,MAAMK,UAAU,GAAGA,CAAA,KAAMV,iBAAiB,CAAC,CAACD,cAAc,CAAC;IAE7D,MAAMY,iBAAiB,GAAG,MAAOtB,CAAC,IAAK;MACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,MAAMsB,WAAW,GAAG;QAClBpB,IAAI,EAAElB,eAAe;QACrB8B,IAAI,EAAE5B,eAAe;QACrBqC,IAAI,EAAEnC,eAAe;QACrBE;MACF,CAAC;MACD,IAAI;QACF,MAAMkC,aAAa,GAAG,MAAMzF,WAAW,CAACsB,SAAS,EAAEiE,WAAW,CAAC;QAC/DvC,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE0C,aAAa,CAAC,CAAC;QAC3CvC,kBAAkB,CAAC,EAAE,CAAC;QACtBE,kBAAkB,CAAC,EAAE,CAAC;QACtBE,kBAAkB,CAAC,EAAE,CAAC;QACtBE,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAO3B,KAAK,EAAE;QACd4C,OAAO,CAAC5C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,MAAM6D,oBAAoB,GAAG,MAAOC,UAAU,IAAK;MACjD,IAAI;QACF,MAAMzF,cAAc,CAACyF,UAAU,CAAC;QAChC3C,YAAY,CAACD,SAAS,CAACkC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACU,GAAG,KAAKD,UAAU,CAAC,CAAC;MACzE,CAAC,CAAC,OAAO9D,KAAK,EAAE;QACd4C,OAAO,CAAC5C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,MAAMgE,kBAAkB,GAAGA,CAAA,KAAM;MAC/B9C,SAAS,CAAC+C,OAAO,CAACZ,QAAQ,IAAI;QAC5B,MAAMa,YAAY,GAAG,IAAIZ,IAAI,CAAC,GAAGD,QAAQ,CAACH,IAAI,IAAIG,QAAQ,CAACM,IAAI,EAAE,CAAC;QAClE,IAAIO,YAAY,GAAG,IAAIZ,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE;UAAE;UACvC,IAAIa,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;YACzC,IAAID,YAAY,CAAC,UAAU,EAAE;cAAEE,IAAI,EAAEhB,QAAQ,CAACf;YAAK,CAAC,CAAC;UACvD;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAKD3E,SAAS,CAAC,MAAM;MACd,IAAIwG,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;QACzCD,YAAY,CAACG,iBAAiB,CAAC,CAAC;MAClC;MACA,MAAMC,QAAQ,GAAGC,WAAW,CAACR,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;MACzD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;IACtC,CAAC,EAAE,CAACrD,SAAS,CAAC,CAAC;;IAEf;;IAEF,MAAMwD,sBAAsB,GAAG9E,KAAK,CACjCwD,MAAM,CAACuB,IAAI,IAAI;MACd,IAAI7D,cAAc,IAAI6D,IAAI,CAACpC,QAAQ,KAAKzB,cAAc,EAAE,OAAO,KAAK;MACpE,IAAIE,YAAY,KAAKA,YAAY,KAAK,WAAW,GAAG,CAAC2D,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACC,SAAS,CAAC,EAAE,OAAO,KAAK;MACnG,OAAO,IAAI;IACb,CAAC,CAAC,CACDC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACd,IAAInE,UAAU,KAAK,MAAM,EAAE;QACzB,OAAO,IAAI0C,IAAI,CAACwB,CAAC,CAACtC,OAAO,CAAC,GAAG,IAAIc,IAAI,CAACyB,CAAC,CAACvC,OAAO,CAAC;MAClD,CAAC,MAAM,IAAI5B,UAAU,KAAK,UAAU,EAAE;QACpC,MAAMoE,UAAU,GAAG;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE,CAAC;QACjD,OAAOH,UAAU,CAACF,CAAC,CAACvC,QAAQ,CAAC,GAAGyC,UAAU,CAACD,CAAC,CAACxC,QAAQ,CAAC;MACxD,CAAC,MAAM,IAAI3B,UAAU,KAAK,QAAQ,EAAE;QAClC,OAAQkE,CAAC,CAACF,SAAS,KAAKG,CAAC,CAACH,SAAS,GAAI,CAAC,GAAGE,CAAC,CAACF,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;MACjE;MACA,OAAO,CAAC;IACV,CAAC,CAAC;IAEJ,MAAMQ,gBAAgB,GAAG,MAAOC,MAAM,IAAK;MACzC,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMtH,UAAU,CAACqH,MAAM,EAAE;UAC3C/C,IAAI,EAAEpC,WAAW;UACjBqC,QAAQ,EAAEnC,eAAe;UACzBoC,OAAO,EAAElC;QACX,CAAC,CAAC;QACFT,QAAQ,CAACD,KAAK,CAAC2F,GAAG,CAACZ,IAAI,IAAKA,IAAI,CAACZ,GAAG,KAAKsB,MAAM,GAAGC,WAAW,GAAGX,IAAK,CAAC,CAAC;QACvEhE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOqB,GAAG,EAAE;QACZ/B,QAAQ,CAAC,yBAAyB,GAAG+B,GAAG,CAACC,OAAO,CAAC;MACnD;IACF,CAAC;IAGD,MAAMuD,gBAAgB,GAAG,MAAOH,MAAM,IAAK;MACzC,MAAMI,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC;MAClF,IAAIF,aAAa,EAAE;QACjB,IAAI;UACF,MAAMxH,UAAU,CAACoH,MAAM,CAAC;UACxBxF,QAAQ,CAACD,KAAK,CAACwD,MAAM,CAACuB,IAAI,IAAIA,IAAI,CAACZ,GAAG,KAAKsB,MAAM,CAAC,CAAC;QACrD,CAAC,CAAC,OAAOrD,GAAG,EAAE;UACZ/B,QAAQ,CAAC,yBAAyB,GAAG+B,GAAG,CAACC,OAAO,CAAC;QACnD;MACF;IACF,CAAC;IAED,MAAM2D,gBAAgB,GAAG,MAAAA,CAAOP,MAAM,EAAET,SAAS,KAAK;MACpD,IAAI;QACF,MAAMU,WAAW,GAAG,MAAMvH,UAAU,CAACsH,MAAM,EAAE,CAACT,SAAS,CAAC;QACxD/E,QAAQ,CAACgG,SAAS,IAChBA,SAAS,CAACN,GAAG,CAACZ,IAAI,IAChBA,IAAI,CAACZ,GAAG,KAAKsB,MAAM,GAAGC,WAAW,GAAGX,IACtC,CACF,CAAC;MACH,CAAC,CAAC,OAAO3C,GAAG,EAAE;QACZ/B,QAAQ,CAAC,yBAAyB,GAAG+B,GAAG,CAACC,OAAO,CAAC;MACnD;IACF,CAAC;IAED,MAAM6D,cAAc,GAAInB,IAAI,IAAK;MAC/BhE,eAAe,CAACgE,IAAI,CAAC;MACrBxE,cAAc,CAACwE,IAAI,CAACrC,IAAI,CAAC;MACzBjC,kBAAkB,CAACsE,IAAI,CAACpC,QAAQ,CAAC;MACjChC,iBAAiB,CAACoE,IAAI,CAACnC,OAAO,CAACuD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBjF,iBAAiB,CAAC,EAAE,CAAC;MACrBE,eAAe,CAAC,EAAE,CAAC;MACnBJ,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC;;IAEH;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;IACA;;IAEA,oBACEhC,OAAA;MAAKoH,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCrH,OAAA;QAAQoH,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACxBrH,OAAA;UAAQoH,SAAS,EAAC,aAAa;UAACE,OAAO,EAAEA,CAAA,KAAMT,MAAM,CAACU,OAAO,CAACC,IAAI,CAAC,CAAE;UAAAH,QAAA,gBACnErH,OAAA,CAACH,aAAa;YAACuH,SAAS,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,aACpC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAET5H,OAAA;QAAKoH,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrH,OAAA;UAAKoH,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BrH,OAAA;YAAK6H,GAAG,EAAElH,MAAM,IAAI,qBAAsB;YAACmH,GAAG,EAAE,GAAGrH,IAAI;UAAY;YAAAgH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACN5H,OAAA;UAAAqH,QAAA,EAAK5G,IAAI,IAAI;QAAS;UAAAgH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAEN5H,OAAA;QAAKoH,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBrH,OAAA;UAAQoH,SAAS,EAAE,OAAOvG,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAACyG,OAAO,EAAEA,CAAA,KAAMxG,YAAY,CAAC,MAAM,CAAE;UAAAuG,QAAA,gBACpGrH,OAAA,CAACP,aAAa;YAAC2H,SAAS,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,SACpC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5H,OAAA;UAAQoH,SAAS,EAAE,OAAOvG,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UAACyG,OAAO,EAAEA,CAAA,KAAMxG,YAAY,CAAC,UAAU,CAAE;UAAAuG,QAAA,gBAC5GrH,OAAA,CAACN,MAAM;YAAC0H,SAAS,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,aAC7B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5H,OAAA;UAAQoH,SAAS,EAAE,OAAOvG,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UAACyG,OAAO,EAAEA,CAAA,KAAMxG,YAAY,CAAC,SAAS,CAAE;UAAAuG,QAAA,gBAC1GrH,OAAA,CAACL,eAAe;YAACyH,SAAS,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,YACtC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN5H,OAAA;QAAKoH,SAAS,EAAC,aAAa;QAAAC,QAAA,GACzBxG,SAAS,KAAK,MAAM,iBACnBb,OAAA;UAAKoH,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BrH,OAAA;YAAKoH,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChCrH,OAAA;cAAQ+H,KAAK,EAAEhG,UAAW;cAACiG,QAAQ,EAAG1E,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;cAAAV,QAAA,gBACxErH,OAAA;gBAAQ+H,KAAK,EAAC,EAAE;gBAAAV,QAAA,EAAC;cAAO;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACjC5H,OAAA;gBAAQ+H,KAAK,EAAC,MAAM;gBAAAV,QAAA,EAAC;cAAQ;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtC5H,OAAA;gBAAQ+H,KAAK,EAAC,UAAU;gBAAAV,QAAA,EAAC;cAAQ;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1C5H,OAAA;gBAAQ+H,KAAK,EAAC,QAAQ;gBAAAV,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eAET5H,OAAA;cAAQ+H,KAAK,EAAE9F,cAAe;cAAC+F,QAAQ,EAAG1E,CAAC,IAAKpB,iBAAiB,CAACoB,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;cAAAV,QAAA,gBAChFrH,OAAA;gBAAQ+H,KAAK,EAAC,EAAE;gBAAAV,QAAA,EAAC;cAAkB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5C5H,OAAA;gBAAQ+H,KAAK,EAAC,MAAM;gBAAAV,QAAA,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC5H,OAAA;gBAAQ+H,KAAK,EAAC,QAAQ;gBAAAV,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtC5H,OAAA;gBAAQ+H,KAAK,EAAC,KAAK;gBAAAV,QAAA,EAAC;cAAG;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eAET5H,OAAA;cAAQ+H,KAAK,EAAE5F,YAAa;cAAC6F,QAAQ,EAAG1E,CAAC,IAAKlB,eAAe,CAACkB,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;cAAAV,QAAA,gBAC5ErH,OAAA;gBAAQ+H,KAAK,EAAC,EAAE;gBAAAV,QAAA,EAAC;cAAgB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1C5H,OAAA;gBAAQ+H,KAAK,EAAC,WAAW;gBAAAV,QAAA,EAAC;cAAS;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5C5H,OAAA;gBAAQ+H,KAAK,EAAC,cAAc;gBAAAV,QAAA,EAAC;cAAa;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eAET5H,OAAA;cAAQsH,OAAO,EAAEH,YAAa;cAACC,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CAAC,eAEN5H,OAAA;YAAQoH,SAAS,EAAC,iBAAiB;YAACE,OAAO,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,IAAI,CAAE;YAAAyF,QAAA,gBAC1ErH,OAAA,CAACJ,YAAY;cAACwH,SAAS,EAAC;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBACnC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAERjG,iBAAiB,iBAChB3B,OAAA;YAAKoH,SAAS,EAAC,mBAAmB;YAAAC,QAAA,eAChCrH,OAAA;cAAMkI,QAAQ,EAAE7E,aAAc;cAAC+D,SAAS,EAAC,WAAW;cAAAC,QAAA,gBAClDrH,OAAA;gBACEmI,IAAI,EAAC,MAAM;gBACXJ,KAAK,EAAE1G,WAAY;gBACnB2G,QAAQ,EAAG1E,CAAC,IAAKhC,cAAc,CAACgC,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;gBAChDK,WAAW,EAAC,eAAe;gBAC3BC,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACF5H,OAAA;gBAAQ+H,KAAK,EAAExG,eAAgB;gBAACyG,QAAQ,EAAG1E,CAAC,IAAK9B,kBAAkB,CAAC8B,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;gBAAAV,QAAA,gBAClFrH,OAAA;kBAAQ+H,KAAK,EAAC,MAAM;kBAAAV,QAAA,EAAC;gBAAI;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClC5H,OAAA;kBAAQ+H,KAAK,EAAC,QAAQ;kBAAAV,QAAA,EAAC;gBAAM;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtC5H,OAAA;kBAAQ+H,KAAK,EAAC,KAAK;kBAAAV,QAAA,EAAC;gBAAG;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACT5H,OAAA;gBAAOmI,IAAI,EAAC,MAAM;gBAACJ,KAAK,EAAEtG,cAAe;gBAACuG,QAAQ,EAAG1E,CAAC,IAAK5B,iBAAiB,CAAC4B,CAAC,CAAC2E,MAAM,CAACF,KAAK;cAAE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChG5H,OAAA;gBAAQmI,IAAI,EAAC,QAAQ;gBAAAd,QAAA,EAAC;cAAS;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxC5H,OAAA;gBAAQmI,IAAI,EAAC,QAAQ;gBAACb,OAAO,EAAEA,CAAA,KAAM1F,kBAAkB,CAAC,KAAK,CAAE;gBAAAyF,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CACN,eAED5H,OAAA;YAAKoH,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBpG,OAAO,gBACNjB,OAAA;cAAAqH,QAAA,EAAG;YAAgB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,GACrB/B,sBAAsB,CAACa,GAAG,CAACZ,IAAI,iBACjC9F,OAAA;cAAoBoH,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACvCrH,OAAA;gBAAAqH,QAAA,EAAOvB,IAAI,CAACrC;cAAI;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACxB5H,OAAA;gBAAAqH,QAAA,EAAOvB,IAAI,CAACpC;cAAQ;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5B5H,OAAA;gBAAAqH,QAAA,EAAO,IAAI5C,IAAI,CAACqB,IAAI,CAACnC,OAAO,CAAC,CAAC2E,kBAAkB,CAAC;cAAC;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC1D5H,OAAA;gBAAQsH,OAAO,EAAEA,CAAA,KAAML,cAAc,CAACnB,IAAI,CAAE;gBAAAuB,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5D5H,OAAA;gBAAQsH,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACb,IAAI,CAACZ,GAAG,CAAE;gBAAAmC,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClE5H,OAAA;gBACEmI,IAAI,EAAC,UAAU;gBACfI,OAAO,EAAEzC,IAAI,CAACC,SAAU;gBACxBiC,QAAQ,EAAEA,CAAA,KAAMjB,gBAAgB,CAACjB,IAAI,CAACZ,GAAG,EAAEY,IAAI,CAACC,SAAS;cAAE;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC;YAAA,GAVM9B,IAAI,CAACZ,GAAG;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWb,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAEL/F,YAAY,iBACX7B,OAAA;YAAKoH,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjCrH,OAAA;cAAMkI,QAAQ,EAAG5E,CAAC,IAAK;gBACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;gBAClBgD,gBAAgB,CAAC1E,YAAY,CAACqD,GAAG,CAAC;cACpC,CAAE;cAACkC,SAAS,EAAC,aAAa;cAAAC,QAAA,gBACxBrH,OAAA;gBACEmI,IAAI,EAAC,MAAM;gBACXJ,KAAK,EAAE1G,WAAY;gBACnB2G,QAAQ,EAAG1E,CAAC,IAAKhC,cAAc,CAACgC,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;gBAChDM,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACF5H,OAAA;gBAAQ+H,KAAK,EAAExG,eAAgB;gBAACyG,QAAQ,EAAG1E,CAAC,IAAK9B,kBAAkB,CAAC8B,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;gBAAAV,QAAA,gBAClFrH,OAAA;kBAAQ+H,KAAK,EAAC,MAAM;kBAAAV,QAAA,EAAC;gBAAI;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClC5H,OAAA;kBAAQ+H,KAAK,EAAC,QAAQ;kBAAAV,QAAA,EAAC;gBAAM;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtC5H,OAAA;kBAAQ+H,KAAK,EAAC,KAAK;kBAAAV,QAAA,EAAC;gBAAG;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACT5H,OAAA;gBAAOmI,IAAI,EAAC,MAAM;gBAACJ,KAAK,EAAEtG,cAAe;gBAACuG,QAAQ,EAAG1E,CAAC,IAAK5B,iBAAiB,CAAC4B,CAAC,CAAC2E,MAAM,CAACF,KAAK;cAAE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChG5H,OAAA;gBAAQmI,IAAI,EAAC,QAAQ;gBAAAd,QAAA,EAAC;cAAW;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1C5H,OAAA;gBAAQmI,IAAI,EAAC,QAAQ;gBAACb,OAAO,EAAEA,CAAA,KAAMxF,eAAe,CAAC,IAAI,CAAE;gBAAAuF,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,EAEA/G,SAAS,KAAK,UAAU,iBACvBb,OAAA;UAAKoH,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BrH,OAAA;YAAQoH,SAAS,EAAC,qBAAqB;YAACE,OAAO,EAAEA,CAAA,KAAMtE,sBAAsB,CAAC,CAACD,qBAAqB,CAAE;YAAAsE,QAAA,gBACpGrH,OAAA,CAACJ,YAAY;cAACwH,SAAS,EAAC;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,qBACnC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAIb5H,OAAA;YAAQsH,OAAO,EAAE3C,UAAW;YAACyC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EACxDrD,cAAc,GAAG,qBAAqB,GAAG;UAAyB;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eAEL5H,OAAA;YAAKoH,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC9BrH,OAAA;cAAAqH,QAAA,EAAI;YAAkB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3B5H,OAAA,CAACF,QAAQ;cACP0I,UAAU,EAAGT,KAAK,IAAK3D,cAAc,CAAC2D,KAAK,CAAE;cAC7CU,WAAW,EAAEA,CAAC;gBAAEpE,IAAI;gBAAEqE;cAAK,CAAC,KAAK;gBAC/B,MAAMpE,gBAAgB,GAAGjC,SAAS,CAACkC,MAAM,CAACC,QAAQ,IAChD,IAAIC,IAAI,CAACD,QAAQ,CAACH,IAAI,CAAC,CAACK,YAAY,CAAC,CAAC,KAAKL,IAAI,CAACK,YAAY,CAAC,CAC/D,CAAC;gBACD,OAAOJ,gBAAgB,CAACqE,MAAM,gBAAG3I,OAAA;kBAAAqH,QAAA,GAAO/C,gBAAgB,CAACqE,MAAM,EAAC,YAAU;gBAAA;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,GAAG,IAAI;cAC1F;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EACL7E,qBAAqB,iBACtB/C,OAAA;YAAMkI,QAAQ,EAAEtD,iBAAkB;YAACwC,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1DrH,OAAA;cACEmI,IAAI,EAAC,MAAM;cACXJ,KAAK,EAAExF,eAAgB;cACvByF,QAAQ,EAAG1E,CAAC,IAAKd,kBAAkB,CAACc,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;cACpDK,WAAW,EAAC,eAAe;cAC3BC,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF5H,OAAA;cACEmI,IAAI,EAAC,MAAM;cACXJ,KAAK,EAAEtF,eAAgB;cACvBuF,QAAQ,EAAG1E,CAAC,IAAKZ,kBAAkB,CAACY,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;cACpDM,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF5H,OAAA;cACEmI,IAAI,EAAC,MAAM;cACXJ,KAAK,EAAEpF,eAAgB;cACvBqF,QAAQ,EAAG1E,CAAC,IAAKV,kBAAkB,CAACU,CAAC,CAAC2E,MAAM,CAACF,KAAK,CAAE;cACpDM,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF5H,OAAA;cAAAqH,QAAA,GAAO,WAEL,eAAArH,OAAA;gBACEmI,IAAI,EAAC,UAAU;gBACfI,OAAO,EAAE1F,WAAY;gBACrBmF,QAAQ,EAAEA,CAAA,KAAMlF,cAAc,CAAC,CAACD,WAAW;cAAE;gBAAA4E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACR5H,OAAA;cAAQmI,IAAI,EAAC,QAAQ;cAAAd,QAAA,EAAC;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC5C5H,OAAA;cAAQmI,IAAI,EAAC,QAAQ;cAACb,OAAO,EAAEA,CAAA,KAAMtE,sBAAsB,CAAC,KAAK,CAAE;cAAAqE,QAAA,EAAC;YAEpE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACP,eAEG5H,OAAA;YAAKoH,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3BhF,SAAS,CAACqE,GAAG,CAAClC,QAAQ,iBACrBxE,OAAA;cAAwBoH,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC/CrH,OAAA;gBAAAqH,QAAA,EAAO7C,QAAQ,CAACf;cAAI;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5B5H,OAAA;gBAAAqH,QAAA,GAAO7C,QAAQ,CAACH,IAAI,EAAC,GAAC,EAACG,QAAQ,CAACM,IAAI;cAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5C5H,OAAA;gBAAQsH,OAAO,EAAEA,CAAA,KAAMtC,oBAAoB,CAACR,QAAQ,CAACU,GAAG,CAAE;gBAAAmC,QAAA,EAAC;cAAM;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAHlEpD,QAAQ,CAACU,GAAG;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIjB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EACP,CAAC;EAACzH,EAAA,CAjdOF,iBAAiB;AAmd3B,CAAC;AAAAC,GAAA,CApiBKD,iBAAiB;EAAA,QACJlB,WAAW;AAAA;AAAA6J,EAAA,GADxB3I,iBAAiB;AAqiBvB,eAAeA,iBAAiB;AAAC,IAAA2I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}