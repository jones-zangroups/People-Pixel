{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// src/IndividualContact.js\nimport React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\nimport Contacts from './Contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name'); // Get the contact name from URL\n  const avatar = params.get('avatar'); // Get the contact avatar\n\n  const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n  const [todos, setTodos] = useState([{\n    text: \"Complete Today's Task\"\n  }, {\n    text: \"Schedule meeting\"\n  }]); // Sample todo data\n  const [reminders, setReminders] = useState([]); // Sample reminder data\n  const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-person-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FaCheckSquare, {\n            className: \"status-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"1V9W64+mFxVx0qmr1UT+fe5Fq5M=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// // import { getContactById, updateContact, deleteContact } from '../api';\n// import { getContactById, updateContact, deleteContact } from './api'; // relative to src/\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const params = new URLSearchParams(location.search);\n//   const contactId = params.get('id'); // Assuming ID is passed in URL as 'id'\n\n//   const [contact, setContact] = useState(null);\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [reminders, setReminders] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch the contact data by ID\n//     const fetchContact = async () => {\n//       try {\n//         const data = await getContactById(contactId);\n//         setContact(data);\n//         setTodos(data.todos || []);\n//         setReminders(data.reminders || []);\n//         setTransactions(data.transactions || []);\n//       } catch (error) {\n//         console.error('Error fetching contact data:', error);\n//       }\n//     };\n//     fetchContact();\n//   }, [contactId]);\n\n//   const handleAddTodo = () => {\n//     const newTodo = prompt('Enter new todo:');\n//     if (newTodo) {\n//       const updatedTodos = [...todos, { text: newTodo }];\n//       setTodos(updatedTodos);\n//       updateContact(contactId, { ...contact, todos: updatedTodos });\n//     }\n//   };\n\n//   const handleAddReminder = () => {\n//     const newReminder = prompt('Enter new reminder:');\n//     if (newReminder) {\n//       const updatedReminders = [...reminders, { text: newReminder }];\n//       setReminders(updatedReminders);\n//       updateContact(contactId, { ...contact, reminders: updatedReminders });\n//     }\n//   };\n\n//   const handleAddTransaction = () => {\n//     const newTransaction = prompt('Enter new transaction:');\n//     if (newTransaction) {\n//       const updatedTransactions = [...transactions, { text: newTransaction }];\n//       setTransactions(updatedTransactions);\n//       updateContact(contactId, { ...contact, transactions: updatedTransactions });\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           {contact ? contact.avatar : <i className=\"bi bi-person-circle\"></i>}\n//         </div>\n//         <h2>{contact ? contact.name : \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             {reminders.map((reminder, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{reminder.text}</span>\n//                 <FaBell className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             {transactions.map((transaction, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{transaction.text}</span>\n//                 <FaMoneyBillWave className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n\n// const API_URL = 'http://localhost:5000/api'; // Backend API URL\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const contactId = params.get('id'); // Get the contact ID from URL\n//   const name = params.get('name'); // Get the contact name\n//   const avatar = params.get('avatar'); // Get the contact avatar\n\n//   // State management\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [reminders, setReminders] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n\n//   // Fetch data for todos, reminders, and transactions\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const todosRes = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\n//         setTodos(todosRes.data);\n\n//         const remindersRes = await axios.get(`${API_URL}/contacts/${contactId}/reminders`);\n//         setReminders(remindersRes.data);\n\n//         const transactionsRes = await axios.get(`${API_URL}/contacts/${contactId}/finance`);\n//         setTransactions(transactionsRes.data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, [contactId]);\n\n//   // Add Todo\n//   const addTodo = async (todoData) => {\n//     try {\n//       const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, todoData);\n//       setTodos([...todos, response.data]);\n//     } catch (error) {\n//       console.error('Error adding todo:', error);\n//     }\n//   };\n\n//   // Edit Todo\n//   const editTodo = async (todoId, updatedTodoData) => {\n//     try {\n//       const response = await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodoData);\n//       const updatedTodos = todos.map(todo =>\n//         todo._id === todoId ? { ...todo, ...updatedTodoData } : todo\n//       );\n//       setTodos(updatedTodos);\n//     } catch (error) {\n//       console.error('Error editing todo:', error);\n//     }\n//   };\n\n//   // Delete Todo\n//   const deleteTodo = async (todoId) => {\n//     try {\n//       await axios.delete(`${API_URL}/contacts/${contactId}/todos/${todoId}`);\n//       setTodos(todos.filter(todo => todo._id !== todoId));\n//     } catch (error) {\n//       console.error('Error deleting todo:', error);\n//     }\n//   };\n\n//   // Mark Todo as Complete\n//   const toggleTodoComplete = async (todoId) => {\n//     try {\n//       const todoToUpdate = todos.find(todo => todo._id === todoId);\n//       const updatedTodo = { ...todoToUpdate, completed: !todoToUpdate.completed };\n//       await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodo);\n//       setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\n//     } catch (error) {\n//       console.error('Error toggling todo complete:', error);\n//     }\n//   };\n\n//   // Add Reminder\n//   const addReminder = async (reminderData) => {\n//     try {\n//       const response = await axios.post(`${API_URL}/contacts/${contactId}/reminders`, reminderData);\n//       setReminders([...reminders, response.data]);\n//     } catch (error) {\n//       console.error('Error adding reminder:', error);\n//     }\n//   };\n\n//   // Add Finance Transaction\n//   const addTransaction = async (transactionData) => {\n//     try {\n//       const response = await axios.post(`${API_URL}/contacts/${contactId}/finance`, transactionData);\n//       setTransactions([...transactions, response.data]);\n//     } catch (error) {\n//       console.error('Error adding transaction:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo) => (\n//               <div key={todo._id} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <button onClick={() => toggleTodoComplete(todo._id)}>{todo.completed ? 'Unmark' : 'Complete'}</button>\n//                 <button onClick={() => deleteTodo(todo._id)}>Delete</button>\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={() => addTodo({ text: 'New Todo', completed: false })}>+ Add New Todo</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\" onClick={() => addReminder({ text: 'New Reminder' })}>+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\" onClick={() => addTransaction({ amount: 100, category: 'expense' })}>+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n\n// // Helper function to fetch the contact data by ID\n// const fetchContact = async (id) => {\n//   const response = await axios.get(`/api/contacts/${id}`);\n//   return response.data;\n// };\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const { id } = useParams(); // Contact ID from URL\n//   const [contact, setContact] = useState(null); // Initialize contact as null\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n\n//   const [newTodo, setNewTodo] = useState({ text: '', dueDate: '', priority: 'Medium' });\n//   const [newReminder, setNewReminder] = useState({ text: '', date: '', recurring: false });\n//   const [newTransaction, setNewTransaction] = useState({ amount: '', description: '', category: 'Expense', date: '' });\n\n//   const [sortedTodos, setSortedTodos] = useState([]);\n//   const [filter, setFilter] = useState('All'); // Filter for todos\n\n//   // Fetch the contact data when component loads\n//   useEffect(() => {\n//     fetchContact(id).then(setContact);\n//   }, [id]);\n\n//   // Check if contact is available before attempting to access its properties\n//   if (!contact) {\n//     return <div>Loading...</div>; // Display loading message while contact data is being fetched\n//   }\n\n//   // Handle Todo actions\n//   const handleAddTodo = async () => {\n//     const { text, dueDate, priority } = newTodo;\n//     if (!text || !dueDate) return;\n\n//     const response = await axios.post(`/api/contacts/${id}/todos`, { text, dueDate, priority });\n//     setContact({ ...contact, todos: [...contact.todos, response.data] });\n//     setNewTodo({ text: '', dueDate: '', priority: 'Medium' }); // Reset form\n//   };\n\n//   const handleDeleteTodo = async (todoId) => {\n//     await axios.delete(`/api/contacts/${id}/todos/${todoId}`);\n//     setContact({ ...contact, todos: contact.todos.filter(todo => todo._id !== todoId) });\n//   };\n\n//   const handleToggleComplete = async (todoId) => {\n//     const todo = contact.todos.find(todo => todo._id === todoId);\n//     const updatedTodo = { ...todo, completed: !todo.completed };\n//     await axios.put(`/api/contacts/${id}/todos/${todoId}`, updatedTodo);\n//     setContact({\n//       ...contact,\n//       todos: contact.todos.map(todo => (todo._id === todoId ? updatedTodo : todo))\n//     });\n//   };\n\n//   // Handle Reminder actions\n//   const handleAddReminder = async () => {\n//     const { text, date, recurring } = newReminder;\n//     if (!text || !date) return;\n\n//     const response = await axios.post(`/api/contacts/${id}/reminders`, { text, date, recurring });\n//     setContact({ ...contact, reminders: [...contact.reminders, response.data] });\n//     setNewReminder({ text: '', date: '', recurring: false }); // Reset form\n//   };\n\n//   const handleDeleteReminder = async (reminderId) => {\n//     await axios.delete(`/api/contacts/${id}/reminders/${reminderId}`);\n//     setContact({\n//       ...contact,\n//       reminders: contact.reminders.filter(reminder => reminder._id !== reminderId)\n//     });\n//   };\n\n//   // Handle Finance actions\n//   const handleAddTransaction = async () => {\n//     const { amount, description, category, date } = newTransaction;\n//     if (!amount || !description || !date) return;\n\n//     const response = await axios.post(`/api/contacts/${id}/finance`, { amount, description, category, date });\n//     setContact({ ...contact, transactions: [...contact.transactions, response.data] });\n//     setNewTransaction({ amount: '', description: '', category: 'Expense', date: '' }); // Reset form\n//   };\n\n//   const handleDeleteTransaction = async (transactionId) => {\n//     await axios.delete(`/api/contacts/${id}/finance/${transactionId}`);\n//     setContact({\n//       ...contact,\n//       transactions: contact.transactions.filter(transaction => transaction._id !== transactionId)\n//     });\n//   };\n\n//   // Sorting todos by due date\n//   const handleSortTodos = () => {\n//     const sorted = [...contact.todos].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\n//     setSortedTodos(sorted);\n//   };\n\n//   // Filtering todos by priority\n//   const handleFilterTodos = (priority) => {\n//     setFilter(priority);\n//     const filtered = priority === 'All' ? contact.todos : contact.todos.filter(todo => todo.priority === priority);\n//     setSortedTodos(filtered);\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{contact.name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\n//             {contact.todos && contact.todos.length > 0 && (\n//               <div>\n//                 <button onClick={handleSortTodos}>Sort by Due Date</button>\n//                 <select onChange={(e) => handleFilterTodos(e.target.value)}>\n//                   <option value=\"All\">All</option>\n//                   <option value=\"Low\">Low</option>\n//                   <option value=\"Medium\">Medium</option>\n//                   <option value=\"High\">High</option>\n//                 </select>\n//                 <ul>\n//                   {sortedTodos.map(todo => (\n//                     <li key={todo._id}>\n//                       {todo.text} - {todo.dueDate} - {todo.priority}\n//                       <button onClick={() => handleToggleComplete(todo._id)}>\n//                         {todo.completed ? 'Mark Incomplete' : 'Mark Complete'}\n//                       </button>\n//                       <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\n//             {contact.reminders && contact.reminders.length > 0 && (\n//               <ul>\n//                 {contact.reminders.map(reminder => (\n//                   <li key={reminder._id}>\n//                     {reminder.text} - {reminder.date} - {reminder.recurring ? 'Recurring' : 'One-time'}\n//                     <button onClick={() => handleDeleteReminder(reminder._id)}>Delete</button>\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\n//             {contact.transactions && contact.transactions.length > 0 && (\n//               <ul>\n//                 {contact.transactions.map(transaction => (\n//                   <li key={transaction._id}>\n//                     {transaction.description} - {transaction.amount} - {transaction.category}\n//                     <button onClick={() => handleDeleteTransaction(transaction._id)}>Delete</button>\n//                   </li>\n//                 ))}\n//               </ul>\n//             )}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// const IndividualContact = () => {\n//   const { id } = useParams();\n//   const [contact, setContact] = useState(null);\n//   const [newTodo, setNewTodo] = useState({ text: '', dueDate: '', priority: 'Medium' });\n//   const [newReminder, setNewReminder] = useState({ text: '', date: '', recurring: false });\n//   const [newTransaction, setNewTransaction] = useState({ amount: '', description: '', category: '', date: '' });\n//   const [sortedTodos, setSortedTodos] = useState([]);\n\n//   // Fetch contact details\n//   const fetchContact = async (id) => {\n//     try {\n//       const response = await axios.get(`/api/contacts/${id}`);\n//       return response.data;\n//     } catch (error) {\n//       console.error(\"Error fetching contact:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchContact(id).then(setContact);\n//   }, [id]);\n\n//   // Handle Add Todo\n//   const handleAddTodo = async () => {\n//     const { text, dueDate, priority } = newTodo;\n//     if (!text || !dueDate) return;\n\n//     const response = await axios.post(`/api/contacts/${id}/todos`, { text, dueDate, priority });\n//     const updatedContact = await fetchContact(id);\n//     setContact(updatedContact); \n//     setNewTodo({ text: '', dueDate: '', priority: 'Medium' }); // Reset form\n//   };\n\n//   // Handle Sort Todos\n//   const handleSortTodos = () => {\n//     const sorted = [...contact.todos].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\n//     setSortedTodos(sorted);\n//   };\n\n//   // Handle Filter Todos by Priority\n//   const handleFilterTodos = (priority) => {\n//     if (priority === 'All') {\n//       setSortedTodos(contact.todos);\n//     } else {\n//       const filteredTodos = contact.todos.filter(todo => todo.priority === priority);\n//       setSortedTodos(filteredTodos);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {contact && (\n//         <div>\n//           <h1>{contact.name}</h1>\n//           <h3>{contact.category}</h3>\n\n//           {/* Add Todo Form */}\n//           <div>\n//             <input \n//               type=\"text\"\n//               placeholder=\"Todo text\"\n//               value={newTodo.text}\n//               onChange={(e) => setNewTodo({ ...newTodo, text: e.target.value })}\n//             />\n//             <input \n//               type=\"datetime-local\"\n//               value={newTodo.dueDate}\n//               onChange={(e) => setNewTodo({ ...newTodo, dueDate: e.target.value })}\n//             />\n//             <select \n//               value={newTodo.priority}\n//               onChange={(e) => setNewTodo({ ...newTodo, priority: e.target.value })}\n//             >\n//               <option value=\"Low\">Low</option>\n//               <option value=\"Medium\">Medium</option>\n//               <option value=\"High\">High</option>\n//             </select>\n//             <button onClick={handleAddTodo}>Add Todo</button>\n//           </div>\n\n//           {/* Sort and Filter Todos */}\n//           <div>\n//             <button onClick={handleSortTodos}>Sort by Due Date</button>\n//             <select onChange={(e) => handleFilterTodos(e.target.value)}>\n//               <option value=\"All\">All</option>\n//               <option value=\"Low\">Low</option>\n//               <option value=\"Medium\">Medium</option>\n//               <option value=\"High\">High</option>\n//             </select>\n//           </div>\n\n//           {/* Todo List */}\n//           {sortedTodos && sortedTodos.length > 0 && (\n//             <div>\n//               {sortedTodos.map(todo => (\n//                 <div key={todo._id}>{todo.text}</div>\n//               ))}\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         {/* <button className=\"back-button\">‚Üê Contacts</button> */}\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n\n//         {/* <h1 className=\"title\">Contact</h1> */}\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n//       <div className=\"tab-bar\">\n//         <button\n//           className={tab ${activeTab === 'todo' ? 'active' : ''}}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={tab ${activeTab === 'reminder' ? 'active' : ''}}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={tab ${activeTab === 'finance' ? 'active' : ''}}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\">+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         {/* <button className=\"back-button\">‚Üê Contacts</button> */}\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n\n//         {/* <h1 className=\"title\">Contact</h1> */}\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n//       <div className=\"tab-bar\">\n//         <button\n//           className={tab ${activeTab === 'todo' ? 'active' : ''}}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={tab ${activeTab === 'reminder' ? 'active' : ''}}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={tab ${activeTab === 'finance' ? 'active' : ''}}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\">+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// ----------------\n\n// // src/IndividualContact.js\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// import { getContactById, updateContact, deleteContact } from '../api';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const params = new URLSearchParams(location.search);\n//   const contactId = params.get('id'); // Assuming ID is passed in URL as 'id'\n\n//   const [contact, setContact] = useState(null);\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [reminders, setReminders] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch the contact data by ID\n//     const fetchContact = async () => {\n//       try {\n//         const data = await getContactById(contactId);\n//         setContact(data);\n//         setTodos(data.todos || []);\n//         setReminders(data.reminders || []);\n//         setTransactions(data.transactions || []);\n//       } catch (error) {\n//         console.error('Error fetching contact data:', error);\n//       }\n//     };\n//     fetchContact();\n//   }, [contactId]);\n\n//   const handleAddTodo = () => {\n//     const newTodo = prompt('Enter new todo:');\n//     if (newTodo) {\n//       const updatedTodos = [...todos, { text: newTodo }];\n//       setTodos(updatedTodos);\n//       updateContact(contactId, { ...contact, todos: updatedTodos });\n//     }\n//   };\n\n//   const handleAddReminder = () => {\n//     const newReminder = prompt('Enter new reminder:');\n//     if (newReminder) {\n//       const updatedReminders = [...reminders, { text: newReminder }];\n//       setReminders(updatedReminders);\n//       updateContact(contactId, { ...contact, reminders: updatedReminders });\n//     }\n//   };\n\n//   const handleAddTransaction = () => {\n//     const newTransaction = prompt('Enter new transaction:');\n//     if (newTransaction) {\n//       const updatedTransactions = [...transactions, { text: newTransaction }];\n//       setTransactions(updatedTransactions);\n//       updateContact(contactId, { ...contact, transactions: updatedTransactions });\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           {contact ? contact.avatar : <i className=\"bi bi-person-circle\"></i>}\n//         </div>\n//         <h2>{contact ? contact.name : \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             {reminders.map((reminder, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{reminder.text}</span>\n//                 <FaBell className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             {transactions.map((transaction, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{transaction.text}</span>\n//                 <FaMoneyBillWave className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// src/IndividualContact.js\n// import React, { useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         {/* <button className=\"back-button\">‚Üê Contacts</button> */}\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n\n//         {/* <h1 className=\"title\">Contact</h1> */}\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\">+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useLocation","Link","FaCheckSquare","FaBell","FaMoneyBillWave","Contacts","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","activeTab","setActiveTab","todos","setTodos","text","reminders","setReminders","transactions","setTransactions","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","index","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n// src/IndividualContact.js\r\nimport React, { useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\nimport Contacts from './Contacts';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name'); // Get the contact name from URL\r\n  const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n  const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n  const [reminders, setReminders] = useState([]); // Sample reminder data\r\n  const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        {/* <button className=\"back-button\">‚Üê Contacts</button> */}\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n\r\n        {/* <h1 className=\"title\">Contact</h1> */}\r\n      </header>\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <i className=\"bi bi-person-circle\"></i>\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {todos.map((todo, index) => (\r\n              <div key={index} className=\"list-item\">\r\n                <span>{todo.text}</span>\r\n                <FaCheckSquare className=\"status-icon\" />\r\n              </div>\r\n            ))}\r\n            <button className=\"add-button\">+ Add New Todo</button>\r\n          </div>\r\n        )}\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// // import { getContactById, updateContact, deleteContact } from '../api';\r\n// import { getContactById, updateContact, deleteContact } from './api'; // relative to src/\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const contactId = params.get('id'); // Assuming ID is passed in URL as 'id'\r\n\r\n//   const [contact, setContact] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [reminders, setReminders] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the contact data by ID\r\n//     const fetchContact = async () => {\r\n//       try {\r\n//         const data = await getContactById(contactId);\r\n//         setContact(data);\r\n//         setTodos(data.todos || []);\r\n//         setReminders(data.reminders || []);\r\n//         setTransactions(data.transactions || []);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contact data:', error);\r\n//       }\r\n//     };\r\n//     fetchContact();\r\n//   }, [contactId]);\r\n\r\n//   const handleAddTodo = () => {\r\n//     const newTodo = prompt('Enter new todo:');\r\n//     if (newTodo) {\r\n//       const updatedTodos = [...todos, { text: newTodo }];\r\n//       setTodos(updatedTodos);\r\n//       updateContact(contactId, { ...contact, todos: updatedTodos });\r\n//     }\r\n//   };\r\n\r\n//   const handleAddReminder = () => {\r\n//     const newReminder = prompt('Enter new reminder:');\r\n//     if (newReminder) {\r\n//       const updatedReminders = [...reminders, { text: newReminder }];\r\n//       setReminders(updatedReminders);\r\n//       updateContact(contactId, { ...contact, reminders: updatedReminders });\r\n//     }\r\n//   };\r\n\r\n//   const handleAddTransaction = () => {\r\n//     const newTransaction = prompt('Enter new transaction:');\r\n//     if (newTransaction) {\r\n//       const updatedTransactions = [...transactions, { text: newTransaction }];\r\n//       setTransactions(updatedTransactions);\r\n//       updateContact(contactId, { ...contact, transactions: updatedTransactions });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Contacts</button>\r\n//       </header>\r\n      \r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           {contact ? contact.avatar : <i className=\"bi bi-person-circle\"></i>}\r\n//         </div>\r\n//         <h2>{contact ? contact.name : \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             {reminders.map((reminder, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{reminder.text}</span>\r\n//                 <FaBell className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             {transactions.map((transaction, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{transaction.text}</span>\r\n//                 <FaMoneyBillWave className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n\r\n// const API_URL = 'http://localhost:5000/api'; // Backend API URL\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const contactId = params.get('id'); // Get the contact ID from URL\r\n//   const name = params.get('name'); // Get the contact name\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n//   // State management\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [reminders, setReminders] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n\r\n//   // Fetch data for todos, reminders, and transactions\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const todosRes = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\r\n//         setTodos(todosRes.data);\r\n\r\n//         const remindersRes = await axios.get(`${API_URL}/contacts/${contactId}/reminders`);\r\n//         setReminders(remindersRes.data);\r\n\r\n//         const transactionsRes = await axios.get(`${API_URL}/contacts/${contactId}/finance`);\r\n//         setTransactions(transactionsRes.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, [contactId]);\r\n\r\n//   // Add Todo\r\n//   const addTodo = async (todoData) => {\r\n//     try {\r\n//       const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, todoData);\r\n//       setTodos([...todos, response.data]);\r\n//     } catch (error) {\r\n//       console.error('Error adding todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Edit Todo\r\n//   const editTodo = async (todoId, updatedTodoData) => {\r\n//     try {\r\n//       const response = await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodoData);\r\n//       const updatedTodos = todos.map(todo =>\r\n//         todo._id === todoId ? { ...todo, ...updatedTodoData } : todo\r\n//       );\r\n//       setTodos(updatedTodos);\r\n//     } catch (error) {\r\n//       console.error('Error editing todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Delete Todo\r\n//   const deleteTodo = async (todoId) => {\r\n//     try {\r\n//       await axios.delete(`${API_URL}/contacts/${contactId}/todos/${todoId}`);\r\n//       setTodos(todos.filter(todo => todo._id !== todoId));\r\n//     } catch (error) {\r\n//       console.error('Error deleting todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Mark Todo as Complete\r\n//   const toggleTodoComplete = async (todoId) => {\r\n//     try {\r\n//       const todoToUpdate = todos.find(todo => todo._id === todoId);\r\n//       const updatedTodo = { ...todoToUpdate, completed: !todoToUpdate.completed };\r\n//       await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodo);\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error toggling todo complete:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Add Reminder\r\n//   const addReminder = async (reminderData) => {\r\n//     try {\r\n//       const response = await axios.post(`${API_URL}/contacts/${contactId}/reminders`, reminderData);\r\n//       setReminders([...reminders, response.data]);\r\n//     } catch (error) {\r\n//       console.error('Error adding reminder:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Add Finance Transaction\r\n//   const addTransaction = async (transactionData) => {\r\n//     try {\r\n//       const response = await axios.post(`${API_URL}/contacts/${contactId}/finance`, transactionData);\r\n//       setTransactions([...transactions, response.data]);\r\n//     } catch (error) {\r\n//       console.error('Error adding transaction:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo) => (\r\n//               <div key={todo._id} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <button onClick={() => toggleTodoComplete(todo._id)}>{todo.completed ? 'Unmark' : 'Complete'}</button>\r\n//                 <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={() => addTodo({ text: 'New Todo', completed: false })}>+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\" onClick={() => addReminder({ text: 'New Reminder' })}>+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\" onClick={() => addTransaction({ amount: 100, category: 'expense' })}>+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n\r\n// // Helper function to fetch the contact data by ID\r\n// const fetchContact = async (id) => {\r\n//   const response = await axios.get(`/api/contacts/${id}`);\r\n//   return response.data;\r\n// };\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const { id } = useParams(); // Contact ID from URL\r\n//   const [contact, setContact] = useState(null); // Initialize contact as null\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n\r\n//   const [newTodo, setNewTodo] = useState({ text: '', dueDate: '', priority: 'Medium' });\r\n//   const [newReminder, setNewReminder] = useState({ text: '', date: '', recurring: false });\r\n//   const [newTransaction, setNewTransaction] = useState({ amount: '', description: '', category: 'Expense', date: '' });\r\n\r\n//   const [sortedTodos, setSortedTodos] = useState([]);\r\n//   const [filter, setFilter] = useState('All'); // Filter for todos\r\n\r\n//   // Fetch the contact data when component loads\r\n//   useEffect(() => {\r\n//     fetchContact(id).then(setContact);\r\n//   }, [id]);\r\n\r\n//   // Check if contact is available before attempting to access its properties\r\n//   if (!contact) {\r\n//     return <div>Loading...</div>; // Display loading message while contact data is being fetched\r\n//   }\r\n\r\n//   // Handle Todo actions\r\n//   const handleAddTodo = async () => {\r\n//     const { text, dueDate, priority } = newTodo;\r\n//     if (!text || !dueDate) return;\r\n\r\n//     const response = await axios.post(`/api/contacts/${id}/todos`, { text, dueDate, priority });\r\n//     setContact({ ...contact, todos: [...contact.todos, response.data] });\r\n//     setNewTodo({ text: '', dueDate: '', priority: 'Medium' }); // Reset form\r\n//   };\r\n\r\n//   const handleDeleteTodo = async (todoId) => {\r\n//     await axios.delete(`/api/contacts/${id}/todos/${todoId}`);\r\n//     setContact({ ...contact, todos: contact.todos.filter(todo => todo._id !== todoId) });\r\n//   };\r\n\r\n//   const handleToggleComplete = async (todoId) => {\r\n//     const todo = contact.todos.find(todo => todo._id === todoId);\r\n//     const updatedTodo = { ...todo, completed: !todo.completed };\r\n//     await axios.put(`/api/contacts/${id}/todos/${todoId}`, updatedTodo);\r\n//     setContact({\r\n//       ...contact,\r\n//       todos: contact.todos.map(todo => (todo._id === todoId ? updatedTodo : todo))\r\n//     });\r\n//   };\r\n\r\n//   // Handle Reminder actions\r\n//   const handleAddReminder = async () => {\r\n//     const { text, date, recurring } = newReminder;\r\n//     if (!text || !date) return;\r\n\r\n//     const response = await axios.post(`/api/contacts/${id}/reminders`, { text, date, recurring });\r\n//     setContact({ ...contact, reminders: [...contact.reminders, response.data] });\r\n//     setNewReminder({ text: '', date: '', recurring: false }); // Reset form\r\n//   };\r\n\r\n//   const handleDeleteReminder = async (reminderId) => {\r\n//     await axios.delete(`/api/contacts/${id}/reminders/${reminderId}`);\r\n//     setContact({\r\n//       ...contact,\r\n//       reminders: contact.reminders.filter(reminder => reminder._id !== reminderId)\r\n//     });\r\n//   };\r\n\r\n//   // Handle Finance actions\r\n//   const handleAddTransaction = async () => {\r\n//     const { amount, description, category, date } = newTransaction;\r\n//     if (!amount || !description || !date) return;\r\n\r\n//     const response = await axios.post(`/api/contacts/${id}/finance`, { amount, description, category, date });\r\n//     setContact({ ...contact, transactions: [...contact.transactions, response.data] });\r\n//     setNewTransaction({ amount: '', description: '', category: 'Expense', date: '' }); // Reset form\r\n//   };\r\n\r\n//   const handleDeleteTransaction = async (transactionId) => {\r\n//     await axios.delete(`/api/contacts/${id}/finance/${transactionId}`);\r\n//     setContact({\r\n//       ...contact,\r\n//       transactions: contact.transactions.filter(transaction => transaction._id !== transactionId)\r\n//     });\r\n//   };\r\n\r\n//   // Sorting todos by due date\r\n//   const handleSortTodos = () => {\r\n//     const sorted = [...contact.todos].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\r\n//     setSortedTodos(sorted);\r\n//   };\r\n\r\n//   // Filtering todos by priority\r\n//   const handleFilterTodos = (priority) => {\r\n//     setFilter(priority);\r\n//     const filtered = priority === 'All' ? contact.todos : contact.todos.filter(todo => todo.priority === priority);\r\n//     setSortedTodos(filtered);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{contact.name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\r\n//             {contact.todos && contact.todos.length > 0 && (\r\n//               <div>\r\n//                 <button onClick={handleSortTodos}>Sort by Due Date</button>\r\n//                 <select onChange={(e) => handleFilterTodos(e.target.value)}>\r\n//                   <option value=\"All\">All</option>\r\n//                   <option value=\"Low\">Low</option>\r\n//                   <option value=\"Medium\">Medium</option>\r\n//                   <option value=\"High\">High</option>\r\n//                 </select>\r\n//                 <ul>\r\n//                   {sortedTodos.map(todo => (\r\n//                     <li key={todo._id}>\r\n//                       {todo.text} - {todo.dueDate} - {todo.priority}\r\n//                       <button onClick={() => handleToggleComplete(todo._id)}>\r\n//                         {todo.completed ? 'Mark Incomplete' : 'Mark Complete'}\r\n//                       </button>\r\n//                       <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n//                     </li>\r\n//                   ))}\r\n//                 </ul>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\r\n//             {contact.reminders && contact.reminders.length > 0 && (\r\n//               <ul>\r\n//                 {contact.reminders.map(reminder => (\r\n//                   <li key={reminder._id}>\r\n//                     {reminder.text} - {reminder.date} - {reminder.recurring ? 'Recurring' : 'One-time'}\r\n//                     <button onClick={() => handleDeleteReminder(reminder._id)}>Delete</button>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\r\n//             {contact.transactions && contact.transactions.length > 0 && (\r\n//               <ul>\r\n//                 {contact.transactions.map(transaction => (\r\n//                   <li key={transaction._id}>\r\n//                     {transaction.description} - {transaction.amount} - {transaction.category}\r\n//                     <button onClick={() => handleDeleteTransaction(transaction._id)}>Delete</button>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const IndividualContact = () => {\r\n//   const { id } = useParams();\r\n//   const [contact, setContact] = useState(null);\r\n//   const [newTodo, setNewTodo] = useState({ text: '', dueDate: '', priority: 'Medium' });\r\n//   const [newReminder, setNewReminder] = useState({ text: '', date: '', recurring: false });\r\n//   const [newTransaction, setNewTransaction] = useState({ amount: '', description: '', category: '', date: '' });\r\n//   const [sortedTodos, setSortedTodos] = useState([]);\r\n\r\n//   // Fetch contact details\r\n//   const fetchContact = async (id) => {\r\n//     try {\r\n//       const response = await axios.get(`/api/contacts/${id}`);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching contact:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchContact(id).then(setContact);\r\n//   }, [id]);\r\n\r\n//   // Handle Add Todo\r\n//   const handleAddTodo = async () => {\r\n//     const { text, dueDate, priority } = newTodo;\r\n//     if (!text || !dueDate) return;\r\n\r\n//     const response = await axios.post(`/api/contacts/${id}/todos`, { text, dueDate, priority });\r\n//     const updatedContact = await fetchContact(id);\r\n//     setContact(updatedContact); \r\n//     setNewTodo({ text: '', dueDate: '', priority: 'Medium' }); // Reset form\r\n//   };\r\n\r\n//   // Handle Sort Todos\r\n//   const handleSortTodos = () => {\r\n//     const sorted = [...contact.todos].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\r\n//     setSortedTodos(sorted);\r\n//   };\r\n\r\n//   // Handle Filter Todos by Priority\r\n//   const handleFilterTodos = (priority) => {\r\n//     if (priority === 'All') {\r\n//       setSortedTodos(contact.todos);\r\n//     } else {\r\n//       const filteredTodos = contact.todos.filter(todo => todo.priority === priority);\r\n//       setSortedTodos(filteredTodos);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {contact && (\r\n//         <div>\r\n//           <h1>{contact.name}</h1>\r\n//           <h3>{contact.category}</h3>\r\n\r\n//           {/* Add Todo Form */}\r\n//           <div>\r\n//             <input \r\n//               type=\"text\"\r\n//               placeholder=\"Todo text\"\r\n//               value={newTodo.text}\r\n//               onChange={(e) => setNewTodo({ ...newTodo, text: e.target.value })}\r\n//             />\r\n//             <input \r\n//               type=\"datetime-local\"\r\n//               value={newTodo.dueDate}\r\n//               onChange={(e) => setNewTodo({ ...newTodo, dueDate: e.target.value })}\r\n//             />\r\n//             <select \r\n//               value={newTodo.priority}\r\n//               onChange={(e) => setNewTodo({ ...newTodo, priority: e.target.value })}\r\n//             >\r\n//               <option value=\"Low\">Low</option>\r\n//               <option value=\"Medium\">Medium</option>\r\n//               <option value=\"High\">High</option>\r\n//             </select>\r\n//             <button onClick={handleAddTodo}>Add Todo</button>\r\n//           </div>\r\n\r\n//           {/* Sort and Filter Todos */}\r\n//           <div>\r\n//             <button onClick={handleSortTodos}>Sort by Due Date</button>\r\n//             <select onChange={(e) => handleFilterTodos(e.target.value)}>\r\n//               <option value=\"All\">All</option>\r\n//               <option value=\"Low\">Low</option>\r\n//               <option value=\"Medium\">Medium</option>\r\n//               <option value=\"High\">High</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Todo List */}\r\n//           {sortedTodos && sortedTodos.length > 0 && (\r\n//             <div>\r\n//               {sortedTodos.map(todo => (\r\n//                 <div key={todo._id}>{todo.text}</div>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\r\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         {/* <button className=\"back-button\">‚Üê Contacts</button> */}\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n\r\n//         {/* <h1 className=\"title\">Contact</h1> */}\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={tab ${activeTab === 'todo' ? 'active' : ''}}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={tab ${activeTab === 'reminder' ? 'active' : ''}}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={tab ${activeTab === 'finance' ? 'active' : ''}}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\">+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\r\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         {/* <button className=\"back-button\">‚Üê Contacts</button> */}\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n\r\n//         {/* <h1 className=\"title\">Contact</h1> */}\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={tab ${activeTab === 'todo' ? 'active' : ''}}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={tab ${activeTab === 'reminder' ? 'active' : ''}}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={tab ${activeTab === 'finance' ? 'active' : ''}}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\">+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ----------------\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// import { getContactById, updateContact, deleteContact } from '../api';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const contactId = params.get('id'); // Assuming ID is passed in URL as 'id'\r\n\r\n//   const [contact, setContact] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [reminders, setReminders] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the contact data by ID\r\n//     const fetchContact = async () => {\r\n//       try {\r\n//         const data = await getContactById(contactId);\r\n//         setContact(data);\r\n//         setTodos(data.todos || []);\r\n//         setReminders(data.reminders || []);\r\n//         setTransactions(data.transactions || []);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contact data:', error);\r\n//       }\r\n//     };\r\n//     fetchContact();\r\n//   }, [contactId]);\r\n\r\n//   const handleAddTodo = () => {\r\n//     const newTodo = prompt('Enter new todo:');\r\n//     if (newTodo) {\r\n//       const updatedTodos = [...todos, { text: newTodo }];\r\n//       setTodos(updatedTodos);\r\n//       updateContact(contactId, { ...contact, todos: updatedTodos });\r\n//     }\r\n//   };\r\n\r\n//   const handleAddReminder = () => {\r\n//     const newReminder = prompt('Enter new reminder:');\r\n//     if (newReminder) {\r\n//       const updatedReminders = [...reminders, { text: newReminder }];\r\n//       setReminders(updatedReminders);\r\n//       updateContact(contactId, { ...contact, reminders: updatedReminders });\r\n//     }\r\n//   };\r\n\r\n//   const handleAddTransaction = () => {\r\n//     const newTransaction = prompt('Enter new transaction:');\r\n//     if (newTransaction) {\r\n//       const updatedTransactions = [...transactions, { text: newTransaction }];\r\n//       setTransactions(updatedTransactions);\r\n//       updateContact(contactId, { ...contact, transactions: updatedTransactions });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Contacts</button>\r\n//       </header>\r\n      \r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           {contact ? contact.avatar : <i className=\"bi bi-person-circle\"></i>}\r\n//         </div>\r\n//         <h2>{contact ? contact.name : \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             {reminders.map((reminder, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{reminder.text}</span>\r\n//                 <FaBell className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             {transactions.map((transaction, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{transaction.text}</span>\r\n//                 <FaMoneyBillWave className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n// src/IndividualContact.js\r\n// import React, { useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\r\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         {/* <button className=\"back-button\">‚Üê Contacts</button> */}\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n\r\n//         {/* <h1 className=\"title\">Contact</h1> */}\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\">+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,QAAQ,gBAAgB;AACvE,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EACjC,MAAMC,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAErC,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACpD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC;IAAEsB,IAAI,EAAE;EAAwB,CAAC,EAAE;IAAEA,IAAI,EAAE;EAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;EACvG,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,oBACEQ,OAAA;IAAKmB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpB,OAAA;MAAQmB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eAExBpB,OAAA;QAAQmB,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGnF,CAAC,eACT5B,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BpB,OAAA;QAAKmB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BpB,OAAA;UAAGmB,SAAS,EAAC;QAAqB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACN5B,OAAA;QAAAoB,QAAA,EAAKb,IAAI,IAAI;MAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACN5B,OAAA;MAAKmB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBpB,OAAA;QACEmB,SAAS,EAAE,OAAOT,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzDW,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAAC,MAAM,CAAE;QAAAS,QAAA,gBAEpCpB,OAAA,CAACL,aAAa;UAACwB,SAAS,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SACpC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5B,OAAA;QACEmB,SAAS,EAAE,OAAOT,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC7DW,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAAC,UAAU,CAAE;QAAAS,QAAA,gBAExCpB,OAAA,CAACJ,MAAM;UAACuB,SAAS,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,aAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5B,OAAA;QACEmB,SAAS,EAAE,OAAOT,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC5DW,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAAC,SAAS,CAAE;QAAAS,QAAA,gBAEvCpB,OAAA,CAACH,eAAe;UAACsB,SAAS,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,YACtC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN5B,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzBV,SAAS,KAAK,MAAM,iBACnBV,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAC1BR,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB/B,OAAA;UAAiBmB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACpCpB,OAAA;YAAAoB,QAAA,EAAOU,IAAI,CAAChB;UAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxB5B,OAAA,CAACL,aAAa;YAACwB,SAAS,EAAC;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAFjCG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN,CAAC,eACF5B,OAAA;UAAQmB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACN,EACAlB,SAAS,KAAK,UAAU,iBACvBV,OAAA;QAAKmB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BpB,OAAA;UAAQmB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACN,EACAlB,SAAS,KAAK,SAAS,iBACtBV,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BpB,OAAA;UAAQmB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtEID,iBAAiB;EAAA,QACJR,WAAW;AAAA;AAAAuC,EAAA,GADxB/B,iBAAiB;AAwEvB,eAAeA,iBAAiB;;AAOhgqBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAyBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAmBA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}