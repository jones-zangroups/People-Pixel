{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// // src/IndividualContact.js\n// import React, { useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         {/* <button className=\"back-button\">← Contacts</button> */}\n//         <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\n\n//         {/* <h1 className=\"title\">Contact</h1> */}\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\">+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// // import { getContactById, updateContact, deleteContact } from '../api';\n// import { getContactById, updateContact, deleteContact } from './api'; // relative to src/\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const params = new URLSearchParams(location.search);\n//   const contactId = params.get('id'); // Assuming ID is passed in URL as 'id'\n\n//   const [contact, setContact] = useState(null);\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [reminders, setReminders] = useState([]);\n//   const [transactions, setTransactions] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch the contact data by ID\n//     const fetchContact = async () => {\n//       try {\n//         const data = await getContactById(contactId);\n//         setContact(data);\n//         setTodos(data.todos || []);\n//         setReminders(data.reminders || []);\n//         setTransactions(data.transactions || []);\n//       } catch (error) {\n//         console.error('Error fetching contact data:', error);\n//       }\n//     };\n//     fetchContact();\n//   }, [contactId]);\n\n//   const handleAddTodo = () => {\n//     const newTodo = prompt('Enter new todo:');\n//     if (newTodo) {\n//       const updatedTodos = [...todos, { text: newTodo }];\n//       setTodos(updatedTodos);\n//       updateContact(contactId, { ...contact, todos: updatedTodos });\n//     }\n//   };\n\n//   const handleAddReminder = () => {\n//     const newReminder = prompt('Enter new reminder:');\n//     if (newReminder) {\n//       const updatedReminders = [...reminders, { text: newReminder }];\n//       setReminders(updatedReminders);\n//       updateContact(contactId, { ...contact, reminders: updatedReminders });\n//     }\n//   };\n\n//   const handleAddTransaction = () => {\n//     const newTransaction = prompt('Enter new transaction:');\n//     if (newTransaction) {\n//       const updatedTransactions = [...transactions, { text: newTransaction }];\n//       setTransactions(updatedTransactions);\n//       updateContact(contactId, { ...contact, transactions: updatedTransactions });\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => navigate(-1)}>← Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           {contact ? contact.avatar : <i className=\"bi bi-person-circle\"></i>}\n//         </div>\n//         <h2>{contact ? contact.name : \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             {reminders.map((reminder, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{reminder.text}</span>\n//                 <FaBell className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             {transactions.map((transaction, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{transaction.text}</span>\n//                 <FaMoneyBillWave className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n// src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api'; // Backend API URL\n\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const contactId = params.get('id'); // Get the contact ID from URL\n  const name = params.get('name'); // Get the contact name\n  const avatar = params.get('avatar'); // Get the contact avatar\n\n  // State management\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n\n  // Fetch data for todos, reminders, and transactions\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const todosRes = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\n        setTodos(todosRes.data);\n        const remindersRes = await axios.get(`${API_URL}/contacts/${contactId}/reminders`);\n        setReminders(remindersRes.data);\n        const transactionsRes = await axios.get(`${API_URL}/contacts/${contactId}/finance`);\n        setTransactions(transactionsRes.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [contactId]);\n\n  // Add Todo\n  const addTodo = async todoData => {\n    try {\n      const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, todoData);\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  // Edit Todo\n  const editTodo = async (todoId, updatedTodoData) => {\n    try {\n      const response = await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodoData);\n      const updatedTodos = todos.map(todo => todo._id === todoId ? {\n        ...todo,\n        ...updatedTodoData\n      } : todo);\n      setTodos(updatedTodos);\n    } catch (error) {\n      console.error('Error editing todo:', error);\n    }\n  };\n\n  // Delete Todo\n  const deleteTodo = async todoId => {\n    try {\n      await axios.delete(`${API_URL}/contacts/${contactId}/todos/${todoId}`);\n      setTodos(todos.filter(todo => todo._id !== todoId));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  // Mark Todo as Complete\n  const toggleTodoComplete = async todoId => {\n    try {\n      const todoToUpdate = todos.find(todo => todo._id === todoId);\n      const updatedTodo = {\n        ...todoToUpdate,\n        completed: !todoToUpdate.completed\n      };\n      await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodo);\n      setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (error) {\n      console.error('Error toggling todo complete:', error);\n    }\n  };\n\n  // Add Reminder\n  const addReminder = async reminderData => {\n    try {\n      const response = await axios.post(`${API_URL}/contacts/${contactId}/reminders`, reminderData);\n      setReminders([...reminders, response.data]);\n    } catch (error) {\n      console.error('Error adding reminder:', error);\n    }\n  };\n\n  // Add Finance Transaction\n  const addTransaction = async transactionData => {\n    try {\n      const response = await axios.post(`${API_URL}/contacts/${contactId}/finance`, transactionData);\n      setTransactions([...transactions, response.data]);\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-person-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleTodoComplete(todo._id),\n            children: todo.completed ? 'Unmark' : 'Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(todo._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => addTodo({\n            text: 'New Todo',\n            completed: false\n          }),\n          children: \"+ Add New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => addReminder({\n            text: 'New Reminder'\n          }),\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => addTransaction({\n            amount: 100,\n            category: 'expense'\n          }),\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"Gq/Rj8OUewQLypXajWOSryIuDrY=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","axios","FaCheckSquare","FaBell","FaMoneyBillWave","jsxDEV","_jsxDEV","API_URL","IndividualContact","_s","location","params","URLSearchParams","search","contactId","get","name","avatar","activeTab","setActiveTab","todos","setTodos","reminders","setReminders","transactions","setTransactions","fetchData","todosRes","data","remindersRes","transactionsRes","error","console","addTodo","todoData","response","post","editTodo","todoId","updatedTodoData","put","updatedTodos","map","todo","_id","deleteTodo","delete","filter","toggleTodoComplete","todoToUpdate","find","updatedTodo","completed","addReminder","reminderData","addTransaction","transactionData","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","text","amount","category","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n// // src/IndividualContact.js\r\n// import React, { useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\r\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         {/* <button className=\"back-button\">← Contacts</button> */}\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\r\n\r\n//         {/* <h1 className=\"title\">Contact</h1> */}\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\">+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, useNavigate } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// // import { getContactById, updateContact, deleteContact } from '../api';\r\n// import { getContactById, updateContact, deleteContact } from './api'; // relative to src/\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const contactId = params.get('id'); // Assuming ID is passed in URL as 'id'\r\n\r\n//   const [contact, setContact] = useState(null);\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [reminders, setReminders] = useState([]);\r\n//   const [transactions, setTransactions] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch the contact data by ID\r\n//     const fetchContact = async () => {\r\n//       try {\r\n//         const data = await getContactById(contactId);\r\n//         setContact(data);\r\n//         setTodos(data.todos || []);\r\n//         setReminders(data.reminders || []);\r\n//         setTransactions(data.transactions || []);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contact data:', error);\r\n//       }\r\n//     };\r\n//     fetchContact();\r\n//   }, [contactId]);\r\n\r\n//   const handleAddTodo = () => {\r\n//     const newTodo = prompt('Enter new todo:');\r\n//     if (newTodo) {\r\n//       const updatedTodos = [...todos, { text: newTodo }];\r\n//       setTodos(updatedTodos);\r\n//       updateContact(contactId, { ...contact, todos: updatedTodos });\r\n//     }\r\n//   };\r\n\r\n//   const handleAddReminder = () => {\r\n//     const newReminder = prompt('Enter new reminder:');\r\n//     if (newReminder) {\r\n//       const updatedReminders = [...reminders, { text: newReminder }];\r\n//       setReminders(updatedReminders);\r\n//       updateContact(contactId, { ...contact, reminders: updatedReminders });\r\n//     }\r\n//   };\r\n\r\n//   const handleAddTransaction = () => {\r\n//     const newTransaction = prompt('Enter new transaction:');\r\n//     if (newTransaction) {\r\n//       const updatedTransactions = [...transactions, { text: newTransaction }];\r\n//       setTransactions(updatedTransactions);\r\n//       updateContact(contactId, { ...contact, transactions: updatedTransactions });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => navigate(-1)}>← Contacts</button>\r\n//       </header>\r\n      \r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           {contact ? contact.avatar : <i className=\"bi bi-person-circle\"></i>}\r\n//         </div>\r\n//         <h2>{contact ? contact.name : \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddTodo}>+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             {reminders.map((reminder, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{reminder.text}</span>\r\n//                 <FaBell className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddReminder}>+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             {transactions.map((transaction, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{transaction.text}</span>\r\n//                 <FaMoneyBillWave className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\" onClick={handleAddTransaction}>+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n\r\nconst API_URL = 'http://localhost:5000/api'; // Backend API URL\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const contactId = params.get('id'); // Get the contact ID from URL\r\n  const name = params.get('name'); // Get the contact name\r\n  const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n  // State management\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [reminders, setReminders] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  // Fetch data for todos, reminders, and transactions\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const todosRes = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\r\n        setTodos(todosRes.data);\r\n\r\n        const remindersRes = await axios.get(`${API_URL}/contacts/${contactId}/reminders`);\r\n        setReminders(remindersRes.data);\r\n\r\n        const transactionsRes = await axios.get(`${API_URL}/contacts/${contactId}/finance`);\r\n        setTransactions(transactionsRes.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [contactId]);\r\n\r\n  // Add Todo\r\n  const addTodo = async (todoData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, todoData);\r\n      setTodos([...todos, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  // Edit Todo\r\n  const editTodo = async (todoId, updatedTodoData) => {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodoData);\r\n      const updatedTodos = todos.map(todo =>\r\n        todo._id === todoId ? { ...todo, ...updatedTodoData } : todo\r\n      );\r\n      setTodos(updatedTodos);\r\n    } catch (error) {\r\n      console.error('Error editing todo:', error);\r\n    }\r\n  };\r\n\r\n  // Delete Todo\r\n  const deleteTodo = async (todoId) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/contacts/${contactId}/todos/${todoId}`);\r\n      setTodos(todos.filter(todo => todo._id !== todoId));\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n\r\n  // Mark Todo as Complete\r\n  const toggleTodoComplete = async (todoId) => {\r\n    try {\r\n      const todoToUpdate = todos.find(todo => todo._id === todoId);\r\n      const updatedTodo = { ...todoToUpdate, completed: !todoToUpdate.completed };\r\n      await axios.put(`${API_URL}/contacts/${contactId}/todos/${todoId}`, updatedTodo);\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n    } catch (error) {\r\n      console.error('Error toggling todo complete:', error);\r\n    }\r\n  };\r\n\r\n  // Add Reminder\r\n  const addReminder = async (reminderData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/contacts/${contactId}/reminders`, reminderData);\r\n      setReminders([...reminders, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding reminder:', error);\r\n    }\r\n  };\r\n\r\n  // Add Finance Transaction\r\n  const addTransaction = async (transactionData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/contacts/${contactId}/finance`, transactionData);\r\n      setTransactions([...transactions, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding transaction:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\r\n      </header>\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <i className=\"bi bi-person-circle\"></i>\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {todos.map((todo) => (\r\n              <div key={todo._id} className=\"list-item\">\r\n                <span>{todo.text}</span>\r\n                <button onClick={() => toggleTodoComplete(todo._id)}>{todo.completed ? 'Unmark' : 'Complete'}</button>\r\n                <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n              </div>\r\n            ))}\r\n            <button className=\"add-button\" onClick={() => addTodo({ text: 'New Todo', completed: false })}>+ Add New Todo</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\" onClick={() => addReminder({ text: 'New Reminder' })}>+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\" onClick={() => addTransaction({ amount: 100, category: 'expense' })}>+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}