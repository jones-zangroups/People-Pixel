{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo, fetchReminders, addReminder, updateReminder, deleteReminder } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [sortOption, setSortOption] = useState(\"\");\n  const [filterPriority, setFilterPriority] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n\n  //reminder\n  const [reminders, setReminders] = useState([]);\n  const [newReminderText, setNewReminderText] = useState('');\n  const [newReminderDate, setNewReminderDate] = useState('');\n  const [newReminderTime, setNewReminderTime] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [isReminderFormVisible, setReminderFormVisible] = useState(false);\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    try {\n      const newTodo = {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      };\n      const response = await addTodo(contactId, newTodo);\n      setTodos([...todos, response]);\n      setNewTodoText('');\n      setNewTodoPriority('Medium');\n      setNewTodoDueDate('');\n      setTodoFormVisible(false);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n    }\n  };\n\n  //loads reminder if active\n  useEffect(() => {\n    if (activeTab === 'reminder') {\n      loadReminders();\n    }\n  }, [activeTab, contactId]);\n  const loadReminders = async () => {\n    try {\n      const reminderData = await fetchReminders(contactId);\n      setReminders(reminderData);\n    } catch (error) {\n      console.error('Failed to load reminders:', error);\n    }\n  };\n  const handleAddReminder = async e => {\n    e.preventDefault();\n    const newReminder = {\n      text: newReminderText,\n      date: newReminderDate,\n      time: newReminderTime,\n      isRecurring\n    };\n    try {\n      const addedReminder = await addReminder(contactId, newReminder);\n      setReminders([...reminders, addedReminder]);\n      setNewReminderText('');\n      setNewReminderDate('');\n      setNewReminderTime('');\n      setIsRecurring(false);\n    } catch (error) {\n      console.error('Failed to add reminder:', error);\n    }\n  };\n  const handleDeleteReminder = async reminderId => {\n    try {\n      await deleteReminder(reminderId);\n      setReminders(reminders.filter(reminder => reminder._id !== reminderId));\n    } catch (error) {\n      console.error('Failed to delete reminder:', error);\n    }\n  };\n  const notifyDueReminders = () => {\n    reminders.forEach(reminder => {\n      const reminderDate = new Date(`${reminder.date}T${reminder.time}`);\n      if (reminderDate - new Date() < 60000) {\n        // Check if reminder is within the next minute\n        if (Notification.permission === 'granted') {\n          new Notification('Reminder', {\n            body: reminder.text\n          });\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n    const interval = setInterval(notifyDueReminders, 60000); // Check every minute\n    return () => clearInterval(interval);\n  }, [reminders]);\n\n  //end for crud for reminder\n\n  const filteredAndSortedTodos = todos.filter(todo => {\n    if (filterPriority && todo.priority !== filterPriority) return false;\n    if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\n    return true;\n  }).sort((a, b) => {\n    if (sortOption === \"date\") {\n      return new Date(a.dueDate) - new Date(b.dueDate);\n    } else if (sortOption === \"priority\") {\n      const priorities = {\n        High: 1,\n        Medium: 2,\n        Low: 3\n      };\n      return priorities[a.priority] - priorities[b.priority];\n    } else if (sortOption === \"status\") {\n      return a.completed === b.completed ? 0 : a.completed ? -1 : 1;\n    }\n    return 0;\n  });\n  const handleUpdateTodo = async todoId => {\n    try {\n      const updatedTodo = await updateTodo(todoId, {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      });\n      setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n      setSelectedTodo(null); // Close the update form\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const handleDeleteTodo = async todoId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\n    if (confirmDelete) {\n      try {\n        await deleteTodo(todoId);\n        setTodos(todos.filter(todo => todo._id !== todoId));\n      } catch (err) {\n        setError('Failed to delete todo: ' + err.message);\n      }\n    }\n  };\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const showUpdateForm = todo => {\n    setSelectedTodo(todo);\n    setNewTodoText(todo.text);\n    setNewTodoPriority(todo.priority);\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\n  };\n  const resetFilters = () => {\n    setFilterPriority('');\n    setFilterStatus('');\n    setSortOption('');\n  };\n\n  //   return (\n  //     <div className=\"individual-contact\">\n  //       <header className=\"header\">\n  //         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\n  //       </header>\n\n  //       <div className=\"contact-summary\">\n  //         <div className=\"contact-photo\">\n  //           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n  //         </div>\n  //         <h2>{name || \"Contact\"}</h2>\n  //       </div>\n\n  //       <div className=\"tab-bar\">\n  //         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\n  //           <FaCheckSquare className=\"icon\" /> Todo\n  //         </button>\n  //         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\n  //           <FaBell className=\"icon\" /> Reminder\n  //         </button>\n  //         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\n  //           <FaMoneyBillWave className=\"icon\" /> Finance\n  //         </button>\n  //       </div>\n\n  //       <div className=\"tab-content\">\n  //         <div className=\"sorting-filtering\">\n  //           <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\n  //             <option value=\"\">Sort by</option>\n  //             <option value=\"date\">Due Date</option>\n  //             <option value=\"priority\">Priority</option>\n  //             <option value=\"status\">Status</option>\n  //           </select>\n\n  //           <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\n  //             <option value=\"\">Filter by Priority</option>\n  //             <option value=\"High\">High</option>\n  //             <option value=\"Medium\">Medium</option>\n  //             <option value=\"Low\">Low</option>\n  //           </select>\n\n  //           <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\n  //             <option value=\"\">Filter by Status</option>\n  //             <option value=\"completed\">Completed</option>\n  //             <option value=\"notCompleted\">Not Completed</option>\n  //           </select>\n\n  //           <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\n  //         </div>\n\n  //         {activeTab === 'todo' && (\n  //           <div className=\"todo-content\">\n  //             {error && <div className=\"error-message\">{error}</div>}\n\n  //             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\n  //               <FaPlusCircle className=\"icon\" /> Add New Todo\n  //             </button>\n\n  //             {isTodoFormVisible && (\n  //               <div className=\"todo-form-overlay\">\n  //                 <form onSubmit={handleAddTodo} className=\"todo-form\">\n  //                   <input\n  //                     type=\"text\"\n  //                     value={newTodoText}\n  //                     onChange={(e) => setNewTodoText(e.target.value)}\n  //                     placeholder=\"New todo text\"\n  //                     required\n  //                   />\n  //                   <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\n  //                     <option value=\"High\"> High </option>\n  //                     <option value=\"Medium\">Medium</option>\n  //                     <option value=\"Low\"> Low  </option>\n  //                   </select>\n  //                   <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\n  //                   <button type=\"submit\">Save Todo</button>\n  //                   <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\n  //                 </form>\n  //               </div>\n  //             )}\n\n  //             <div className=\"todo-list\">\n  //               {loading ? (\n  //                 <p>Loading todos...</p>\n  //               ) : filteredAndSortedTodos.map(todo => (\n  //                 <div key={todo._id} className=\"todo-item\">\n  //                   <span>{todo.text}</span>\n  //                   <span>{todo.priority}</span>\n  //                   <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\n  //                   <button onClick={() => showUpdateForm(todo)}>Update</button>\n  //                   <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n  //                   <input\n  //                     type=\"checkbox\"\n  //                     checked={todo.completed}\n  //                     onChange={() => handleToggleTodo(todo._id, todo.completed)}\n  //                   />\n  //                 </div>\n  //               ))}\n  //             </div>\n  //             {selectedTodo && (\n  //               <div className=\"centered-container\">\n  //               <form onSubmit={(e) => {\n  //                 e.preventDefault();\n  //                 handleUpdateTodo(selectedTodo._id);\n  //               }} className=\"update-form\">\n  //                 <input\n  //                   type=\"text\"\n  //                   value={newTodoText}\n  //                   onChange={(e) => setNewTodoText(e.target.value)}\n  //                   required\n  //                 />\n  //                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\n  //                   <option value=\"High\"> High </option>\n  //                   <option value=\"Medium\">Medium</option>\n  //                   <option value=\"Low\"> Low  </option>\n  //                 </select>\n  //                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\n  //                 <button type=\"submit\">Update Todo</button>\n  //                 <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\n  //               </form>\n  //               </div>\n  //             )}\n  //           </div>\n  //         )}\n\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, this), \" Contacts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sorting-filtering\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortOption,\n            onChange: e => setSortOption(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Sort by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date\",\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterPriority,\n            onChange: e => setFilterPriority(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Filter by Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterStatus,\n            onChange: e => setFilterStatus(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Filter by Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"notCompleted\",\n              children: \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetFilters,\n            className: \"cancel-filters-button\",\n            children: \"Cancel Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-todo-button\",\n          onClick: () => setTodoFormVisible(true),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), \" Add New Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), isTodoFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddTodo,\n            className: \"todo-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTodoText,\n              onChange: e => setNewTodoText(e.target.value),\n              placeholder: \"New todo text\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTodoPriority,\n              onChange: e => setNewTodoPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTodoDueDate,\n              onChange: e => setNewTodoDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setTodoFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading todos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this) : filteredAndSortedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(todo.dueDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => showUpdateForm(todo),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTodo(todo._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id, todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), selectedTodo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleUpdateTodo(selectedTodo._id);\n            },\n            className: \"update-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTodoText,\n              onChange: e => setNewTodoText(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTodoPriority,\n              onChange: e => setNewTodoPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTodoDueDate,\n              onChange: e => setNewTodoDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setSelectedTodo(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-reminder-button\",\n          onClick: () => setReminderFormVisible(true),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), \" Add New Reminder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reminders Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onClickDay: value => handleDayClick(value),\n            tileContent: ({\n              date,\n              view\n            }) => {\n              const remindersForDate = reminders.filter(reminder => new Date(reminder.date).toDateString() === date.toDateString());\n              return remindersForDate.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [remindersForDate.length, \" reminders\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 48\n              }, this) : null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 19\n        }, this), isReminderFormVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddReminder,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newReminderText,\n            onChange: e => setNewReminderText(e.target.value),\n            placeholder: \"Reminder text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newReminderDate,\n            onChange: e => setNewReminderDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: newReminderTime,\n            onChange: e => setNewReminderTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Recurring\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isRecurring,\n              onChange: () => setIsRecurring(!isRecurring)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-list\",\n          children: reminders.map(reminder => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reminder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: reminder.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [reminder.date, \" \", reminder.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteReminder(reminder._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)]\n          }, reminder._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 3\n  }, this);\n};\n_s(IndividualContact, \"XVeJidrtVQy8K64PrmN5YIHXpB0=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","updateTodo","deleteTodo","fetchReminders","addReminder","updateReminder","deleteReminder","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","FaChevronLeft","Calendar","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","newTodoText","setNewTodoText","newTodoPriority","setNewTodoPriority","newTodoDueDate","setNewTodoDueDate","isTodoFormVisible","setTodoFormVisible","selectedTodo","setSelectedTodo","sortOption","setSortOption","filterPriority","setFilterPriority","filterStatus","setFilterStatus","reminders","setReminders","newReminderText","setNewReminderText","newReminderDate","setNewReminderDate","newReminderTime","setNewReminderTime","isRecurring","setIsRecurring","isReminderFormVisible","setReminderFormVisible","loadTodos","todoData","err","message","handleAddTodo","e","preventDefault","newTodo","text","priority","dueDate","response","loadReminders","reminderData","console","handleAddReminder","newReminder","date","time","addedReminder","handleDeleteReminder","reminderId","filter","reminder","_id","notifyDueReminders","forEach","reminderDate","Date","Notification","permission","body","requestPermission","interval","setInterval","clearInterval","filteredAndSortedTodos","todo","completed","sort","a","b","priorities","High","Medium","Low","handleUpdateTodo","todoId","updatedTodo","map","handleDeleteTodo","confirmDelete","window","confirm","handleToggleTodo","prevTodos","showUpdateForm","split","resetFilters","className","children","onClick","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","value","onChange","target","onSubmit","type","placeholder","required","toLocaleDateString","checked","onClickDay","handleDayClick","tileContent","view","remindersForDate","toDateString","length","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["// src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo, fetchReminders, addReminder, updateReminder, deleteReminder } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\nimport Calendar from 'react-calendar';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n  const [filterPriority, setFilterPriority] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n  //reminder\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminderText, setNewReminderText] = useState('');\r\n  const [newReminderDate, setNewReminderDate] = useState('');\r\n  const [newReminderTime, setNewReminderTime] = useState('');\r\n  const [isRecurring, setIsRecurring] = useState(false);\r\n  const [isReminderFormVisible, setReminderFormVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n\r\n  const handleAddTodo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTodo = {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      };\r\n      const response = await addTodo(contactId, newTodo);\r\n      setTodos([...todos, response]);\r\n      setNewTodoText('');\r\n      setNewTodoPriority('Medium');\r\n      setNewTodoDueDate('');\r\n      setTodoFormVisible(false);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n    //loads reminder if active\r\n    useEffect(() => {\r\n      if (activeTab === 'reminder') {\r\n        loadReminders();\r\n      }\r\n    }, [activeTab, contactId]);\r\n  \r\n    const loadReminders = async () => {\r\n      try {\r\n        const reminderData = await fetchReminders(contactId);\r\n        setReminders(reminderData);\r\n      } catch (error) {\r\n        console.error('Failed to load reminders:', error);\r\n      }\r\n    };\r\n  \r\n    const handleAddReminder = async (e) => {\r\n      e.preventDefault();\r\n      const newReminder = {\r\n        text: newReminderText,\r\n        date: newReminderDate,\r\n        time: newReminderTime,\r\n        isRecurring,\r\n      };\r\n      try {\r\n        const addedReminder = await addReminder(contactId, newReminder);\r\n        setReminders([...reminders, addedReminder]);\r\n        setNewReminderText('');\r\n        setNewReminderDate('');\r\n        setNewReminderTime('');\r\n        setIsRecurring(false);\r\n      } catch (error) {\r\n        console.error('Failed to add reminder:', error);\r\n      }\r\n    };\r\n  \r\n    const handleDeleteReminder = async (reminderId) => {\r\n      try {\r\n        await deleteReminder(reminderId);\r\n        setReminders(reminders.filter(reminder => reminder._id !== reminderId));\r\n      } catch (error) {\r\n        console.error('Failed to delete reminder:', error);\r\n      }\r\n    };\r\n  \r\n    const notifyDueReminders = () => {\r\n      reminders.forEach(reminder => {\r\n        const reminderDate = new Date(`${reminder.date}T${reminder.time}`);\r\n        if (reminderDate - new Date() < 60000) { // Check if reminder is within the next minute\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('Reminder', { body: reminder.text });\r\n          }\r\n        }\r\n      });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (Notification.permission !== 'granted') {\r\n        Notification.requestPermission();\r\n      }\r\n      const interval = setInterval(notifyDueReminders, 60000); // Check every minute\r\n      return () => clearInterval(interval);\r\n    }, [reminders]);\r\n\r\n    //end for crud for reminder\r\n\r\n  const filteredAndSortedTodos = todos\r\n    .filter(todo => {\r\n      if (filterPriority && todo.priority !== filterPriority) return false;\r\n      if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortOption === \"date\") {\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      } else if (sortOption === \"priority\") {\r\n        const priorities = { High: 1, Medium: 2, Low: 3 };\r\n        return priorities[a.priority] - priorities[b.priority];\r\n      } else if (sortOption === \"status\") {\r\n        return (a.completed === b.completed) ? 0 : a.completed ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  const handleUpdateTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = await updateTodo(todoId, {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      });\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n      setSelectedTodo(null); // Close the update form\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteTodo = async (todoId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteTodo(todoId);\r\n        setTodos(todos.filter(todo => todo._id !== todoId));\r\n      } catch (err) {\r\n        setError('Failed to delete todo: ' + err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const showUpdateForm = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setNewTodoText(todo.text);\r\n    setNewTodoPriority(todo.priority);\r\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilterPriority('');\r\n    setFilterStatus('');\r\n    setSortOption('');\r\n  };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         <div className=\"sorting-filtering\">\r\n//           <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n//             <option value=\"\">Sort by</option>\r\n//             <option value=\"date\">Due Date</option>\r\n//             <option value=\"priority\">Priority</option>\r\n//             <option value=\"status\">Status</option>\r\n//           </select>\r\n\r\n//           <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n//             <option value=\"\">Filter by Priority</option>\r\n//             <option value=\"High\">High</option>\r\n//             <option value=\"Medium\">Medium</option>\r\n//             <option value=\"Low\">Low</option>\r\n//           </select>\r\n\r\n//           <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n//             <option value=\"\">Filter by Status</option>\r\n//             <option value=\"completed\">Completed</option>\r\n//             <option value=\"notCompleted\">Not Completed</option>\r\n//           </select>\r\n\r\n//           <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\r\n//         </div>\r\n\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n//               <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//             </button>\r\n\r\n//             {isTodoFormVisible && (\r\n//               <div className=\"todo-form-overlay\">\r\n//                 <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={newTodoText}\r\n//                     onChange={(e) => setNewTodoText(e.target.value)}\r\n//                     placeholder=\"New todo text\"\r\n//                     required\r\n//                   />\r\n//                   <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n//                     <option value=\"High\"> High </option>\r\n//                     <option value=\"Medium\">Medium</option>\r\n//                     <option value=\"Low\"> Low  </option>\r\n//                   </select>\r\n//                   <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n//                   <button type=\"submit\">Save Todo</button>\r\n//                   <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n//                 </form>\r\n//               </div>\r\n//             )}\r\n\r\n//             <div className=\"todo-list\">\r\n//               {loading ? (\r\n//                 <p>Loading todos...</p>\r\n//               ) : filteredAndSortedTodos.map(todo => (\r\n//                 <div key={todo._id} className=\"todo-item\">\r\n//                   <span>{todo.text}</span>\r\n//                   <span>{todo.priority}</span>\r\n//                   <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n//                   <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n//                   <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     checked={todo.completed}\r\n//                     onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n//                   />\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//             {selectedTodo && (\r\n//               <div className=\"centered-container\">\r\n//               <form onSubmit={(e) => {\r\n//                 e.preventDefault();\r\n//                 handleUpdateTodo(selectedTodo._id);\r\n//               }} className=\"update-form\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={newTodoText}\r\n//                   onChange={(e) => setNewTodoText(e.target.value)}\r\n//                   required\r\n//                 />\r\n//                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n//                   <option value=\"High\"> High </option>\r\n//                   <option value=\"Medium\">Medium</option>\r\n//                   <option value=\"Low\"> Low  </option>\r\n//                 </select>\r\n//                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n//                 <button type=\"submit\">Update Todo</button>\r\n//                 <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n//               </form>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n        \r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nreturn (\r\n  <div className=\"individual-contact\">\r\n    <header className=\"header\">\r\n      <button className=\"back-button\" onClick={() => window.history.back()}>\r\n        <FaChevronLeft className=\"icon\" /> Contacts\r\n      </button>\r\n    </header>\r\n\r\n    <div className=\"contact-summary\">\r\n      <div className=\"contact-photo\">\r\n        <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n      </div>\r\n      <h2>{name || \"Contact\"}</h2>\r\n    </div>\r\n\r\n    <div className=\"tab-bar\">\r\n      <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n        <FaCheckSquare className=\"icon\" /> Todo\r\n      </button>\r\n      <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n        <FaBell className=\"icon\" /> Reminder\r\n      </button>\r\n      <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n        <FaMoneyBillWave className=\"icon\" /> Finance\r\n      </button>\r\n    </div>\r\n\r\n    <div className=\"tab-content\">\r\n      {activeTab === 'todo' && (\r\n        <div className=\"todo-content\">\r\n          <div className=\"sorting-filtering\">\r\n            <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n              <option value=\"\">Sort by</option>\r\n              <option value=\"date\">Due Date</option>\r\n              <option value=\"priority\">Priority</option>\r\n              <option value=\"status\">Status</option>\r\n            </select>\r\n\r\n            <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n              <option value=\"\">Filter by Priority</option>\r\n              <option value=\"High\">High</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"Low\">Low</option>\r\n            </select>\r\n\r\n            <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n              <option value=\"\">Filter by Status</option>\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"notCompleted\">Not Completed</option>\r\n            </select>\r\n\r\n            <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\r\n          </div>\r\n\r\n          <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n            <FaPlusCircle className=\"icon\" /> Add New Todo\r\n          </button>\r\n\r\n          {isTodoFormVisible && (\r\n            <div className=\"todo-form-overlay\">\r\n              <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  placeholder=\"New todo text\"\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\">Low</option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Save Todo</button>\r\n                <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"todo-list\">\r\n            {loading ? (\r\n              <p>Loading todos...</p>\r\n            ) : filteredAndSortedTodos.map(todo => (\r\n              <div key={todo._id} className=\"todo-item\">\r\n                <span>{todo.text}</span>\r\n                <span>{todo.priority}</span>\r\n                <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n                <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n                <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {selectedTodo && (\r\n            <div className=\"centered-container\">\r\n              <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleUpdateTodo(selectedTodo._id);\r\n              }} className=\"update-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\">Low</option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Update Todo</button>\r\n                <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'reminder' && (\r\n        <div className=\"reminder-content\">\r\n          <button className=\"add-reminder-button\" onClick={() => setReminderFormVisible(true)}>\r\n            <FaPlusCircle className=\"icon\" /> Add New Reminder\r\n          </button>\r\n\r\n                  <div className=\"calendar-view\">\r\n          <h3>Reminders Calendar</h3>\r\n          <Calendar\r\n            onClickDay={(value) => handleDayClick(value)}\r\n            tileContent={({ date, view }) => {\r\n              const remindersForDate = reminders.filter(reminder => \r\n                new Date(reminder.date).toDateString() === date.toDateString()\r\n              );\r\n              return remindersForDate.length ? <span>{remindersForDate.length} reminders</span> : null;\r\n            }}\r\n          />\r\n        </div>\r\n\r\n          {isReminderFormVisible && (\r\n            <form onSubmit={handleAddReminder}>\r\n              <input type=\"text\" value={newReminderText} onChange={(e) => setNewReminderText(e.target.value)} placeholder=\"Reminder text\" required />\r\n              <input type=\"date\" value={newReminderDate} onChange={(e) => setNewReminderDate(e.target.value)} required />\r\n              <input type=\"time\" value={newReminderTime} onChange={(e) => setNewReminderTime(e.target.value)} required />\r\n              <label>\r\n                Recurring\r\n                <input type=\"checkbox\" checked={isRecurring} onChange={() => setIsRecurring(!isRecurring)} />\r\n              </label>\r\n              <button type=\"submit\">Save Reminder</button>\r\n            </form>\r\n          )}\r\n\r\n          <div className=\"reminder-list\">\r\n            {reminders.map(reminder => (\r\n              <div key={reminder._id} className=\"reminder-item\">\r\n                <span>{reminder.text}</span>\r\n                <span>{reminder.date} {reminder.time}</span>\r\n                <button onClick={() => handleDeleteReminder(reminder._id)}>Delete</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </div>\r\n)};\r\n\r\n\r\nexport default IndividualContact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}