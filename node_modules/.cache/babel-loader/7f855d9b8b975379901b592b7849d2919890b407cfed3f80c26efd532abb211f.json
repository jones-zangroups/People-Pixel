{"ast":null,"code":"// //src/api.js\n// const API_URL = 'http://localhost:5000/api';\n\n// export const fetchContacts = async (category) => {\n//   try {\n//     const response = await fetch(`${API_URL}/contacts/${category}`);\n//     if (!response.ok) {\n//       throw new Error('Failed to fetch contacts');\n//     }\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error:', error);\n//     throw error;\n//   }\n// };\n\n// export const addContact = async (contactData) => {\n//   try {\n//     const response = await fetch(`${API_URL}/contacts`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(contactData),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to add contact');\n//     }\n\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error:', error);\n//     throw error;\n//   }\n// };\n\n// // src/api.js\n// import axios from 'axios';\n\n// export const getContact = async (id) => {\n//   const response = await axios.get(`/api/contacts/${id}`);\n//   return response.data;\n// };\n\n// export const updateContact = async (id, contactData) => {\n//   await axios.put(`/api/contacts/${id}`, contactData);\n// };\n\n// export const deleteContact = async (id) => {\n//   await axios.delete(`/api/contacts/${id}`);\n// };\n\n// src/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Using fetch for some operations\nexport const fetchContacts = async category => {\n  try {\n    const response = await fetch(`${API_URL}/contacts?category=${category}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch contacts');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n// Using axios for other operations\nexport const addContact = async contactData => {\n  try {\n    const response = await axios.post(`${API_URL}/contacts`, contactData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding contact:', error);\n    throw error;\n  }\n};\nexport const getContact = async id => {\n  const response = await axios.get(`/api/contacts/${id}`);\n  return response.data;\n};\nexport const updateContact = async (id, contactData) => {\n  await axios.put(`/api/contacts/${id}`, contactData);\n};\nexport const deleteContact = async id => {\n  await axios.delete(`/api/contacts/${id}`);\n};","map":{"version":3,"names":["axios","API_URL","fetchContacts","category","response","fetch","ok","Error","json","error","console","addContact","contactData","post","data","getContact","id","get","updateContact","put","deleteContact","delete"],"sources":["D:/PeoplePixel1/src/api.js"],"sourcesContent":["// //src/api.js\r\n// const API_URL = 'http://localhost:5000/api';\r\n\r\n// export const fetchContacts = async (category) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/contacts/${category}`);\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to fetch contacts');\r\n//     }\r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const addContact = async (contactData) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/contacts`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(contactData),\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to add contact');\r\n//     }\r\n    \r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n// // src/api.js\r\n// import axios from 'axios';\r\n\r\n// export const getContact = async (id) => {\r\n//   const response = await axios.get(`/api/contacts/${id}`);\r\n//   return response.data;\r\n// };\r\n\r\n// export const updateContact = async (id, contactData) => {\r\n//   await axios.put(`/api/contacts/${id}`, contactData);\r\n// };\r\n\r\n// export const deleteContact = async (id) => {\r\n//   await axios.delete(`/api/contacts/${id}`);\r\n// };\r\n\r\n\r\n\r\n\r\n// src/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Using fetch for some operations\r\nexport const fetchContacts = async (category) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts?category=${category}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch contacts');\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Using axios for other operations\r\nexport const addContact = async (contactData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/contacts`, contactData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getContact = async (id) => {\r\n  const response = await axios.get(`/api/contacts/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateContact = async (id, contactData) => {\r\n  await axios.put(`/api/contacts/${id}`, contactData);\r\n};\r\n\r\nexport const deleteContact = async (id) => {\r\n  await axios.delete(`/api/contacts/${id}`);\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAKA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,sBAAsBE,QAAQ,EAAE,CAAC;IACxE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC/C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,WAAW,EAAEW,WAAW,CAAC;IACrE,OAAOR,QAAQ,CAACU,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACiB,GAAG,CAAC,iBAAiBD,EAAE,EAAE,CAAC;EACvD,OAAOZ,QAAQ,CAACU,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAOF,EAAE,EAAEJ,WAAW,KAAK;EACtD,MAAMZ,KAAK,CAACmB,GAAG,CAAC,iBAAiBH,EAAE,EAAE,EAAEJ,WAAW,CAAC;AACrD,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOJ,EAAE,IAAK;EACzC,MAAMhB,KAAK,CAACqB,MAAM,CAAC,iBAAiBL,EAAE,EAAE,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}