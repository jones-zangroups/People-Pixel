{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Fetch contacts by category\nexport const fetchContacts = async category => {\n  try {\n    const response = await axios.get(`${API_URL}/contacts/${category}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contacts:', error);\n    throw error;\n  }\n};\n\n// Add a new contact\nexport const addContact = async contactData => {\n  try {\n    const response = await axios.post(`${API_URL}/contacts`, contactData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding contact:', error);\n    throw error;\n  }\n};\n\n// Get individual contact by ID\nexport const getContactById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/contacts/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contact by ID:', error);\n    throw error;\n  }\n};\n\n// Update contact by ID\nexport const updateContact = async (id, contactData) => {\n  try {\n    const response = await axios.put(`${API_URL}/contacts/${id}`, contactData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating contact:', error);\n    throw error;\n  }\n};\n\n// Delete contact by ID\nexport const deleteContact = async id => {\n  try {\n    await axios.delete(`${API_URL}/contacts/${id}`);\n  } catch (error) {\n    console.error('Error deleting contact:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchContacts","category","response","get","data","error","console","addContact","contactData","post","headers","getContactById","id","updateContact","put","deleteContact","delete"],"sources":["D:/PeoplePixel1/src/api.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n// src/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Fetch contacts by category\r\nexport const fetchContacts = async (category) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/contacts/${category}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching contacts:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Add a new contact\r\nexport const addContact = async (contactData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/contacts`, contactData, {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get individual contact by ID\r\nexport const getContactById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/contacts/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching contact by ID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update contact by ID\r\nexport const updateContact = async (id, contactData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/contacts/${id}`, contactData, {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete contact by ID\r\nexport const deleteContact = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/contacts/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting contact:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAKA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,aAAaE,QAAQ,EAAE,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC/C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,WAAW,EAAES,WAAW,EAAE;MACpEE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,aAAaa,EAAE,EAAE,CAAC;IAC7D,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOD,EAAE,EAAEJ,WAAW,KAAK;EACtD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,aAAaa,EAAE,EAAE,EAAEJ,WAAW,EAAE;MACzEE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,aAAa,GAAG,MAAOH,EAAE,IAAK;EACzC,IAAI;IACF,MAAMd,KAAK,CAACkB,MAAM,CAAC,GAAGjB,OAAO,aAAaa,EAAE,EAAE,CAAC;EACjD,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}