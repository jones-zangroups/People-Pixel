{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\n\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\n\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         const contactId = params.get('contactId');\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/todos`);\n//         setTodos(response.data);\n//       } catch (error) {\n//         console.error('Error fetching todos:', error);\n//       }\n//     };\n//     fetchTodos();\n//   }, [params.get('contactId')]);\n\n//   const addTodo = async (newTodoText) => {\n//     try {\n//       const contactId = params.get('contactId');\n//       const newTodo = { text: newTodoText, completed: false, contactId };\n//       const response = await axios.post(`http://localhost:5000/api/contacts/${contactId}/todos`, newTodo);\n//       setTodos([...todos, response.data]);\n//     } catch (error) {\n//       console.error('Error adding todo in contact:', error);\n//     }\n//   };\n\n//   // Handle toggling todo completion\n//   const toggleTodo = async (todoId) => {\n//     try {\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\n//       updatedTodo.completed = !updatedTodo.completed;\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\n//     } catch (error) {\n//       console.error('Error toggling todo completion:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             <div className=\"todo-header\">\n//               <button\n//                 className=\"add-button\"\n//                 onClick={() => {\n//                   const newTodoText = prompt('Enter new todo:');\n//                   if (newTodoText) addTodo(newTodoText);\n//                 }}\n//               >\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\n//               </button>\n//             </div>\n//             <div className=\"todo-list\">\n//               {todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => toggleTodo(todo._id)}\n//                     />\n//                     <span>{todo.text}</span>\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n//src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  debugger;\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  // const contactId = params.get('contactId');\n  const contactId = params.get('contactId');\n  const category = params.get('category');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  // const category = params.get('category');\n  const [contacts, setContacts] = useState([]);\n\n  //Fetch todos when component mounts or contactId changes\n  // useEffect(() => {\n  //   debugger;\n  //   const loadTodos = async () => {\n  //     if (!contactId) {\n  //       setError('No contact ID provided');\n  //       setLoading(false);\n  //       return;\n  //     }\n\n  //     try {\n  //       setLoading(true);\n  //       const todoData = await fetchTodos(contactId);\n  //       setTodos(todoData);\n  //       setError(null);\n  //     } catch (err) {\n  //       setError('Failed to load todos: ' + err.message);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   loadTodos();\n\n  // }, [contactId]);\n\n  useEffect(() => {\n    debugger;\n    const fetchContacts = async () => {\n      debugger;\n      try {\n        const response = await axios.get(`http://localhost:5000/api/contacts?category=${category}`);\n        setContacts(response.data);\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [category]);\n\n  // Handle adding a new todo\n  const handleAddTodo = async todoText => {\n    debugger;\n    // if (!todoText.trim())\n    // {\n    //   alert(todoText)\n    //    return;\n    // }\n\n    try {\n      // const newTodo = {\n      //   text: todoText,\n      //   completed: false,\n      //   priority: 'Medium'\n      // };\n\n      const newTodo = {\n        name: \"todo\"\n      };\n      console.log('Adding new todo:', newTodo); // Log the todo data before API call\n      //const addedTodo = await addTodo(contactId, newTodo);\n\n      debugger;\n      // const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n      //const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n      const response = await axios.post(`http://localhost:5000/api/contacts/${contacts}/todos`, {\n        name: \"test\"\n      });\n      debugger;\n      setTodos([...todos, response.data]); // Add new category to state\n      //setNewCategory('');\n      //setShowModal(false);\n      //setContacts([...contacts, response.data]);\n      //setIsModalOpen(false);\n\n      //console.log('Added todo:', addedTodo);  // Log the response from API\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n      console.error('Error in handleAddTodo:', err); // Log the error\n    }\n  };\n\n  // Handle toggling todo completion\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"todo\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTodo,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 1\n      }, this)\n\n      // <div className=\"todo-content\">\n      //   {error && <div className=\"error-message\">{error}</div>}\n\n      //   <div className=\"todo-header\">\n      //     <text\n      //       className=\"add-button\" id = 'txttodo'\n      //       onClick={() => {\n      //         const newTodoText = prompt('Enter new todo:');\n      //         if (newTodoText) handleAddTodo(newTodoText);\n      //       }}\n      //     >\n      //       <FaPlusCircle className=\"icon\" /> Add New Todo\n      //     </text>\n      //   </div>\n\n      //   <div className=\"todo-list\">\n      //     {loading ? (\n      //       <p>Loading todos...</p>\n      //     ) : todos.length === 0 ? (\n      //       <p>No todos found</p>\n      //     ) : (\n      //       todos.map(todo => (\n      //         <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n      //           <input\n      //             type=\"checkbox\"\n      //             checked={todo.completed}\n      //             onChange={() => handleToggleTodo(todo._id, todo.completed)}\n      //           />\n      //           <span>{todo.text}</span>\n      //         </div>\n      //       ))\n      //     )}\n      //   </div>\n      // </div>\n      , activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"yYDRJO0vuKGXQbNGPHWtQ1L7k14=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["axios","React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","category","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","contacts","setContacts","fetchContacts","response","data","console","handleAddTodo","todoText","newTodo","log","post","prevTodos","err","message","handleToggleTodo","todoId","completed","updatedTodo","map","todo","_id","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","required","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["// //src/IndividualContacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  \r\n\r\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\r\n\r\n//   useEffect(() => {\r\n//     const fetchTodos = async () => {\r\n//       try {\r\n//         const contactId = params.get('contactId');\r\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/todos`);\r\n//         setTodos(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching todos:', error);\r\n//       }\r\n//     };\r\n//     fetchTodos();\r\n//   }, [params.get('contactId')]);\r\n  \r\n//   const addTodo = async (newTodoText) => {\r\n//     try {\r\n//       const contactId = params.get('contactId');\r\n//       const newTodo = { text: newTodoText, completed: false, contactId };\r\n//       const response = await axios.post(`http://localhost:5000/api/contacts/${contactId}/todos`, newTodo);\r\n//       setTodos([...todos, response.data]);\r\n//     } catch (error) {\r\n//       console.error('Error adding todo in contact:', error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // Handle toggling todo completion\r\n//   const toggleTodo = async (todoId) => {\r\n//     try {\r\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\r\n//       updatedTodo.completed = !updatedTodo.completed;\r\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error toggling todo completion:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             <div className=\"todo-header\">\r\n//               <button\r\n//                 className=\"add-button\"\r\n//                 onClick={() => {\r\n//                   const newTodoText = prompt('Enter new todo:');\r\n//                   if (newTodoText) addTodo(newTodoText);\r\n//                 }}\r\n//               >\r\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"todo-list\">\r\n//               {todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => toggleTodo(todo._id)}\r\n//                     />\r\n//                     <span>{todo.text}</span>\r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  debugger;\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  // const contactId = params.get('contactId');\r\n  const contactId = params.get('contactId');\r\n  const category = params.get('category');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  // const category = params.get('category');\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  //Fetch todos when component mounts or contactId changes\r\n  // useEffect(() => {\r\n  //   debugger;\r\n  //   const loadTodos = async () => {\r\n  //     if (!contactId) {\r\n  //       setError('No contact ID provided');\r\n  //       setLoading(false);\r\n  //       return;\r\n  //     }\r\n\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       const todoData = await fetchTodos(contactId);\r\n  //       setTodos(todoData);\r\n  //       setError(null);\r\n  //     } catch (err) {\r\n  //       setError('Failed to load todos: ' + err.message);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   loadTodos();\r\n\r\n  // }, [contactId]);\r\n\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    const fetchContacts = async () => {\r\n      debugger;\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/contacts?category=${category}`);\r\n        setContacts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching contacts:', error);\r\n      }\r\n    };\r\n    fetchContacts();\r\n  }, [category]);\r\n\r\n  // Handle adding a new todo\r\n  const handleAddTodo = async (todoText) => {\r\n    debugger;\r\n    // if (!todoText.trim())\r\n    // {\r\n    //   alert(todoText)\r\n    //    return;\r\n    // }\r\n  \r\n    try {\r\n      // const newTodo = {\r\n      //   text: todoText,\r\n      //   completed: false,\r\n      //   priority: 'Medium'\r\n      // };\r\n  \r\n      const newTodo = {\r\n        name: \"todo\",\r\n      };\r\n      console.log('Adding new todo:', newTodo);  // Log the todo data before API call\r\n      //const addedTodo = await addTodo(contactId, newTodo);\r\n\r\n      debugger;\r\n     // const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n      //const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n      const response = await axios.post(`http://localhost:5000/api/contacts/${contacts}/todos`, { name: \"test\" });\r\n      debugger;\r\n      setTodos([...todos, response.data]); // Add new category to state\r\n      //setNewCategory('');\r\n      //setShowModal(false);\r\n      //setContacts([...contacts, response.data]);\r\n      //setIsModalOpen(false);\r\n\r\n      //console.log('Added todo:', addedTodo);  // Log the response from API\r\n      setTodos(prevTodos => [...prevTodos, newTodo]);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n      console.error('Error in handleAddTodo:', err);  // Log the error\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle toggling todo completion\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n\r\n<div className=\"modal\">\r\n<div className=\"modal-content\">\r\n  <h2>Add New Contact</h2>\r\n  <form>\r\n    <label>Name:</label>\r\n    <input type=\"text\" name=\"todo\"  required />\r\n  </form>\r\n  <button onClick={handleAddTodo}>Save</button>\r\n</div>\r\n</div>\r\n\r\n          // <div className=\"todo-content\">\r\n          //   {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n          //   <div className=\"todo-header\">\r\n          //     <text\r\n          //       className=\"add-button\" id = 'txttodo'\r\n          //       onClick={() => {\r\n          //         const newTodoText = prompt('Enter new todo:');\r\n          //         if (newTodoText) handleAddTodo(newTodoText);\r\n          //       }}\r\n          //     >\r\n          //       <FaPlusCircle className=\"icon\" /> Add New Todo\r\n          //     </text>\r\n          //   </div>\r\n\r\n          //   <div className=\"todo-list\">\r\n          //     {loading ? (\r\n          //       <p>Loading todos...</p>\r\n          //     ) : todos.length === 0 ? (\r\n          //       <p>No todos found</p>\r\n          //     ) : (\r\n          //       todos.map(todo => (\r\n          //         <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n          //           <input\r\n          //             type=\"checkbox\"\r\n          //             checked={todo.completed}\r\n          //             onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n          //           />\r\n          //           <span>{todo.text}</span>\r\n          //         </div>\r\n          //       ))\r\n          //     )}\r\n          //   </div>\r\n          // </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;"],"mappings":";;AAAA;AACA;AACA;AACC,OAAOA,KAAK,MAAM,OAAO;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACA,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC;EACnC;EACA,MAAME,SAAS,GAAGN,MAAM,CAACI,GAAG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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}