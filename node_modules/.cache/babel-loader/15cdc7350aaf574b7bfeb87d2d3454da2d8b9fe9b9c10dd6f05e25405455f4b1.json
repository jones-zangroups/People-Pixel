{"ast":null,"code":"// //src/api.js\n\n// const API_URL = 'http://localhost:5000/api';\n\n// export const fetchContacts = async (category) => {\n//   try {\n//     const response = await fetch(`${API_URL}/contacts/${category}`);\n//     if (!response.ok) {\n//       throw new Error('Failed to fetch contacts');\n//     }\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error:', error);\n//     throw error;\n//   }\n// };\n\n// export const addContact = async (contactData) => {\n//   try {\n//     const response = await fetch(`${API_URL}/contacts`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(contactData),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to add contact');\n//     }\n\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error:', error);\n//     throw error;\n//   }\n// };\n\n// //src/api.js\nconst API_URL = 'http://localhost:5000/api';\nexport const fetchContacts = async category => {\n  try {\n    const response = await fetch(`${API_URL}/contacts/${category}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch contacts');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const addContact = async contactData => {\n  try {\n    const response = await fetch(`${API_URL}/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(contactData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add contact');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\n\n// export const fetchTodos = async (contactId) => {\n//   try {\n//     debugger;\n//      const response = await fetch(`${API_URL}/contacts/${contactId}/todos`);\n//     //const response = await fetch(`${API_URL}/contacts`);\n//     if (!response.ok) {\n//       throw new Error('Failed to fetch todos');\n//     }\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error fetching todos:', error);\n//     throw error;\n//   }\n// };\n\n// export const addTodo = async (contactId, todoData) => {\n//   try {\n//     debugger\n//     console.log(`Sending addTodo request to /contacts/${contactId}/todos with data:`, todoData);\n//     const response = await fetch(`${API_URL}/Contacts/${contactId}/todos`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(todoData),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error(`Failed to add todo, status: ${response.status}`);\n//     }\n//     console.log('addTodo response received');\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error in addTodo API call:', error);\n//     throw error;\n//   }\n// };\n\n// // Toggle todo completion status\n// export const toggleTodo = async (todoId, completed) => {\n//   try {\n//     const response = await fetch(`${API_URL}/todos/${todoId}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ completed }),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to update todo');\n//     }\n\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error updating todo:', error);\n//     throw error;\n//   }\n// };\n\nexport const fetchTodos = async contactId => {\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\n  return response.data;\n};\nexport const addTodo = async (contactId, newTodo) => {\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, newTodo);\n  return response.data;\n};\nexport const toggleTodo = async (todoId, completed) => {\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, {\n    completed\n  });\n  return response.data;\n};\nexport const updateTodo = async (todoId, updatedData) => {\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, updatedData);\n  return response.data;\n};\nexport const deleteTodo = async todoId => {\n  await axios.delete(`${API_URL}/todos/${todoId}`);\n};","map":{"version":3,"names":["API_URL","fetchContacts","category","response","fetch","ok","Error","json","error","console","addContact","contactData","method","headers","body","JSON","stringify","fetchTodos","contactId","axios","get","data","addTodo","newTodo","post","toggleTodo","todoId","completed","put","updateTodo","updatedData","deleteTodo","delete"],"sources":["D:/PeoplePixel1/src/api.js"],"sourcesContent":["// //src/api.js\r\n\r\n\r\n\r\n// const API_URL = 'http://localhost:5000/api';\r\n\r\n// export const fetchContacts = async (category) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/contacts/${category}`);\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to fetch contacts');\r\n//     }\r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const addContact = async (contactData) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/contacts`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(contactData),\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to add contact');\r\n//     }\r\n    \r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n\r\n// //src/api.js\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchContacts = async (category) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts/${category}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch contacts');\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async (contactData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(contactData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to add contact');\r\n    }\r\n    \r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// export const fetchTodos = async (contactId) => {\r\n//   try {\r\n//     debugger;\r\n//      const response = await fetch(`${API_URL}/contacts/${contactId}/todos`);\r\n//     //const response = await fetch(`${API_URL}/contacts`);\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to fetch todos');\r\n//     }\r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error fetching todos:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const addTodo = async (contactId, todoData) => {\r\n//   try {\r\n//     debugger\r\n//     console.log(`Sending addTodo request to /contacts/${contactId}/todos with data:`, todoData);\r\n//     const response = await fetch(`${API_URL}/Contacts/${contactId}/todos`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(todoData),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Failed to add todo, status: ${response.status}`);\r\n//     }\r\n//     console.log('addTodo response received');\r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error in addTodo API call:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n\r\n// // Toggle todo completion status\r\n// export const toggleTodo = async (todoId, completed) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/todos/${todoId}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ completed }),\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to update todo');\r\n//     }\r\n    \r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error updating todo:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\nexport const fetchTodos = async (contactId) => {\r\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\r\n  return response.data;\r\n};\r\n\r\nexport const addTodo = async (contactId, newTodo) => {\r\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, newTodo);\r\n  return response.data;\r\n};\r\n\r\nexport const toggleTodo = async (todoId, completed) => {\r\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, { completed });\r\n  return response.data;\r\n};\r\n\r\nexport const updateTodo = async (todoId, updatedData) => {\r\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, updatedData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteTodo = async (todoId) => {\r\n  await axios.delete(`${API_URL}/todos/${todoId}`);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}