{"ast":null,"code":"// //src/api.js\n\n// const API_URL = 'http://localhost:5000/api';\n\n// export const fetchContacts = async (category) => {\n//   try {\n//     const response = await fetch(`${API_URL}/contacts/${category}`);\n//     if (!response.ok) {\n//       throw new Error('Failed to fetch contacts');\n//     }\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error:', error);\n//     throw error;\n//   }\n// };\n\n// export const addContact = async (contactData) => {\n//   try {\n//     const response = await fetch(`${API_URL}/contacts`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(contactData),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to add contact');\n//     }\n\n//     return response.json();\n//   } catch (error) {\n//     console.error('Error:', error);\n//     throw error;\n//   }\n// };\n\n// //src/api.js\nconst API_URL = 'http://localhost:5000/api';\nexport const fetchContacts = async category => {\n  try {\n    const response = await fetch(`${API_URL}/contacts/${category}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch contacts');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const addContact = async contactData => {\n  try {\n    const response = await fetch(`${API_URL}/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(contactData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add contact');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const fetchTodos = async contactId => {\n  try {\n    const response = await fetch(`${API_URL}/contacts/${contactId}/todos`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch todos');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw error;\n  }\n};\nexport const addTodo = async (contactId, todoData) => {\n  try {\n    debugger;\n    contactId = 1;\n    console.log(`Sending addTodo request to /contacts/${contactId}/todos with data:`, todoData);\n    const response = await fetch(`${API_URL}/contacts/${contactId}/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todoData)\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to add todo, status: ${response.status}`);\n    }\n    console.log('addTodo response received');\n    return response.json();\n  } catch (error) {\n    console.error('Error in addTodo API call:', error);\n    throw error;\n  }\n};\n\n// Toggle todo completion status\nexport const toggleTodo = async (todoId, completed) => {\n  try {\n    const response = await fetch(`${API_URL}/todos/${todoId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update todo');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error updating todo:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","fetchContacts","category","response","fetch","ok","Error","json","error","console","addContact","contactData","method","headers","body","JSON","stringify","fetchTodos","contactId","addTodo","todoData","log","status","toggleTodo","todoId","completed"],"sources":["D:/PeoplePixel1/src/api.js"],"sourcesContent":["// //src/api.js\r\n\r\n\r\n\r\n// const API_URL = 'http://localhost:5000/api';\r\n\r\n// export const fetchContacts = async (category) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/contacts/${category}`);\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to fetch contacts');\r\n//     }\r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const addContact = async (contactData) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/contacts`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(contactData),\r\n//     });\r\n    \r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to add contact');\r\n//     }\r\n    \r\n//     return response.json();\r\n//   } catch (error) {\r\n//     console.error('Error:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n\r\n\r\n// //src/api.js\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchContacts = async (category) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts/${category}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch contacts');\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async (contactData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(contactData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to add contact');\r\n    }\r\n    \r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTodos = async (contactId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts/${contactId}/todos`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch todos');\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching todos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addTodo = async (contactId, todoData) => {\r\n  try {\r\n    debugger\r\n    contactId=1;\r\n    console.log(`Sending addTodo request to /contacts/${contactId}/todos with data:`, todoData);\r\n    const response = await fetch(`${API_URL}/contacts/${contactId}/todos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(todoData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to add todo, status: ${response.status}`);\r\n    }\r\n    console.log('addTodo response received');\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error in addTodo API call:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n// Toggle todo completion status\r\nexport const toggleTodo = async (todoId, completed) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/todos/${todoId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ completed }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to update todo');\r\n    }\r\n    \r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error updating todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}