{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\n// import TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\n\n//   // Fetch todos for the contact when component mounts\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         // Replace this URL with your API to fetch todos for a specific contact\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\n//         setTodos(response.data);\n//       } catch (error) {\n//         console.error('Error fetching todos:', error);\n//       }\n//     };\n\n//     fetchTodos();\n//   }, [params.get('id')]); // Trigger fetch whenever the contact ID changes\n\n//   // Handle adding a new todo\n//   const addTodo = async (newTodoText) => {\n//     try {\n//       const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\n//       const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n//       setTodos([...todos, response.data]); // Add the new todo to the list\n//     } catch (error) {\n//       console.error('Error adding todo:', error);\n//     }\n//   };\n\n//   // Handle toggling todo completion\n//   const toggleTodo = async (todoId) => {\n//     try {\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\n//       updatedTodo.completed = !updatedTodo.completed;\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\n//     } catch (error) {\n//       console.error('Error toggling todo completion:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             <div className=\"todo-header\">\n//               <button\n//                 className=\"add-button\"\n//                 onClick={() => {\n//                   const newTodoText = prompt('Enter new todo:');\n//                   if (newTodoText) addTodo(newTodoText);\n//                 }}\n//               >\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\n//               </button>\n//             </div>\n//             <div className=\"todo-list\">\n//               {todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => toggleTodo(todo._id)}\n//                     />\n//                     <span>{todo.text}</span>\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = ({\n  match\n}) => {\n  _s();\n  const [contact, setContact] = useState(null);\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    text: '',\n    dueDate: '',\n    priority: 'Low'\n  });\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editTodo, setEditTodo] = useState({\n    text: '',\n    dueDate: '',\n    priority: 'Low',\n    completed: false\n  });\n  const contactId = match.params.contactId;\n\n  // Fetch contact and todos\n  useEffect(() => {\n    const fetchContact = async () => {\n      try {\n        const contactResponse = await axios.get(`/api/contacts/${contactId}`);\n        setContact(contactResponse.data);\n      } catch (error) {\n        console.error('Error fetching contact details:', error);\n      }\n    };\n    const fetchTodos = async () => {\n      try {\n        const todosResponse = await axios.get(`/api/contacts/${contactId}/todos`);\n        setTodos(todosResponse.data);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    fetchContact();\n    fetchTodos();\n  }, [contactId]);\n\n  // Handle new todo input\n  const handleNewTodoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTodo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Add a new todo\n  const handleAddTodo = async () => {\n    try {\n      const response = await axios.post(`/api/contacts/${contactId}/todos`, newTodo);\n      setTodos([...todos, response.data]);\n      setNewTodo({\n        text: '',\n        dueDate: '',\n        priority: 'Low'\n      });\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  // Edit an existing todo\n  const handleEditTodoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditTodo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleStartEdit = todo => {\n    setEditingTodoId(todo._id);\n    setEditTodo({\n      text: todo.text,\n      dueDate: todo.dueDate ? new Date(todo.dueDate).toISOString().split('T')[0] : '',\n      priority: todo.priority,\n      completed: todo.completed\n    });\n  };\n  const handleUpdateTodo = async () => {\n    try {\n      const response = await axios.put(`/api/todos/${editingTodoId}`, editTodo);\n      setTodos(todos.map(todo => todo._id === editingTodoId ? response.data : todo));\n      setEditingTodoId(null);\n      setEditTodo({\n        text: '',\n        dueDate: '',\n        priority: 'Low',\n        completed: false\n      });\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n\n  // Delete a todo\n  const handleDeleteTodo = async todoId => {\n    try {\n      await axios.delete(`/api/todos/${todoId}`);\n      setTodos(todos.filter(todo => todo._id !== todoId));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: contact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: contact.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", contact.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", contact.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          value: newTodo.text,\n          onChange: handleNewTodoChange,\n          placeholder: \"Todo text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"dueDate\",\n          value: newTodo.dueDate,\n          onChange: handleNewTodoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"priority\",\n          value: newTodo.priority,\n          onChange: handleNewTodoChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: editingTodoId === todo._id ?\n            /*#__PURE__*/\n            // Edit mode\n            _jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"text\",\n                value: editTodo.text,\n                onChange: handleEditTodoChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"dueDate\",\n                value: editTodo.dueDate,\n                onChange: handleEditTodoChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"priority\",\n                value: editTodo.priority,\n                onChange: handleEditTodoChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"completed\",\n                checked: editTodo.completed,\n                onChange: () => setEditTodo(prev => ({\n                  ...prev,\n                  completed: !prev.completed\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleUpdateTodo,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditingTodoId(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this) :\n            /*#__PURE__*/\n            // View mode\n            _jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: todo.completed,\n                onChange: () => handleStartEdit({\n                  ...todo,\n                  completed: !todo.completed\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: todo.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Due: \", todo.dueDate ? new Date(todo.dueDate).toLocaleDateString() : 'No due date']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Priority: \", todo.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStartEdit(todo),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTodo(todo._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this)\n          }, todo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading contact details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"plq7YudKVhDqtchzx0SukwBeh8k=\");\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","IndividualContact","match","_s","contact","setContact","todos","setTodos","newTodo","setNewTodo","text","dueDate","priority","editingTodoId","setEditingTodoId","editTodo","setEditTodo","completed","contactId","params","fetchContact","contactResponse","get","data","error","console","fetchTodos","todosResponse","handleNewTodoChange","e","name","value","target","prev","handleAddTodo","response","post","handleEditTodoChange","handleStartEdit","todo","_id","Date","toISOString","split","handleUpdateTodo","put","map","handleDeleteTodo","todoId","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","email","phone","type","onChange","placeholder","onClick","checked","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n// //src/IndividualContacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n// import TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\r\n\r\n//   // Fetch todos for the contact when component mounts\r\n//   useEffect(() => {\r\n//     const fetchTodos = async () => {\r\n//       try {\r\n//         // Replace this URL with your API to fetch todos for a specific contact\r\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\r\n//         setTodos(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching todos:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTodos();\r\n//   }, [params.get('id')]); // Trigger fetch whenever the contact ID changes\r\n\r\n//   // Handle adding a new todo\r\n//   const addTodo = async (newTodoText) => {\r\n//     try {\r\n//       const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\r\n//       const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n//       setTodos([...todos, response.data]); // Add the new todo to the list\r\n//     } catch (error) {\r\n//       console.error('Error adding todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Handle toggling todo completion\r\n//   const toggleTodo = async (todoId) => {\r\n//     try {\r\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\r\n//       updatedTodo.completed = !updatedTodo.completed;\r\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error toggling todo completion:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             <div className=\"todo-header\">\r\n//               <button\r\n//                 className=\"add-button\"\r\n//                 onClick={() => {\r\n//                   const newTodoText = prompt('Enter new todo:');\r\n//                   if (newTodoText) addTodo(newTodoText);\r\n//                 }}\r\n//               >\r\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"todo-list\">\r\n//               {todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => toggleTodo(todo._id)}\r\n//                     />\r\n//                     <span>{todo.text}</span>\r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst IndividualContact = ({ match }) => {\r\n  const [contact, setContact] = useState(null);\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState({\r\n    text: '',\r\n    dueDate: '',\r\n    priority: 'Low',\r\n  });\r\n  const [editingTodoId, setEditingTodoId] = useState(null);\r\n  const [editTodo, setEditTodo] = useState({\r\n    text: '',\r\n    dueDate: '',\r\n    priority: 'Low',\r\n    completed: false,\r\n  });\r\n\r\n  const contactId = match.params.contactId;\r\n\r\n  // Fetch contact and todos\r\n  useEffect(() => {\r\n    const fetchContact = async () => {\r\n      try {\r\n        const contactResponse = await axios.get(`/api/contacts/${contactId}`);\r\n        setContact(contactResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching contact details:', error);\r\n      }\r\n    };\r\n\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const todosResponse = await axios.get(`/api/contacts/${contactId}/todos`);\r\n        setTodos(todosResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching todos:', error);\r\n      }\r\n    };\r\n\r\n    fetchContact();\r\n    fetchTodos();\r\n  }, [contactId]);\r\n\r\n  // Handle new todo input\r\n  const handleNewTodoChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTodo((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Add a new todo\r\n  const handleAddTodo = async () => {\r\n    try {\r\n      const response = await axios.post(`/api/contacts/${contactId}/todos`, newTodo);\r\n      setTodos([...todos, response.data]);\r\n      setNewTodo({ text: '', dueDate: '', priority: 'Low' });\r\n    } catch (error) {\r\n      console.error('Error adding todo:', error);\r\n    }\r\n  };\r\n\r\n  // Edit an existing todo\r\n  const handleEditTodoChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditTodo((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleStartEdit = (todo) => {\r\n    setEditingTodoId(todo._id);\r\n    setEditTodo({\r\n      text: todo.text,\r\n      dueDate: todo.dueDate ? new Date(todo.dueDate).toISOString().split('T')[0] : '',\r\n      priority: todo.priority,\r\n      completed: todo.completed,\r\n    });\r\n  };\r\n\r\n  const handleUpdateTodo = async () => {\r\n    try {\r\n      const response = await axios.put(`/api/todos/${editingTodoId}`, editTodo);\r\n      setTodos(todos.map((todo) => (todo._id === editingTodoId ? response.data : todo)));\r\n      setEditingTodoId(null);\r\n      setEditTodo({ text: '', dueDate: '', priority: 'Low', completed: false });\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error);\r\n    }\r\n  };\r\n\r\n  // Delete a todo\r\n  const handleDeleteTodo = async (todoId) => {\r\n    try {\r\n      await axios.delete(`/api/todos/${todoId}`);\r\n      setTodos(todos.filter((todo) => todo._id !== todoId));\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {contact ? (\r\n        <div>\r\n          <h2>{contact.name}</h2>\r\n          <p>Email: {contact.email}</p>\r\n          <p>Phone: {contact.phone}</p>\r\n\r\n          {/* Add New Todo */}\r\n          <div>\r\n            <h3>Add New Todo</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"text\"\r\n              value={newTodo.text}\r\n              onChange={handleNewTodoChange}\r\n              placeholder=\"Todo text\"\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              name=\"dueDate\"\r\n              value={newTodo.dueDate}\r\n              onChange={handleNewTodoChange}\r\n            />\r\n            <select\r\n              name=\"priority\"\r\n              value={newTodo.priority}\r\n              onChange={handleNewTodoChange}\r\n            >\r\n              <option value=\"Low\">Low</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"High\">High</option>\r\n            </select>\r\n            <button onClick={handleAddTodo}>Add Todo</button>\r\n          </div>\r\n\r\n          {/* Todo List */}\r\n          <div>\r\n            <h3>Todo List</h3>\r\n            <ul>\r\n              {todos.map((todo) => (\r\n                <li key={todo._id}>\r\n                  {editingTodoId === todo._id ? (\r\n                    // Edit mode\r\n                    <div>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"text\"\r\n                        value={editTodo.text}\r\n                        onChange={handleEditTodoChange}\r\n                      />\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"dueDate\"\r\n                        value={editTodo.dueDate}\r\n                        onChange={handleEditTodoChange}\r\n                      />\r\n                      <select\r\n                        name=\"priority\"\r\n                        value={editTodo.priority}\r\n                        onChange={handleEditTodoChange}\r\n                      >\r\n                        <option value=\"Low\">Low</option>\r\n                        <option value=\"Medium\">Medium</option>\r\n                        <option value=\"High\">High</option>\r\n                      </select>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"completed\"\r\n                        checked={editTodo.completed}\r\n                        onChange={() =>\r\n                          setEditTodo((prev) => ({\r\n                            ...prev,\r\n                            completed: !prev.completed,\r\n                          }))\r\n                        }\r\n                      />\r\n                      <button onClick={handleUpdateTodo}>Update</button>\r\n                      <button onClick={() => setEditingTodoId(null)}>\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    // View mode\r\n                    <div>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={todo.completed}\r\n                        onChange={() =>\r\n                          handleStartEdit({\r\n                            ...todo,\r\n                            completed: !todo.completed,\r\n                          })\r\n                        }\r\n                      />\r\n                      <span>{todo.text}</span>\r\n                      <span>Due: {todo.dueDate ? new Date(todo.dueDate).toLocaleDateString() : 'No due date'}</span>\r\n                      <span>Priority: {todo.priority}</span>\r\n                      <button onClick={() => handleStartEdit(todo)}>Edit</button>\r\n                      <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Loading contact details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":";;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IACvCa,IAAI,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}