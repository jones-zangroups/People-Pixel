{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// src/IndividualContact.js\nimport React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\nimport Contacts from './Contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name'); // Get the contact name from URL\n  const avatar = params.get('avatar'); // Get the contact avatar\n\n  const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n  const [todos, setTodos] = useState([{\n    text: \"Complete Today's Task\"\n  }, {\n    text: \"Schedule meeting\"\n  }]); // Sample todo data\n  const [reminders, setReminders] = useState([]); // Sample reminder data\n  const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-person-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FaCheckSquare, {\n            className: \"status-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"1V9W64+mFxVx0qmr1UT+fe5Fq5M=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaPlus, FaTrash } from 'react-icons/fa';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar\n//   const contactId = params.get('id'); // Assume we have a contact ID in URL for API access\n\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [newTodoText, setNewTodoText] = useState('');\n\n//   useEffect(() => {\n//     fetchTodos();\n//   }, []);\n\n//   const fetchTodos = async () => {\n//     try {\n//       const response = await fetch(`/api/contacts/${contactId}/todos`);\n//       const data = await response.json();\n//       setTodos(data);\n//     } catch (error) {\n//       console.error('Error fetching todos:', error);\n//     }\n//   };\n\n//   const handleAddTodo = async () => {\n//     if (!newTodoText) return;\n//     try {\n//       const response = await fetch(`/api/contacts/${contactId}/todos`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ text: newTodoText })\n//       });\n//       const newTodo = await response.json();\n//       setTodos([...todos, newTodo]);\n//       setNewTodoText('');\n//     } catch (error) {\n//       console.error('Error adding todo:', error);\n//     }\n//   };\n\n//   const handleDeleteTodo = async (todoId) => {\n//     try {\n//       await fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\n//         method: 'DELETE'\n//       });\n//       setTodos(todos.filter(todo => todo._id !== todoId));\n//     } catch (error) {\n//       console.error('Error deleting todo:', error);\n//     }\n//   };\n\n//   const handleToggleComplete = async (todoId, completed) => {\n//     try {\n//       const response = await fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ completed: !completed })\n//       });\n//       const updatedTodo = await response.json();\n//       setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\n//     } catch (error) {\n//       console.error('Error updating todo:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n//       <div className=\"contact-summary\">\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare /> Todo\n//         </button>\n//       </div>\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map(todo => (\n//               <div key={todo._id} className=\"list-item\">\n//                 <span \n//                   onClick={() => handleToggleComplete(todo._id, todo.completed)} \n//                   style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n//                 >\n//                   {todo.text}\n//                 </span>\n//                 <button onClick={() => handleDeleteTodo(todo._id)}><FaTrash /></button>\n//               </div>\n//             ))}\n//             <input \n//               type=\"text\" \n//               placeholder=\"New Todo\" \n//               value={newTodoText} \n//               onChange={(e) => setNewTodoText(e.target.value)} \n//             />\n//             <button onClick={handleAddTodo}><FaPlus /> Add Todo</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useLocation","Link","FaCheckSquare","FaBell","FaMoneyBillWave","Contacts","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","activeTab","setActiveTab","todos","setTodos","text","reminders","setReminders","transactions","setTransactions","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","index","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n// src/IndividualContact.js\r\nimport React, { useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\nimport Contacts from './Contacts';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name'); // Get the contact name from URL\r\n  const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n  const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n  const [reminders, setReminders] = useState([]); // Sample reminder data\r\n  const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        {/* <button className=\"back-button\">‚Üê Contacts</button> */}\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n\r\n        {/* <h1 className=\"title\">Contact</h1> */}\r\n      </header>\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <i className=\"bi bi-person-circle\"></i>\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {todos.map((todo, index) => (\r\n              <div key={index} className=\"list-item\">\r\n                <span>{todo.text}</span>\r\n                <FaCheckSquare className=\"status-icon\" />\r\n              </div>\r\n            ))}\r\n            <button className=\"add-button\">+ Add New Todo</button>\r\n          </div>\r\n        )}\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaPlus, FaTrash } from 'react-icons/fa';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n//   const contactId = params.get('id'); // Assume we have a contact ID in URL for API access\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [newTodoText, setNewTodoText] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     fetchTodos();\r\n//   }, []);\r\n\r\n//   const fetchTodos = async () => {\r\n//     try {\r\n//       const response = await fetch(`/api/contacts/${contactId}/todos`);\r\n//       const data = await response.json();\r\n//       setTodos(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching todos:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleAddTodo = async () => {\r\n//     if (!newTodoText) return;\r\n//     try {\r\n//       const response = await fetch(`/api/contacts/${contactId}/todos`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ text: newTodoText })\r\n//       });\r\n//       const newTodo = await response.json();\r\n//       setTodos([...todos, newTodo]);\r\n//       setNewTodoText('');\r\n//     } catch (error) {\r\n//       console.error('Error adding todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTodo = async (todoId) => {\r\n//     try {\r\n//       await fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\r\n//         method: 'DELETE'\r\n//       });\r\n//       setTodos(todos.filter(todo => todo._id !== todoId));\r\n//     } catch (error) {\r\n//       console.error('Error deleting todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleToggleComplete = async (todoId, completed) => {\r\n//     try {\r\n//       const response = await fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\r\n//         method: 'PUT',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ completed: !completed })\r\n//       });\r\n//       const updatedTodo = await response.json();\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error updating todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare /> Todo\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map(todo => (\r\n//               <div key={todo._id} className=\"list-item\">\r\n//                 <span \r\n//                   onClick={() => handleToggleComplete(todo._id, todo.completed)} \r\n//                   style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\r\n//                 >\r\n//                   {todo.text}\r\n//                 </span>\r\n//                 <button onClick={() => handleDeleteTodo(todo._id)}><FaTrash /></button>\r\n//               </div>\r\n//             ))}\r\n//             <input \r\n//               type=\"text\" \r\n//               placeholder=\"New Todo\" \r\n//               value={newTodoText} \r\n//               onChange={(e) => setNewTodoText(e.target.value)} \r\n//             />\r\n//             <button onClick={handleAddTodo}><FaPlus /> Add Todo</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}