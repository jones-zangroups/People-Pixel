{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import { fetchTodos, addTodo, toggleTodo } from './api';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft  } from 'react-icons/fa';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name');\n//   const avatar = params.get('avatar');\n//   const contactId = params.get('contactId');\n//   const category = params.get('category');\n\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [contacts, setContacts] = useState([]);\n\n//   //Fetch todos when component mounts or contactId changes\n//   useEffect(() => {\n//     debugger;\n//     const loadTodos = async () => {\n//       if (!contactId) {\n//         setError('No contact ID provided');\n//         setLoading(false);\n//         return;\n//       }\n\n//       try {\n//         setLoading(true);\n//         const todoData = await fetchTodos(contactId);\n//         setTodos(todoData);\n//         setError(null);\n//       } catch (err) {\n//         setError('Failed to load todos: ' + err.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     loadTodos();\n\n//   }, [contactId]);\n\n//   // Handle adding a new todo\n//   const handleAddTodo = async (todoText) => {\n//     debugger;\n\n//     try {\n//       const newTodo = {\n//         text: todoText,\n//         completed: false,\n//         priority: 'Medium'\n//       };\n\n//       console.log('Adding new todo:', newTodo);  // Log the todo data before API call\n//       const response = await addTodo(contactId, newTodo);\n\n//       debugger;\n\n//       debugger;\n//       setTodos([...todos, response]); // Add new category to state\n\n//       setTodos(prevTodos => [...prevTodos, newTodo]);\n//     } catch (err) {\n//       setError('Failed to add todo: ' + err.message);\n//       console.error('Error in handleAddTodo:', err);  // Log the error\n//     }\n//   };\n\n//   // Handle toggling todo completion\n//   const handleToggleTodo = async (todoId, completed) => {\n//     try {\n//       const updatedTodo = await toggleTodo(todoId, !completed);\n//       setTodos(prevTodos =>\n//         prevTodos.map(todo =>\n//           todo._id === todoId ? updatedTodo : todo\n//         )\n//       );\n//     } catch (err) {\n//       setError('Failed to update todo: ' + err.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()} ><FaChevronLeft  className=\"icon\" /> Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n\n//           <div className=\"todo-content\">\n//             {error && <div className=\"error-message\">{error}</div>}\n\n//             <div className=\"todo-header\">\n//               <text\n//                 className=\"add-button\" id = 'txttodo'\n//                 onClick={() => {\n//                   const newTodoText = prompt('Enter new todo:');\n//                   if (newTodoText) handleAddTodo(newTodoText);\n//                 }}\n//               >\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\n//               </text>\n//             </div>\n\n//             <div className=\"todo-list\">\n//               {loading ? (\n//                 <p>Loading todos...</p>\n//               ) : todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <span>{todo.text}</span>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => handleToggleTodo(todo._id, todo.completed)}\n//                     />\n\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId');\n  const category = params.get('category');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n  useEffect(() => {\n    const loadTodos = async () => {\n      if (!contactId) {\n        setError('No contact ID provided');\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    try {\n      const newTodo = {\n        text: newTodoText,\n        completed: false,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      };\n      const response = await addTodo(contactId, newTodo);\n      setTodos([...todos, response]);\n      setNewTodoText('');\n      setNewTodoPriority('Medium');\n      setNewTodoDueDate('');\n      setTodoFormVisible(false); // Hide form after saving\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n      console.error('Error in handleAddTodo:', err);\n    }\n  };\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 79\n        }, this), \" Contacts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-todo-button\",\n          onClick: () => setTodoFormVisible(true),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), \" Add New Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), isTodoFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleAddTodo,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Todo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newTodoText,\n                onChange: e => setNewTodoText(e.target.value),\n                placeholder: \"New todo text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newTodoPriority,\n                onChange: e => setNewTodoPriority(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Due Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: newTodoDueDate,\n                onChange: e => setNewTodoDueDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Save Todo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setTodoFormVisible(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading todos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this) : todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No todos found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${todo.completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.dueDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id, todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"lpq0AgP6vouseDueVzd7CQLvZ+c=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","FaChevronLeft","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","category","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","newTodoText","setNewTodoText","newTodoPriority","setNewTodoPriority","newTodoDueDate","setNewTodoDueDate","isTodoFormVisible","setTodoFormVisible","loadTodos","todoData","err","message","handleAddTodo","e","preventDefault","newTodo","text","completed","priority","dueDate","response","console","handleToggleTodo","todoId","updatedTodo","prevTodos","map","todo","_id","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","value","onChange","target","placeholder","required","length","checked","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import { fetchTodos, addTodo, toggleTodo } from './api';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft  } from 'react-icons/fa';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name');\r\n//   const avatar = params.get('avatar');\r\n//   const contactId = params.get('contactId');\r\n//   const category = params.get('category');\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [contacts, setContacts] = useState([]);\r\n\r\n//   //Fetch todos when component mounts or contactId changes\r\n//   useEffect(() => {\r\n//     debugger;\r\n//     const loadTodos = async () => {\r\n//       if (!contactId) {\r\n//         setError('No contact ID provided');\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         setLoading(true);\r\n//         const todoData = await fetchTodos(contactId);\r\n//         setTodos(todoData);\r\n//         setError(null);\r\n//       } catch (err) {\r\n//         setError('Failed to load todos: ' + err.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     loadTodos();\r\n\r\n//   }, [contactId]);\r\n\r\n\r\n\r\n//   // Handle adding a new todo\r\n//   const handleAddTodo = async (todoText) => {\r\n//     debugger;\r\n  \r\n//     try {\r\n//       const newTodo = {\r\n//         text: todoText,\r\n//         completed: false,\r\n//         priority: 'Medium'\r\n//       };\r\n  \r\n//       console.log('Adding new todo:', newTodo);  // Log the todo data before API call\r\n//       const response = await addTodo(contactId, newTodo);\r\n\r\n//       debugger;\r\n\r\n//       debugger;\r\n//       setTodos([...todos, response]); // Add new category to state\r\n\r\n//       setTodos(prevTodos => [...prevTodos, newTodo]);\r\n//     } catch (err) {\r\n//       setError('Failed to add todo: ' + err.message);\r\n//       console.error('Error in handleAddTodo:', err);  // Log the error\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // Handle toggling todo completion\r\n//   const handleToggleTodo = async (todoId, completed) => {\r\n//     try {\r\n//       const updatedTodo = await toggleTodo(todoId, !completed);\r\n//       setTodos(prevTodos =>\r\n//         prevTodos.map(todo =>\r\n//           todo._id === todoId ? updatedTodo : todo\r\n//         )\r\n//       );\r\n//     } catch (err) {\r\n//       setError('Failed to update todo: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()} ><FaChevronLeft  className=\"icon\" /> Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n\r\n//           <div className=\"todo-content\">\r\n//             {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n//             <div className=\"todo-header\">\r\n//               <text\r\n//                 className=\"add-button\" id = 'txttodo'\r\n//                 onClick={() => {\r\n//                   const newTodoText = prompt('Enter new todo:');\r\n//                   if (newTodoText) handleAddTodo(newTodoText);\r\n//                 }}\r\n//               >\r\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//               </text>\r\n//             </div>\r\n\r\n//             <div className=\"todo-list\">\r\n//               {loading ? (\r\n//                 <p>Loading todos...</p>\r\n//               ) : todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <span>{todo.text}</span>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n//                     />\r\n                    \r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId');\r\n  const category = params.get('category');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      if (!contactId) {\r\n        setError('No contact ID provided');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n  const handleAddTodo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTodo = {\r\n        text: newTodoText,\r\n        completed: false,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      };\r\n\r\n      const response = await addTodo(contactId, newTodo);\r\n      setTodos([...todos, response]);\r\n      setNewTodoText('');\r\n      setNewTodoPriority('Medium');\r\n      setNewTodoDueDate('');\r\n      setTodoFormVisible(false); // Hide form after saving\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n      console.error('Error in handleAddTodo:', err);\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n              <FaPlusCircle className=\"icon\" /> Add New Todo\r\n            </button>\r\n\r\n            {isTodoFormVisible && (\r\n              <div className=\"todo-form-overlay\">\r\n                <div className=\"todo-form\">\r\n                  <form onSubmit={handleAddTodo}>\r\n                    <label>Todo:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newTodoText}\r\n                      onChange={(e) => setNewTodoText(e.target.value)}\r\n                      placeholder=\"New todo text\"\r\n                      required\r\n                    />\r\n                    <label>Priority:</label>\r\n                    <select\r\n                      value={newTodoPriority}\r\n                      onChange={(e) => setNewTodoPriority(e.target.value)}\r\n                    >\r\n                      <option value=\"High\">High</option>\r\n                      <option value=\"Medium\">Medium</option>\r\n                      <option value=\"Low\">Low</option>\r\n                    </select>\r\n                    <label>Due Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={newTodoDueDate}\r\n                      onChange={(e) => setNewTodoDueDate(e.target.value)}\r\n                    />\r\n                    <button type=\"submit\">Save Todo</button>\r\n                    <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"todo-list\">\r\n              {loading ? (\r\n                <p>Loading todos...</p>\r\n              ) : todos.length === 0 ? (\r\n                <p>No todos found</p>\r\n              ) : (\r\n                todos.map(todo => (\r\n                  <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n                    <span>{todo.text}</span>\r\n                    <span>{todo.dueDate}</span>\r\n                    <span>{todo.priority}</span>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n                    />\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":";;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErG,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,IAAI,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}