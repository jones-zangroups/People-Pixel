{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo, fetchReminders, addReminder, updateReminder, deleteReminder, fetchFinances, addFinance, updateFinance, deleteFinance } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\nimport Calendar from 'react-calendar';\n//import Finance from '../backend/models/Finance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [sortOption, setSortOption] = useState(\"\");\n  const [filterPriority, setFilterPriority] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n\n  //reminder\n  const [reminders, setReminders] = useState([]);\n  const [newReminderText, setNewReminderText] = useState('');\n  const [newReminderDate, setNewReminderDate] = useState('');\n  const [newReminderTime, setNewReminderTime] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [isReminderFormVisible, setReminderFormVisible] = useState(false);\n  const [isCalendarView, setIsCalendarView] = useState(true);\n  const [selectedDateReminders, setSelectedDateReminders] = useState([]);\n\n  //finance\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    date: '',\n    description: '',\n    amount: '',\n    category: '',\n    type: 'income' // income or expense\n  });\n  const [isTransactionFormVisible, setTransactionFormVisible] = useState(false);\n  const [editIndex, setEditIndex] = useState(null);\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    try {\n      const newTodo = {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      };\n      const response = await addTodo(contactId, newTodo);\n      setTodos([...todos, response]);\n      setNewTodoText('');\n      setNewTodoPriority('Medium');\n      setNewTodoDueDate('');\n      setTodoFormVisible(false);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n    }\n  };\n  const handleUpdateTodo = async todoId => {\n    try {\n      const updatedTodo = await updateTodo(todoId, {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      });\n      setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n      setSelectedTodo(null); // Close the update form\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const handleDeleteTodo = async todoId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\n    if (confirmDelete) {\n      try {\n        await deleteTodo(todoId);\n        setTodos(todos.filter(todo => todo._id !== todoId));\n      } catch (err) {\n        setError('Failed to delete todo: ' + err.message);\n      }\n    }\n  };\n\n  //loads reminder if active\n  useEffect(() => {\n    if (activeTab === 'reminder') {\n      loadReminders();\n    }\n  }, [activeTab, contactId]);\n  const loadReminders = async () => {\n    try {\n      const reminderData = await fetchReminders(contactId);\n      setReminders(reminderData);\n    } catch (error) {\n      console.error('Failed to load reminders:', error);\n    }\n  };\n  const handleAddReminder = async e => {\n    e.preventDefault();\n    const newReminder = {\n      text: newReminderText,\n      date: newReminderDate,\n      time: newReminderTime,\n      isRecurring\n    };\n    try {\n      const addedReminder = await addReminder(contactId, newReminder);\n      setReminders([...reminders, addedReminder]);\n      setNewReminderText('');\n      setNewReminderDate('');\n      setNewReminderTime('');\n      setIsRecurring(false);\n    } catch (error) {\n      console.error('Failed to add reminder:', error);\n    }\n  };\n  const handleDeleteReminder = async reminderId => {\n    try {\n      await deleteReminder(reminderId);\n      setReminders(reminders.filter(reminder => reminder._id !== reminderId));\n    } catch (error) {\n      console.error('Failed to delete reminder:', error);\n    }\n  };\n  const handleDayClick = date => {\n    const remindersForDate = reminders.filter(reminder => new Date(reminder.date).toDateString() === date.toDateString());\n    setSelectedDateReminders(remindersForDate);\n  };\n  const toggleView = () => setIsCalendarView(!isCalendarView);\n  const notifyDueReminders = () => {\n    reminders.forEach(reminder => {\n      const reminderDate = new Date(`${reminder.date}T${reminder.time}`);\n      if (reminderDate - new Date() < 60000) {\n        // Check if reminder is within the next minute\n        if (Notification.permission === 'granted') {\n          new Notification('Reminder', {\n            body: reminder.text\n          });\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n    const interval = setInterval(notifyDueReminders, 60000); // Check every minute\n    return () => clearInterval(interval);\n  }, [reminders]);\n\n  //end for crud for reminder\n\n  const filteredAndSortedTodos = todos.filter(todo => {\n    if (filterPriority && todo.priority !== filterPriority) return false;\n    if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\n    return true;\n  }).sort((a, b) => {\n    if (sortOption === \"date\") {\n      return new Date(a.dueDate) - new Date(b.dueDate);\n    } else if (sortOption === \"priority\") {\n      const priorities = {\n        High: 1,\n        Medium: 2,\n        Low: 3\n      };\n      return priorities[a.priority] - priorities[b.priority];\n    } else if (sortOption === \"status\") {\n      return a.completed === b.completed ? 0 : a.completed ? -1 : 1;\n    }\n    return 0;\n  });\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const showUpdateForm = todo => {\n    setSelectedTodo(todo);\n    setNewTodoText(todo.text);\n    setNewTodoPriority(todo.priority);\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\n  };\n  const resetFilters = () => {\n    setFilterPriority('');\n    setFilterStatus('');\n    setSortOption('');\n  };\n\n  // Function to add or edit a transaction\n\n  useEffect(() => {\n    const loadFinances = async () => {\n      try {\n        const financeData = await fetchFinances(contactId);\n        setTransactions(financeData);\n      } catch (error) {\n        console.error('Error loading finances:', error);\n      }\n    };\n    loadFinances();\n  }, [contactId]);\n\n  // const handleAddTodo = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const newTodo = {\n  //       text: newTodoText,\n  //       priority: newTodoPriority,\n  //       dueDate: newTodoDueDate\n  //     };\n  //     const response = await addTodo(contactId, newTodo);\n  //     setTodos([...todos, response]);\n  //     setNewTodoText('');\n  //     setNewTodoPriority('Medium');\n  //     setNewTodoDueDate('');\n  //     setTodoFormVisible(false);\n  //   } catch (err) {\n  //     setError('Failed to add todo: ' + err.message);\n  //   }\n  // };\n\n  const handleSaveTransaction = async e => {\n    debugger;\n    const amount = parseFloat(newTransaction.amount);\n    if (!amount || !newTransaction.description || !newTransaction.date) return alert(\"Fill all fields\");\n    const updatedTransaction = {\n      ...newTransaction,\n      amount: newTransaction.type === 'expense' ? -Math.abs(amount) : Math.abs(amount)\n    };\n    if (editIndex !== null) {\n      const updatedTransactions = [...transactions];\n      updatedTransactions[editIndex] = updatedTransaction;\n      setTransactions(updatedTransactions);\n      setEditIndex(null);\n    } else {\n      setTransactions([...transactions, updatedTransaction]);\n    }\n    const financeData = await addFinance(contactId, updatedTransaction);\n    setNewTransaction({\n      date: '',\n      description: '',\n      amount: '',\n      category: '',\n      type: 'income',\n      financeData\n    });\n    setTransactionFormVisible(false);\n  };\n\n  // Delete transaction\n  const handleDeleteTransaction = index => {\n    const updatedTransactions = transactions.filter((_, i) => i !== index);\n    setTransactions(updatedTransactions);\n  };\n\n  // Set transaction for editing\n  // const handleEditTransaction = (index) => {\n  //   setNewTransaction(transactions[index]);\n  //   setEditIndex(index);\n  //   setTransactionFormVisible(true);\n  // };\n\n  const handleEditTransaction = async () => {\n    // Parse the amount to ensure it's a number\n    const amount = parseFloat(newTransaction.amount);\n\n    // If editIndex is not null, it means we are in edit mode\n    if (editIndex !== null) {\n      // Check if the transaction is being edited and ensure all fields are populated\n      if (!newTransaction.amount || !newTransaction.description || !newTransaction.date || !newTransaction.category) {\n        return alert(\"Please fill all fields.\");\n      }\n    }\n\n    // Prepare the updated transaction, adjusting the amount based on type (expense or income)\n    const updatedTransaction = {\n      ...newTransaction,\n      amount: newTransaction.type === 'expense' ? -Math.abs(amount) : Math.abs(amount)\n    };\n    try {\n      if (editIndex !== null) {\n        // Send the updated transaction to the backend for persistence\n        const financeData = await updateFinance(transactions[editIndex]._id, updatedTransaction);\n\n        // Update the transaction locally in the UI (state)\n        const updatedTransactions = [...transactions];\n        updatedTransactions[editIndex] = financeData;\n        setTransactions(updatedTransactions);\n\n        // Reset the form and state after editing\n        setEditIndex(null);\n        setNewTransaction({\n          date: '',\n          description: '',\n          amount: '',\n          category: '',\n          type: 'income'\n        });\n\n        // Optionally, hide the transaction form (if it's being displayed)\n        setTransactionFormVisible(false);\n      }\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n    }\n  };\n\n  // Calculate totals\n  const totalIncome = transactions.filter(t => t.amount > 0).reduce((sum, t) => sum + t.amount, 0);\n  const totalExpense = transactions.filter(t => t.amount < 0).reduce((sum, t) => sum + Math.abs(t.amount), 0);\n  const netTotal = totalIncome - totalExpense;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }, this), \" Contacts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 9\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sorting-filtering\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortOption,\n            onChange: e => setSortOption(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Sort by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date\",\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterPriority,\n            onChange: e => setFilterPriority(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Filter by Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterStatus,\n            onChange: e => setFilterStatus(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Filter by Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"notCompleted\",\n              children: \"Not Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetFilters,\n            className: \"cancel-filters-button\",\n            children: \"Cancel Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-todo-button\",\n          onClick: () => setTodoFormVisible(true),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), \" Add New Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), isTodoFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddTodo,\n            className: \"todo-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTodoText,\n              onChange: e => setNewTodoText(e.target.value),\n              placeholder: \"New todo text\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTodoPriority,\n              onChange: e => setNewTodoPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTodoDueDate,\n              onChange: e => setNewTodoDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setTodoFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading todos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this) : filteredAndSortedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(todo.dueDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => showUpdateForm(todo),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTodo(todo._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id, todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), selectedTodo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleUpdateTodo(selectedTodo._id);\n            },\n            className: \"update-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTodoText,\n              onChange: e => setNewTodoText(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTodoPriority,\n              onChange: e => setNewTodoPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTodoDueDate,\n              onChange: e => setNewTodoDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setSelectedTodo(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-reminder-button\",\n          onClick: () => setReminderFormVisible(!isReminderFormVisible),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), \" Add New Reminder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleView,\n          className: \"view-toggle-button\",\n          children: isCalendarView ? 'Switch to List View' : 'Switch to Calendar View'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 7\n        }, this), isCalendarView ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-screen-calendar\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            onClickDay: handleDayClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reminders-on-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Reminders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 13\n            }, this), selectedDateReminders.length > 0 ? selectedDateReminders.map(reminder => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reminder-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: reminder.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: reminder.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteReminder(reminder._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this)]\n            }, reminder._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No reminders for this date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-list-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upcoming Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 11\n          }, this), reminders.map(reminder => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reminder-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: reminder.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [reminder.date, \" \", reminder.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteReminder(reminder._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)]\n          }, reminder._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 9\n        }, this), isReminderFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddReminder,\n            className: \"reminder-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newReminderText,\n              onChange: e => setNewReminderText(e.target.value),\n              placeholder: \"Reminder text\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newReminderDate,\n              onChange: e => setNewReminderDate(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: newReminderTime,\n              onChange: e => setNewReminderTime(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Recurring\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isRecurring,\n                onChange: () => setIsRecurring(!isRecurring)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Reminder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setReminderFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finance-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Financial Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Income: \\u20B9\", totalIncome.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Expense: \\u20B9\", totalExpense.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Net Total: \\u20B9\", netTotal.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTransactionFormVisible(true),\n          children: \"Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 7\n        }, this), isTransactionFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              handleSaveTransaction();\n            },\n            className: \"transaction-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTransaction.date,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                date: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Description\",\n              value: newTransaction.description,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                description: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Amount\",\n              value: newTransaction.amount,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                amount: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTransaction.category,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                category: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"loans\",\n                children: \"Loans\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"expenses\",\n                children: \"Expenses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"payments\",\n                children: \"Payments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"income\",\n                checked: newTransaction.type === 'income',\n                onChange: () => setNewTransaction({\n                  ...newTransaction,\n                  type: 'income'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 15\n              }, this), \"Income\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"expense\",\n                checked: newTransaction.type === 'expense',\n                onChange: () => setNewTransaction({\n                  ...newTransaction,\n                  type: 'expense'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 15\n              }, this), \"Expense\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setTransactionFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", transaction.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", transaction.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: transaction.amount < 0 ? 'red' : 'green'\n              },\n              children: [\"Amount: \\u20B9\", Math.abs(transaction.amount)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Category: \", transaction.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditTransaction(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTransaction(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), isEditMode && selectedTransaction && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction-edit-form\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => {\n                  e.preventDefault();\n                  handleSaveTransaction();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: selectedTransaction.date,\n                  onChange: e => setSelectedTransaction({\n                    ...selectedTransaction,\n                    date: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Description\",\n                  value: selectedTransaction.description,\n                  onChange: e => setSelectedTransaction({\n                    ...selectedTransaction,\n                    description: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Amount\",\n                  value: selectedTransaction.amount,\n                  onChange: e => setSelectedTransaction({\n                    ...selectedTransaction,\n                    amount: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedTransaction.category,\n                  onChange: e => setSelectedTransaction({\n                    ...selectedTransaction,\n                    category: e.target.value\n                  }),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"loans\",\n                    children: \"Loans\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"expenses\",\n                    children: \"Expenses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"payments\",\n                    children: \"Payments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: \"income\",\n                    checked: selectedTransaction.type === 'income',\n                    onChange: () => setSelectedTransaction({\n                      ...selectedTransaction,\n                      type: 'income'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 25\n                  }, this), \"Income\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: \"expense\",\n                    checked: selectedTransaction.type === 'expense',\n                    onChange: () => setSelectedTransaction({\n                      ...selectedTransaction,\n                      type: 'expense'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 25\n                  }, this), \"Expense\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Save Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setIsEditMode(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 3\n  }, this);\n};\n_s(IndividualContact, \"q9kzJIMEsVU9yFgk/BNI1837ybk=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","updateTodo","deleteTodo","fetchReminders","addReminder","updateReminder","deleteReminder","fetchFinances","addFinance","updateFinance","deleteFinance","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","FaChevronLeft","Calendar","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","newTodoText","setNewTodoText","newTodoPriority","setNewTodoPriority","newTodoDueDate","setNewTodoDueDate","isTodoFormVisible","setTodoFormVisible","selectedTodo","setSelectedTodo","sortOption","setSortOption","filterPriority","setFilterPriority","filterStatus","setFilterStatus","reminders","setReminders","newReminderText","setNewReminderText","newReminderDate","setNewReminderDate","newReminderTime","setNewReminderTime","isRecurring","setIsRecurring","isReminderFormVisible","setReminderFormVisible","isCalendarView","setIsCalendarView","selectedDateReminders","setSelectedDateReminders","transactions","setTransactions","newTransaction","setNewTransaction","date","description","amount","category","type","isTransactionFormVisible","setTransactionFormVisible","editIndex","setEditIndex","loadTodos","todoData","err","message","handleAddTodo","e","preventDefault","newTodo","text","priority","dueDate","response","handleUpdateTodo","todoId","updatedTodo","map","todo","_id","handleDeleteTodo","confirmDelete","window","confirm","filter","loadReminders","reminderData","console","handleAddReminder","newReminder","time","addedReminder","handleDeleteReminder","reminderId","reminder","handleDayClick","remindersForDate","Date","toDateString","toggleView","notifyDueReminders","forEach","reminderDate","Notification","permission","body","requestPermission","interval","setInterval","clearInterval","filteredAndSortedTodos","completed","sort","a","b","priorities","High","Medium","Low","handleToggleTodo","prevTodos","showUpdateForm","split","resetFilters","loadFinances","financeData","handleSaveTransaction","parseFloat","alert","updatedTransaction","Math","abs","updatedTransactions","handleDeleteTransaction","index","_","i","handleEditTransaction","totalIncome","t","reduce","sum","totalExpense","netTotal","className","children","onClick","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","value","onChange","target","onSubmit","placeholder","required","toLocaleDateString","checked","onClickDay","length","toFixed","transaction","style","color","isEditMode","selectedTransaction","setSelectedTransaction","setIsEditMode","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n\r\n// src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo, fetchReminders, addReminder, updateReminder, deleteReminder,fetchFinances, addFinance, updateFinance, deleteFinance } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\nimport Calendar from 'react-calendar';\r\n//import Finance from '../backend/models/Finance';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n  const [filterPriority, setFilterPriority] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n  //reminder\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminderText, setNewReminderText] = useState('');\r\n  const [newReminderDate, setNewReminderDate] = useState('');\r\n  const [newReminderTime, setNewReminderTime] = useState('');\r\n  const [isRecurring, setIsRecurring] = useState(false);\r\n  const [isReminderFormVisible, setReminderFormVisible] = useState(false);\r\n  const [isCalendarView, setIsCalendarView] = useState(true);\r\n  const [selectedDateReminders, setSelectedDateReminders] = useState([]);\r\n\r\n  //finance\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [newTransaction, setNewTransaction] = useState({\r\n    date: '',\r\n    description: '',\r\n    amount: '',\r\n    category: '',\r\n    type: 'income', // income or expense\r\n  });\r\n  const [isTransactionFormVisible, setTransactionFormVisible] = useState(false);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n\r\n  const handleAddTodo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTodo = {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      };\r\n      const response = await addTodo(contactId, newTodo);\r\n      setTodos([...todos, response]);\r\n      setNewTodoText('');\r\n      setNewTodoPriority('Medium');\r\n      setNewTodoDueDate('');\r\n      setTodoFormVisible(false);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = await updateTodo(todoId, {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      });\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n      setSelectedTodo(null); // Close the update form\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n    \r\n  };\r\n\r\n  const handleDeleteTodo = async (todoId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteTodo(todoId);\r\n        setTodos(todos.filter(todo => todo._id !== todoId));\r\n      } catch (err) {\r\n        setError('Failed to delete todo: ' + err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n    //loads reminder if active\r\n    useEffect(() => {\r\n      if (activeTab === 'reminder') {\r\n        loadReminders();\r\n      }\r\n    }, [activeTab, contactId]);\r\n  \r\n    const loadReminders = async () => {\r\n      try {\r\n        const reminderData = await fetchReminders(contactId);\r\n        setReminders(reminderData);\r\n      } catch (error) {\r\n        console.error('Failed to load reminders:', error);\r\n      }\r\n    };\r\n  \r\n    const handleAddReminder = async (e) => {\r\n      e.preventDefault();\r\n      const newReminder = {\r\n        text: newReminderText,\r\n        date: newReminderDate,\r\n        time: newReminderTime,\r\n        isRecurring,\r\n      };\r\n      try {\r\n        const addedReminder = await addReminder(contactId, newReminder);\r\n        setReminders([...reminders, addedReminder]);\r\n        setNewReminderText('');\r\n        setNewReminderDate('');\r\n        setNewReminderTime('');\r\n        setIsRecurring(false);\r\n      } catch (error) {\r\n        console.error('Failed to add reminder:', error);\r\n      }\r\n    };\r\n  \r\n    const handleDeleteReminder = async (reminderId) => {\r\n      try {\r\n        await deleteReminder(reminderId);\r\n        setReminders(reminders.filter(reminder => reminder._id !== reminderId));\r\n      } catch (error) {\r\n        console.error('Failed to delete reminder:', error);\r\n      }\r\n    };\r\n\r\n    const handleDayClick = (date) => {\r\n      const remindersForDate = reminders.filter(reminder => \r\n        new Date(reminder.date).toDateString() === date.toDateString()\r\n      );\r\n      setSelectedDateReminders(remindersForDate);\r\n    };\r\n\r\n    const toggleView = () => setIsCalendarView(!isCalendarView);\r\n  \r\n    const notifyDueReminders = () => {\r\n      reminders.forEach(reminder => {\r\n        const reminderDate = new Date(`${reminder.date}T${reminder.time}`);\r\n        if (reminderDate - new Date() < 60000) { // Check if reminder is within the next minute\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('Reminder', { body: reminder.text });\r\n          }\r\n        }\r\n      });\r\n    };\r\n  \r\n\r\n    useEffect(() => {\r\n      if (Notification.permission !== 'granted') {\r\n        Notification.requestPermission();\r\n      }\r\n      const interval = setInterval(notifyDueReminders, 60000); // Check every minute\r\n      return () => clearInterval(interval);\r\n    }, [reminders]);\r\n\r\n    //end for crud for reminder\r\n\r\n  const filteredAndSortedTodos = todos\r\n    .filter(todo => {\r\n      if (filterPriority && todo.priority !== filterPriority) return false;\r\n      if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortOption === \"date\") {\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      } else if (sortOption === \"priority\") {\r\n        const priorities = { High: 1, Medium: 2, Low: 3 };\r\n        return priorities[a.priority] - priorities[b.priority];\r\n      } else if (sortOption === \"status\") {\r\n        return (a.completed === b.completed) ? 0 : a.completed ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n \r\n\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const showUpdateForm = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setNewTodoText(todo.text);\r\n    setNewTodoPriority(todo.priority);\r\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilterPriority('');\r\n    setFilterStatus('');\r\n    setSortOption('');\r\n  };\r\n\r\n    // Function to add or edit a transaction\r\n\r\n    useEffect(() => {\r\n      const loadFinances = async () => {\r\n        try {\r\n          const financeData = await fetchFinances(contactId);\r\n          setTransactions(financeData); \r\n        } catch (error) {\r\n          console.error('Error loading finances:', error);\r\n        }\r\n      };\r\n      loadFinances();\r\n    }, [contactId]);\r\n    \r\n\r\n    // const handleAddTodo = async (e) => {\r\n    //   e.preventDefault();\r\n    //   try {\r\n    //     const newTodo = {\r\n    //       text: newTodoText,\r\n    //       priority: newTodoPriority,\r\n    //       dueDate: newTodoDueDate\r\n    //     };\r\n    //     const response = await addTodo(contactId, newTodo);\r\n    //     setTodos([...todos, response]);\r\n    //     setNewTodoText('');\r\n    //     setNewTodoPriority('Medium');\r\n    //     setNewTodoDueDate('');\r\n    //     setTodoFormVisible(false);\r\n    //   } catch (err) {\r\n    //     setError('Failed to add todo: ' + err.message);\r\n    //   }\r\n    // };\r\n\r\n    const handleSaveTransaction = async (e) => {\r\n      debugger;\r\n      const amount = parseFloat(newTransaction.amount);\r\n      if (!amount || !newTransaction.description || !newTransaction.date) return alert(\"Fill all fields\");\r\n  \r\n      const updatedTransaction = {\r\n        ...newTransaction,\r\n        amount: newTransaction.type === 'expense' ? -Math.abs(amount) : Math.abs(amount),\r\n      };\r\n  \r\n      if (editIndex !== null) {\r\n        const updatedTransactions = [...transactions];\r\n        updatedTransactions[editIndex] = updatedTransaction;\r\n        setTransactions(updatedTransactions);\r\n        setEditIndex(null);\r\n      } else {\r\n        setTransactions([...transactions, updatedTransaction]);\r\n      }\r\n      const financeData = await addFinance(contactId, updatedTransaction);\r\n      setNewTransaction({ date: '', description: '', amount: '', category: '', type: 'income', financeData });\r\n\r\n      setTransactionFormVisible(false);\r\n    };  \r\n  \r\n    // Delete transaction\r\n    const handleDeleteTransaction = (index) => {\r\n      const updatedTransactions = transactions.filter((_, i) => i !== index);\r\n      setTransactions(updatedTransactions);\r\n    };\r\n\r\n  \r\n    // Set transaction for editing\r\n    // const handleEditTransaction = (index) => {\r\n    //   setNewTransaction(transactions[index]);\r\n    //   setEditIndex(index);\r\n    //   setTransactionFormVisible(true);\r\n    // };\r\n\r\n    const handleEditTransaction = async () => {\r\n      // Parse the amount to ensure it's a number\r\n      const amount = parseFloat(newTransaction.amount);\r\n    \r\n      // If editIndex is not null, it means we are in edit mode\r\n      if (editIndex !== null) {\r\n        // Check if the transaction is being edited and ensure all fields are populated\r\n        if (!newTransaction.amount || !newTransaction.description || !newTransaction.date || !newTransaction.category) {\r\n          return alert(\"Please fill all fields.\");\r\n        }\r\n      }\r\n    \r\n      // Prepare the updated transaction, adjusting the amount based on type (expense or income)\r\n      const updatedTransaction = {\r\n        ...newTransaction,\r\n        amount: newTransaction.type === 'expense' ? -Math.abs(amount) : Math.abs(amount),\r\n      };\r\n    \r\n      try {\r\n        if (editIndex !== null) {\r\n          // Send the updated transaction to the backend for persistence\r\n          const financeData = await updateFinance(transactions[editIndex]._id, updatedTransaction);\r\n    \r\n          // Update the transaction locally in the UI (state)\r\n          const updatedTransactions = [...transactions];\r\n          updatedTransactions[editIndex] = financeData;\r\n          setTransactions(updatedTransactions);\r\n    \r\n          // Reset the form and state after editing\r\n          setEditIndex(null);\r\n          setNewTransaction({ date: '', description: '', amount: '', category: '', type: 'income' });\r\n    \r\n          // Optionally, hide the transaction form (if it's being displayed)\r\n          setTransactionFormVisible(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating transaction:', error);\r\n      }\r\n    };\r\n    \r\n    \r\n  \r\n    // Calculate totals\r\n    const totalIncome = transactions\r\n      .filter((t) => t.amount > 0)\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    const totalExpense = transactions\r\n      .filter((t) => t.amount < 0)\r\n      .reduce((sum, t) => sum + Math.abs(t.amount), 0);\r\n    const netTotal = totalIncome - totalExpense;\r\n\r\nreturn (\r\n  <div className=\"individual-contact\">\r\n    <header className=\"header\">\r\n      <button className=\"back-button\" onClick={() => window.history.back()}>\r\n        <FaChevronLeft className=\"icon\" /> Contacts\r\n      </button>\r\n    </header>\r\n\r\n    <div className=\"contact-summary\">\r\n      <div className=\"contact-photo\">\r\n        <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n      </div>\r\n      <h2>{name || \"Contact\"}</h2>\r\n    </div>\r\n\r\n    <div className=\"tab-bar\">\r\n      <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n        <FaCheckSquare className=\"icon\" /> Todo\r\n      </button>\r\n      <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n        <FaBell className=\"icon\" /> Reminder\r\n      </button>\r\n      <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n        <FaMoneyBillWave className=\"icon\" /> Finance\r\n      </button>\r\n    </div>\r\n\r\n    <div className=\"tab-content\">\r\n      \r\n      {activeTab === 'todo' && (\r\n        <div className=\"todo-content\">\r\n          <div className=\"sorting-filtering\">\r\n            <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n              <option value=\"\">Sort by</option>\r\n              <option value=\"date\">Due Date</option>\r\n              <option value=\"priority\">Priority</option>\r\n              <option value=\"status\">Status</option>\r\n            </select>\r\n\r\n            <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n              <option value=\"\">Filter by Priority</option>\r\n              <option value=\"High\">High</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"Low\">Low</option>\r\n            </select>\r\n\r\n            <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n              <option value=\"\">Filter by Status</option>\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"notCompleted\">Not Completed</option>\r\n            </select>\r\n\r\n            <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\r\n          </div>\r\n\r\n          <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n            <FaPlusCircle className=\"icon\" /> Add New Todo\r\n          </button>\r\n\r\n          {isTodoFormVisible && (\r\n            <div className=\"todo-form-overlay\">\r\n              <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  placeholder=\"New todo text\"\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\">Low</option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Save Todo</button>\r\n                <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"todo-list\">\r\n            {loading ? (\r\n              <p>Loading todos...</p>\r\n            ) : filteredAndSortedTodos.map(todo => (\r\n              <div key={todo._id} className=\"todo-item\">\r\n                <span>{todo.text}</span>\r\n                <span>{todo.priority}</span>\r\n                <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n                <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n                <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {selectedTodo && (\r\n            <div className=\"centered-container\">\r\n              <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleUpdateTodo(selectedTodo._id);\r\n              }} className=\"update-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\">Low</option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Update Todo</button>\r\n                <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'reminder' && (\r\n        <div className=\"reminder-content\">\r\n          <button className=\"add-reminder-button\" onClick={() => setReminderFormVisible(!isReminderFormVisible)}>\r\n            <FaPlusCircle className=\"icon\" /> Add New Reminder\r\n          </button>\r\n\r\n\r\n      <button onClick={toggleView} className=\"view-toggle-button\">\r\n        {isCalendarView ? 'Switch to List View' : 'Switch to Calendar View'}\r\n      </button>\r\n\r\n      {isCalendarView ? (\r\n        <div className=\"full-screen-calendar\">\r\n          <Calendar onClickDay={handleDayClick} />\r\n          <div className=\"reminders-on-date\">\r\n            <h3>Reminders</h3>\r\n            {selectedDateReminders.length > 0 ? (\r\n              selectedDateReminders.map(reminder => (\r\n                <div key={reminder._id} className=\"reminder-item\">\r\n                  <span>{reminder.text}</span>\r\n                  <span>{reminder.time}</span>\r\n                  <button onClick={() => handleDeleteReminder(reminder._id)}>Delete</button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No reminders for this date.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"reminder-list-view\">\r\n          <h3>Upcoming Reminders</h3>\r\n          {reminders.map(reminder => (\r\n            <div key={reminder._id} className=\"reminder-item\">\r\n              <span>{reminder.text}</span>\r\n              <span>{reminder.date} {reminder.time}</span>\r\n              <button onClick={() => handleDeleteReminder(reminder._id)}>Delete</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n        {isReminderFormVisible && (\r\n          <div className=\"reminder-form-overlay\">\r\n        <form onSubmit={handleAddReminder} className=\"reminder-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={newReminderText}\r\n            onChange={(e) => setNewReminderText(e.target.value)}\r\n            placeholder=\"Reminder text\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={newReminderDate}\r\n            onChange={(e) => setNewReminderDate(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            value={newReminderTime}\r\n            onChange={(e) => setNewReminderTime(e.target.value)}\r\n            required\r\n          />\r\n          <label>\r\n            Recurring\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isRecurring}\r\n              onChange={() => setIsRecurring(!isRecurring)}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Save Reminder</button>\r\n          <button type=\"button\" onClick={() => setReminderFormVisible(false)}>\r\n            Cancel\r\n          </button>\r\n        </form>\r\n        </div>\r\n      )}\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n{activeTab === 'finance' && (\r\n\r\n\r\n<div>\r\n      {/* Summary of Financial Status */}\r\n      <div className=\"finance-summary\">\r\n        <h2>Financial Summary</h2>\r\n        <p>Total Income: ₹{totalIncome.toFixed(2)}</p>\r\n        <p>Total Expense: ₹{totalExpense.toFixed(2)}</p>\r\n        <p>Net Total: ₹{netTotal.toFixed(2)}</p>\r\n      </div>\r\n\r\n      {/* Add New Transaction Button */}\r\n      <button onClick={() => setTransactionFormVisible(true)}>\r\n        Add New Transaction\r\n      </button>\r\n\r\n      {/* Transaction Form */}\r\n      {isTransactionFormVisible && (\r\n        <div className=\"transaction-form-overlay\">\r\n          <form onSubmit={(e) => { e.preventDefault(); handleSaveTransaction(); }} className=\"transaction-form\">\r\n            <input\r\n              type=\"date\"\r\n              value={newTransaction.date}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, date: e.target.value })}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              value={newTransaction.description}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, description: e.target.value })}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Amount\"\r\n              value={newTransaction.amount}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, amount: e.target.value })}\r\n              required\r\n            />\r\n            <select\r\n              value={newTransaction.category}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, category: e.target.value })}\r\n              required\r\n            >\r\n              <option value=\"\">Category</option>\r\n              <option value=\"loans\">Loans</option>\r\n              <option value=\"expenses\">Expenses</option>\r\n              <option value=\"payments\">Payments</option>\r\n            </select>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"income\"\r\n                checked={newTransaction.type === 'income'}\r\n                onChange={() => setNewTransaction({ ...newTransaction, type: 'income' })}\r\n              />\r\n              Income\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value=\"expense\"\r\n                checked={newTransaction.type === 'expense'}\r\n                onChange={() => setNewTransaction({ ...newTransaction, type: 'expense' })}\r\n              />\r\n              Expense\r\n            </label>\r\n            <button type=\"submit\">Save Transaction</button>\r\n            <button type=\"button\" onClick={() => setTransactionFormVisible(false)}>Cancel</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Transaction List\r\n      <div className=\"transaction-list\">\r\n        <h3>Transactions</h3>\r\n        {transactions.map((transaction, index) => (\r\n          <div key={index} className=\"transaction-item\">\r\n            <p>Date: {transaction.date}</p>\r\n            <p>Description: {transaction.description}</p>\r\n            <p\r\n              style={{ color: transaction.amount < 0 ? 'red' : 'green' }}\r\n            >\r\n              Amount: ₹{Math.abs(transaction.amount)}\r\n            </p>\r\n            <p>Category: {transaction.category}</p>\r\n            <button onClick={() => handleEditTransaction(index)}>Edit</button>\r\n            <button onClick={() => handleDeleteTransaction(index)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n\r\n<div className=\"transaction-list\">\r\n            <h3>Transactions</h3>\r\n            {transactions.map((transaction, index) => (\r\n              <div key={index} className=\"transaction-item\">\r\n                <p>Date: {transaction.date}</p>\r\n                <p>Description: {transaction.description}</p>\r\n                <p\r\n                  style={{ color: transaction.amount < 0 ? 'red' : 'green' }}\r\n                >\r\n                  Amount: ₹{Math.abs(transaction.amount)}\r\n                </p>\r\n                <p>Category: {transaction.category}</p>\r\n                <button onClick={() => handleEditTransaction(index)}>Edit</button>\r\n                <button onClick={() => handleDeleteTransaction(index)}>Delete</button>\r\n                {/* Button to open the edit modal */}\r\n                {isEditMode && selectedTransaction && (\r\n                  <div className=\"transaction-edit-form\">\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        handleSaveTransaction();\r\n                      }}\r\n                    >\r\n                      <input\r\n                        type=\"date\"\r\n                        value={selectedTransaction.date}\r\n                        onChange={(e) =>\r\n                          setSelectedTransaction({\r\n                            ...selectedTransaction,\r\n                            date: e.target.value,\r\n                          })\r\n                        }\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                        value={selectedTransaction.description}\r\n                        onChange={(e) =>\r\n                          setSelectedTransaction({\r\n                            ...selectedTransaction,\r\n                            description: e.target.value,\r\n                          })\r\n                        }\r\n                        required\r\n                      />\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Amount\"\r\n                        value={selectedTransaction.amount}\r\n                        onChange={(e) =>\r\n                          setSelectedTransaction({\r\n                            ...selectedTransaction,\r\n                            amount: e.target.value,\r\n                          })\r\n                        }\r\n                        required\r\n                      />\r\n                      <select\r\n                        value={selectedTransaction.category}\r\n                        onChange={(e) =>\r\n                          setSelectedTransaction({\r\n                            ...selectedTransaction,\r\n                            category: e.target.value,\r\n                          })\r\n                        }\r\n                        required\r\n                      >\r\n                        <option value=\"\">Category</option>\r\n                        <option value=\"loans\">Loans</option>\r\n                        <option value=\"expenses\">Expenses</option>\r\n                        <option value=\"payments\">Payments</option>\r\n                      </select>\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"income\"\r\n                          checked={selectedTransaction.type === 'income'}\r\n                          onChange={() =>\r\n                            setSelectedTransaction({\r\n                              ...selectedTransaction,\r\n                              type: 'income',\r\n                            })\r\n                          }\r\n                        />\r\n                        Income\r\n                      </label>\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          value=\"expense\"\r\n                          checked={selectedTransaction.type === 'expense'}\r\n                          onChange={() =>\r\n                            setSelectedTransaction({\r\n                              ...selectedTransaction,\r\n                              type: 'expense',\r\n                            })\r\n                          }\r\n                        />\r\n                        Expense\r\n                      </label>\r\n                      <button type=\"submit\">Save Changes</button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsEditMode(false)}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n )}\r\n\r\n      \r\n    </div>\r\n  </div>\r\n)};\r\n\r\n\r\nexport default IndividualContact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}