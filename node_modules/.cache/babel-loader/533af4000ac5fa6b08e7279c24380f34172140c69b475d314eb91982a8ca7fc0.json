{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n//src/IndividualContacts.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\nimport TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\nimport Contacts from './Contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name'); // Get the contact name from URL\n  const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n  const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n\n  const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\n\n  // Fetch todos for the contact when component mounts\n  // useEffect(() => {\n  //   const fetchTodos = async () => {\n  //     try {\n\n  //       const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\n  //       setTodos(response.data);\n  //     } catch (error) {\n  //       console.error('Error fetching todos:', error);\n  //     }\n  //   };\n\n  //   fetchTodos();\n  // }, [params.get('id')]); \n\n  // // Handle adding a new todo\n  // const addTodo = async (newTodoText) => {\n  //   try {\n  //     const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\n  //     const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n  //     setTodos([...todos, response.data]); // Add the new todo to the list\n  //   } catch (error) {\n  //     console.error('Error adding todo in contact:', error);\n  //   }\n  // };\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const contactId = params.get('contactId');\n        const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/todos`);\n        setTodos(response.data);\n      } catch (error) {\n        console.error('Error fetching todos:', error);\n      }\n    };\n    fetchTodos();\n  }, [params.get('contactId')]);\n  const addTodo = async newTodoText => {\n    try {\n      const contactId = params.get('contactId');\n      const newTodo = {\n        text: newTodoText,\n        completed: false,\n        contactId\n      };\n      const response = await axios.post(`http://localhost:5000/api/contacts/${contactId}/todos`, newTodo);\n      setTodos([...todos, response.data]);\n    } catch (error) {\n      console.error('Error adding todo in contact:', error);\n    }\n  };\n\n  // Handle toggling todo completion\n  const toggleTodo = async todoId => {\n    try {\n      const updatedTodo = todos.find(todo => todo._id === todoId);\n      updatedTodo.completed = !updatedTodo.completed;\n      const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\n      setTodos(todos.map(todo => todo._id === todoId ? response.data : todo));\n    } catch (error) {\n      console.error('Error toggling todo completion:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            onClick: () => {\n              const newTodoText = prompt('Enter new todo:');\n              if (newTodoText) addTodo(newTodoText);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), \" Add New Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No todos found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${todo.completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => toggleTodo(todo._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"xKWz6IClZxTznROeG7x8plW2p6A=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\n\n// // src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import { fetchTodos, addTodo } from './api';\n// import './styles.css';\n// import { FaCheckSquare, FaPlusCircle } from 'react-icons/fa';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const contactId = params.get('contactId');\n//   const name = params.get('name');\n//   const avatar = params.get('avatar');\n\n//   const [todos, setTodos] = useState([]);\n//   const [todoText, setTodoText] = useState('');\n//   const [todoPriority, setTodoPriority] = useState('Medium');\n//   const [todoDueDate, setTodoDueDate] = useState('');\n\n//   // Fetch todos for the contact when component mounts\n//   useEffect(() => {\n//     const loadTodos = async () => {\n//       try {\n//         const todosData = await fetchTodos(contactId);\n//         setTodos(todosData);\n//       } catch (error) {\n//         console.error('Error fetching todos from individual:', error);\n//       }\n//     };\n//     loadTodos();\n//   }, [contactId]);\n\n//   // Handle adding a new todo\n//   const handleAddTodo = async () => {\n//     if (!todoText.trim()) return;\n\n//     const newTodo = {\n//       text: todoText,\n//       priority: todoPriority,\n//       dueDate: todoDueDate,\n//     };\n\n//     try {\n//       const addedTodo = await addTodo(contactId, newTodo);\n//       setTodos([...todos, addedTodo]);  // Add to the list\n//       setTodoText('');                  // Clear the input fields\n//       setTodoPriority('Medium');\n//       setTodoDueDate('');\n//     } catch (error) {\n//       console.error('Error adding todo:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"todo-content\">\n//         <div className=\"todo-header\">\n//           <button className=\"add-button\" onClick={handleAddTodo}>\n//             <FaPlusCircle className=\"icon\" /> Add New Todo\n//           </button>\n//         </div>\n\n//         <div className=\"todo-input\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Todo text\"\n//             value={todoText}\n//             onChange={(e) => setTodoText(e.target.value)}\n//           />\n//           <input\n//             type=\"date\"\n//             value={todoDueDate}\n//             onChange={(e) => setTodoDueDate(e.target.value)}\n//           />\n//           <select\n//             value={todoPriority}\n//             onChange={(e) => setTodoPriority(e.target.value)}\n//           >\n//             <option value=\"High\">High</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"Low\">Low</option>\n//           </select>\n//         </div>\n\n//         <div className=\"todo-list\">\n//           {todos.length === 0 ? (\n//             <p>No todos found</p>\n//           ) : (\n//             todos.map(todo => (\n//               <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                 <span>{todo.text}</span> - <span>{todo.priority}</span>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","axios","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","TodoTab","Contacts","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","activeTab","setActiveTab","todos","setTodos","fetchTodos","contactId","response","data","error","console","addTodo","newTodoText","newTodo","text","completed","post","toggleTodo","todoId","updatedTodo","find","todo","_id","put","map","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","prompt","length","type","checked","onChange","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["//src/IndividualContacts.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\nimport TodoTab from './TodoTab'; // Assuming TodoTab is a separate component\r\nimport Contacts from './Contacts';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name'); // Get the contact name from URL\r\n  const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n  const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  \r\n\r\n  const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\r\n\r\n  // Fetch todos for the contact when component mounts\r\n  // useEffect(() => {\r\n  //   const fetchTodos = async () => {\r\n  //     try {\r\n       \r\n  //       const response = await axios.get(`http://localhost:5000/api/contacts/${params.get('contactId')}/todos`);\r\n  //       setTodos(response.data);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching todos:', error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchTodos();\r\n  // }, [params.get('id')]); \r\n\r\n  // // Handle adding a new todo\r\n  // const addTodo = async (newTodoText) => {\r\n  //   try {\r\n  //     const newTodo = { text: newTodoText, completed: false, contactId: params.get('id') };\r\n  //     const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n  //     setTodos([...todos, response.data]); // Add the new todo to the list\r\n  //   } catch (error) {\r\n  //     console.error('Error adding todo in contact:', error);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const contactId = params.get('contactId');\r\n        const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/todos`);\r\n        setTodos(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching todos:', error);\r\n      }\r\n    };\r\n    fetchTodos();\r\n  }, [params.get('contactId')]);\r\n  \r\n  const addTodo = async (newTodoText) => {\r\n    try {\r\n      const contactId = params.get('contactId');\r\n      const newTodo = { text: newTodoText, completed: false, contactId };\r\n      const response = await axios.post(`http://localhost:5000/api/contacts/${contactId}/todos`, newTodo);\r\n      setTodos([...todos, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding todo in contact:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle toggling todo completion\r\n  const toggleTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = todos.find(todo => todo._id === todoId);\r\n      updatedTodo.completed = !updatedTodo.completed;\r\n      const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\r\n      setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\r\n    } catch (error) {\r\n      console.error('Error toggling todo completion:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            <div className=\"todo-header\">\r\n              <button\r\n                className=\"add-button\"\r\n                onClick={() => {\r\n                  const newTodoText = prompt('Enter new todo:');\r\n                  if (newTodoText) addTodo(newTodoText);\r\n                }}\r\n              >\r\n                <FaPlusCircle className=\"icon\" /> Add New Todo\r\n              </button>\r\n            </div>\r\n            <div className=\"todo-list\">\r\n              {todos.length === 0 ? (\r\n                <p>No todos found</p>\r\n              ) : (\r\n                todos.map(todo => (\r\n                  <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => toggleTodo(todo._id)}\r\n                    />\r\n                    <span>{todo.text}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import { fetchTodos, addTodo } from './api';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaPlusCircle } from 'react-icons/fa';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const contactId = params.get('contactId');\r\n//   const name = params.get('name');\r\n//   const avatar = params.get('avatar');\r\n\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [todoText, setTodoText] = useState('');\r\n//   const [todoPriority, setTodoPriority] = useState('Medium');\r\n//   const [todoDueDate, setTodoDueDate] = useState('');\r\n\r\n//   // Fetch todos for the contact when component mounts\r\n//   useEffect(() => {\r\n//     const loadTodos = async () => {\r\n//       try {\r\n//         const todosData = await fetchTodos(contactId);\r\n//         setTodos(todosData);\r\n//       } catch (error) {\r\n//         console.error('Error fetching todos from individual:', error);\r\n//       }\r\n//     };\r\n//     loadTodos();\r\n//   }, [contactId]);\r\n\r\n \r\n\r\n//   // Handle adding a new todo\r\n//   const handleAddTodo = async () => {\r\n//     if (!todoText.trim()) return;\r\n\r\n//     const newTodo = {\r\n//       text: todoText,\r\n//       priority: todoPriority,\r\n//       dueDate: todoDueDate,\r\n//     };\r\n  \r\n//     try {\r\n//       const addedTodo = await addTodo(contactId, newTodo);\r\n//       setTodos([...todos, addedTodo]);  // Add to the list\r\n//       setTodoText('');                  // Clear the input fields\r\n//       setTodoPriority('Medium');\r\n//       setTodoDueDate('');\r\n//     } catch (error) {\r\n//       console.error('Error adding todo:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"todo-content\">\r\n//         <div className=\"todo-header\">\r\n//           <button className=\"add-button\" onClick={handleAddTodo}>\r\n//             <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//           </button>\r\n//         </div>\r\n        \r\n//         <div className=\"todo-input\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Todo text\"\r\n//             value={todoText}\r\n//             onChange={(e) => setTodoText(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"date\"\r\n//             value={todoDueDate}\r\n//             onChange={(e) => setTodoDueDate(e.target.value)}\r\n//           />\r\n//           <select\r\n//             value={todoPriority}\r\n//             onChange={(e) => setTodoPriority(e.target.value)}\r\n//           >\r\n//             <option value=\"High\">High</option>\r\n//             <option value=\"Medium\">Medium</option>\r\n//             <option value=\"Low\">Low</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"todo-list\">\r\n//           {todos.length === 0 ? (\r\n//             <p>No todos found</p>\r\n//           ) : (\r\n//             todos.map(todo => (\r\n//               <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                 <span>{todo.text}</span> - <span>{todo.priority}</span>\r\n//               </div>\r\n//             ))\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}