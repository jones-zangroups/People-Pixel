{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// // src/IndividualContact.js\n// import React, { useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         {/* <button className=\"back-button\">← Contacts</button> */}\n//         <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\n\n//         {/* <h1 className=\"title\">Contact</h1> */}\n//       </header>\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {todos.map((todo, index) => (\n//               <div key={index} className=\"list-item\">\n//                 <span>{todo.text}</span>\n//                 <FaCheckSquare className=\"status-icon\" />\n//               </div>\n//             ))}\n//             <button className=\"add-button\">+ Add New Todo</button>\n//           </div>\n//         )}\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const contactId = params.get('id'); // Contact ID for API calls\n\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [newTodoText, setNewTodoText] = useState('');\n\n  // Fetch todos on component mount\n  useEffect(() => {\n    fetch(`/api/contacts/${contactId}`).then(response => response.json()).then(data => setTodos(data.todos || [])).catch(error => console.error('Error fetching todos:', error));\n  }, [contactId]);\n\n  // Add a new todo\n  const addTodo = () => {\n    fetch(`/api/contacts/${contactId}/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: newTodoText,\n        completed: false\n      })\n    }).then(response => response.json()).then(updatedTodos => {\n      setTodos(updatedTodos);\n      setNewTodoText('');\n    }).catch(error => console.error('Error adding todo:', error));\n  };\n\n  // Mark todo as complete/incomplete\n  const toggleComplete = (todoId, completed) => {\n    fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !completed\n      })\n    }).then(response => response.json()).then(updatedTodo => {\n      setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    }).catch(error => console.error('Error updating todo:', error));\n  };\n\n  // Delete a todo\n  const deleteTodo = todoId => {\n    fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(updatedTodos => setTodos(updatedTodos)).catch(error => console.error('Error deleting todo:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('todo'),\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('reminder'),\n        children: \"Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab('finance'),\n        children: \"Finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => toggleComplete(todo._id, todo.completed),\n            style: {\n              textDecoration: todo.completed ? 'line-through' : 'none'\n            },\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(todo._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newTodoText,\n          onChange: e => setNewTodoText(e.target.value),\n          placeholder: \"Add new todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"myNCcS+xuV5Uma1mq4i+6DR99wE=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","FaCheckSquare","FaBell","FaMoneyBillWave","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","contactId","get","activeTab","setActiveTab","todos","setTodos","newTodoText","setNewTodoText","fetch","then","response","json","data","catch","error","console","addTodo","method","headers","body","JSON","stringify","text","completed","updatedTodos","toggleComplete","todoId","updatedTodo","map","todo","_id","deleteTodo","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n// // src/IndividualContact.js\r\n// import React, { useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n//   const [todos, setTodos] = useState([{ text: \"Complete Today's Task\" }, { text: \"Schedule meeting\" }]); // Sample todo data\r\n//   const [reminders, setReminders] = useState([]); // Sample reminder data\r\n//   const [transactions, setTransactions] = useState([]); // Sample transaction data\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         {/* <button className=\"back-button\">← Contacts</button> */}\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\r\n\r\n//         {/* <h1 className=\"title\">Contact</h1> */}\r\n//       </header>\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {todos.map((todo, index) => (\r\n//               <div key={index} className=\"list-item\">\r\n//                 <span>{todo.text}</span>\r\n//                 <FaCheckSquare className=\"status-icon\" />\r\n//               </div>\r\n//             ))}\r\n//             <button className=\"add-button\">+ Add New Todo</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const contactId = params.get('id'); // Contact ID for API calls\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n\r\n  // Fetch todos on component mount\r\n  useEffect(() => {\r\n    fetch(`/api/contacts/${contactId}`)\r\n      .then(response => response.json())\r\n      .then(data => setTodos(data.todos || []))\r\n      .catch(error => console.error('Error fetching todos:', error));\r\n  }, [contactId]);\r\n\r\n  // Add a new todo\r\n  const addTodo = () => {\r\n    fetch(`/api/contacts/${contactId}/todos`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ text: newTodoText, completed: false })\r\n    })\r\n    .then(response => response.json())\r\n    .then(updatedTodos => {\r\n      setTodos(updatedTodos);\r\n      setNewTodoText('');\r\n    })\r\n    .catch(error => console.error('Error adding todo:', error));\r\n  };\r\n\r\n  // Mark todo as complete/incomplete\r\n  const toggleComplete = (todoId, completed) => {\r\n    fetch(`/api/contacts/${contactId}/todos/${todoId}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ completed: !completed })\r\n    })\r\n    .then(response => response.json())\r\n    .then(updatedTodo => {\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n    })\r\n    .catch(error => console.error('Error updating todo:', error));\r\n  };\r\n\r\n  // Delete a todo\r\n  const deleteTodo = (todoId) => {\r\n    fetch(`/api/contacts/${contactId}/todos/${todoId}`, { method: 'DELETE' })\r\n      .then(response => response.json())\r\n      .then(updatedTodos => setTodos(updatedTodos))\r\n      .catch(error => console.error('Error deleting todo:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>← Contacts</button>\r\n      </header>\r\n      <div className=\"tab-bar\">\r\n        <button onClick={() => setActiveTab('todo')}>Todo</button>\r\n        <button onClick={() => setActiveTab('reminder')}>Reminder</button>\r\n        <button onClick={() => setActiveTab('finance')}>Finance</button>\r\n      </div>\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {todos.map(todo => (\r\n              <div key={todo._id} className=\"list-item\">\r\n                <span\r\n                  onClick={() => toggleComplete(todo._id, todo.completed)}\r\n                  style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\r\n                >\r\n                  {todo.text}\r\n                </span>\r\n                <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n              </div>\r\n            ))}\r\n            <input\r\n              value={newTodoText}\r\n              onChange={(e) => setNewTodoText(e.target.value)}\r\n              placeholder=\"Add new todo\"\r\n            />\r\n            <button onClick={addTodo}>Add Todo</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}