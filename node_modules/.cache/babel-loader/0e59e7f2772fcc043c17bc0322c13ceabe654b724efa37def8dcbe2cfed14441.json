{"ast":null,"code":"//src/api.js\nconst API_URL = 'http://localhost:5000/api';\nexport const fetchContacts = async category => {\n  try {\n    const response = await fetch(`${API_URL}/contacts/${category}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch contacts');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const addContact = async contactData => {\n  try {\n    const response = await fetch(`${API_URL}/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(contactData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add contact');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const fetchTodos = async contactId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/contacts/${contactId}/todos`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw error;\n  }\n};\nexport const addTodo = async (contactId, newTodoText) => {\n  try {\n    const newTodo = {\n      text: newTodoText,\n      completed: false\n    };\n    const response = await axios.post(`${API_BASE_URL}/contacts/${contactId}/todos`, newTodo);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding todo:', error);\n    throw error;\n  }\n};\nexport const toggleTodo = async (contactId, todoId, isCompleted) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/contacts/${contactId}/todos/${todoId}`, {\n      completed: isCompleted\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error toggling todo completion:', error);\n    throw error;\n  }\n};\n\n// // src/api.js\n// import axios from 'axios';\n\n// export const getContact = async (id) => {\n//   const response = await axios.get(`/api/contacts/${id}`);\n//   return response.data;\n// };\n\n// export const updateContact = async (id, contactData) => {\n//   await axios.put(`/api/contacts/${id}`, contactData);\n// };\n\n// export const deleteContact = async (id) => {\n//   await axios.delete(`/api/contacts/${id}`);\n// };","map":{"version":3,"names":["API_URL","fetchContacts","category","response","fetch","ok","Error","json","error","console","addContact","contactData","method","headers","body","JSON","stringify","fetchTodos","contactId","axios","get","API_BASE_URL","data","addTodo","newTodoText","newTodo","text","completed","post","toggleTodo","todoId","isCompleted","put"],"sources":["D:/PeoplePixel1/src/api.js"],"sourcesContent":["//src/api.js\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchContacts = async (category) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts/${category}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch contacts');\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async (contactData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(contactData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to add contact');\r\n    }\r\n    \r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const fetchTodos = async (contactId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/contacts/${contactId}/todos`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching todos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addTodo = async (contactId, newTodoText) => {\r\n  try {\r\n    const newTodo = { text: newTodoText, completed: false };\r\n    const response = await axios.post(`${API_BASE_URL}/contacts/${contactId}/todos`, newTodo);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const toggleTodo = async (contactId, todoId, isCompleted) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/contacts/${contactId}/todos/${todoId}`, { completed: isCompleted });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error toggling todo completion:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// // src/api.js\r\n// import axios from 'axios';\r\n\r\n// export const getContact = async (id) => {\r\n//   const response = await axios.get(`/api/contacts/${id}`);\r\n//   return response.data;\r\n// };\r\n\r\n// export const updateContact = async (id, contactData) => {\r\n//   await axios.put(`/api/contacts/${id}`, contactData);\r\n// };\r\n\r\n// export const deleteContact = async (id) => {\r\n//   await axios.delete(`/api/contacts/${id}`);\r\n// };\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,aAAaE,QAAQ,EAAE,CAAC;IAC/D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC/C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,WAAW,EAAE;MAClDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC;AAID,OAAO,MAAMS,UAAU,GAAG,MAAOC,SAAS,IAAK;EAC7C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMgB,KAAK,CAACC,GAAG,CAAC,GAAGC,YAAY,aAAaH,SAAS,QAAQ,CAAC;IAC/E,OAAOf,QAAQ,CAACmB,IAAI;EACtB,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMe,OAAO,GAAG,MAAAA,CAAOL,SAAS,EAAEM,WAAW,KAAK;EACvD,IAAI;IACF,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAEF,WAAW;MAAEG,SAAS,EAAE;IAAM,CAAC;IACvD,MAAMxB,QAAQ,GAAG,MAAMgB,KAAK,CAACS,IAAI,CAAC,GAAGP,YAAY,aAAaH,SAAS,QAAQ,EAAEO,OAAO,CAAC;IACzF,OAAOtB,QAAQ,CAACmB,IAAI;EACtB,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMqB,UAAU,GAAG,MAAAA,CAAOX,SAAS,EAAEY,MAAM,EAAEC,WAAW,KAAK;EAClE,IAAI;IACF,MAAM5B,QAAQ,GAAG,MAAMgB,KAAK,CAACa,GAAG,CAAC,GAAGX,YAAY,aAAaH,SAAS,UAAUY,MAAM,EAAE,EAAE;MAAEH,SAAS,EAAEI;IAAY,CAAC,CAAC;IACrH,OAAO5B,QAAQ,CAACmB,IAAI;EACtB,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}