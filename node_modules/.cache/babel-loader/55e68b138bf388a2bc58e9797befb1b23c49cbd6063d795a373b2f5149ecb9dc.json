{"ast":null,"code":"// // src/Contacts.js\n// import React from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// const sampleContacts = {\n//   Family: [\n//     { name: 'Alice', avatar: 'A' },\n//     { name: 'Bob', avatar: 'B' },\n//     { name: 'Charlie', avatar: 'C' },\n//     { name: 'David', avatar: 'D' },\n//   ],\n//   Friends: [\n//     { name: 'Charlie', avatar: 'C' },\n//     { name: 'David', avatar: 'D' },\n//   ],\n//   Others: [\n//     { name: 'Eve', avatar: 'E' },\n//     { name: 'Frank', avatar: 'F' },\n//   ],\n// };\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const contacts = sampleContacts[category] || [];\n//   return (\n//     <>\n//       <header className=\"header\">\n//         <div className=\"logo\">PeoplePixel</div>\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\n//         <div className=\"profile-icon\">\n//           <i className=\"bi bi-person-circle\"></i>\n//         </div>\n//       </header>\n//       <h2>  <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button></h2>\n//       <h3><button className=\"add-contact\" >Add Contact</button></h3>\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//       <footer>\n//         <div className=\"footer-links\">\n//           <a href=\"#\">About</a>\n//           <a href=\"#\">Help</a>\n//           <a href=\"#\">Privacy Policy</a>\n//         </div>\n//         <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\n//       </footer>\n//     </>\n//   );\n// }\n// export default Contacts;\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n//     fetchContacts();\n//   }, []);\n//   return (\n//     <>\n//       {/* ... your existing code ... */}\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//       {/* ... your existing code ... */}\n//     </>\n//   );\n// }\n// export default Contacts;\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles.css';\n// function Contacts() {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n//   const [contacts, setContacts] = useState([]);\n//   const [newContactName, setNewContactName] = useState('');\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\n//   const [showForm, setShowForm] = useState(false);\n//   useEffect(() => {\n//     const fetchContacts = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/contacts');\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n//     fetchContacts();\n//   }, []);\n//   const handleAddContact = async () => {\n//     try {\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\n//       setContacts([...contacts, response.data]); // Update contacts state\n//       setNewContactName('');\n//       setNewContactAvatar('');\n//       setShowForm(false); // Hide the form after submission\n//     } catch (error) {\n//       console.error('Error adding contact:', error);\n//     }\n//   };\n//   return (\n//     <>\n//       <button onClick={() => setShowForm(!showForm)}>\n//         {showForm ? 'Cancel' : 'Create New Contact'}\n//       </button>\n//       {showForm && (\n//         <div className=\"new-contact-form\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Contact Name\"\n//             value={newContactName}\n//             onChange={(e) => setNewContactName(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Avatar URL\"\n//             value={newContactAvatar}\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\n//           />\n//           <button onClick={handleAddContact}>Save Contact</button>\n//         </div>\n//       )}\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n// export default Contacts;\n// \n// src/Contacts.js\nimport React,{useState,useEffect}from'react';import{useLocation,Link}from'react-router-dom';import'./styles.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Contacts=()=>{const location=useLocation();const params=new URLSearchParams(location.search);const category=params.get('category');const[isModalOpen,setIsModalOpen]=useState(false);const[newContact,setNewContact]=useState({name:'',avatar:'',email:'',contact:''});const[contacts,setContacts]=useState([]);// Fetch initial contacts\nuseEffect(()=>{// Replace with API call if fetching from server\nsetContacts(sampleContacts[category]||[]);},[category]);const handleInputChange=e=>{const{name,value}=e.target;setNewContact({...newContact,[name]:value});};const handleAddContact=()=>{if(!newContact.name||!newContact.avatar){alert('Please fill in the required fields.');return;}// Replace with your backend endpoint\naxios.post('http://localhost:5000/api/contacts',newContact).then(response=>{console.log('Contact added:',response.data);// Update the UI by adding the new contact to the current list\nsetContacts([...contacts,newContact]);setIsModalOpen(false);}).catch(error=>{console.error('There was an error adding the contact!',error);});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:\"PeoplePixel\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",className:\"search-bar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-person-circle\"})})]}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>window.history.back(),children:\"\\u2190 Contacts\"})}),/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"add-contact\",onClick:()=>{setIsModalOpen(true);console.log('Add Contact button clicked');// Debugging line\n},children:\"Add Contact\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:contacts.length>0?contacts.map((contact,index)=>/*#__PURE__*/_jsxs(Link,{className:\"card\",to:`/contact?name=${contact.name}&avatar=${contact.avatar}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"avatar\",children:contact.avatar}),/*#__PURE__*/_jsx(\"p\",{className:\"name\",children:contact.name})]},index)):/*#__PURE__*/_jsx(\"p\",{className:\"no-contacts\",children:\"No contacts found for this category.\"})}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Contact\"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:newContact.name,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Avatar:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"avatar\",value:newContact.avatar,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:newContact.email,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{children:\"Contact:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"contact\",value:newContact.contact,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddContact,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsModalOpen(false);console.log('Modal closed');// Debugging line\n},children:\"Cancel\"})]})}),/*#__PURE__*/_jsxs(\"footer\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"footer-links\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"About\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"Help\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"Privacy Policy\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"copyright\",children:\"\\xA9 2024 PeoplePixel. All rights reserved.\"})]})]});};export default Contacts;","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Contacts","location","params","URLSearchParams","search","category","get","isModalOpen","setIsModalOpen","newContact","setNewContact","name","avatar","email","contact","contacts","setContacts","sampleContacts","handleInputChange","e","value","target","handleAddContact","alert","post","then","response","console","log","data","catch","error","children","className","type","placeholder","onClick","window","history","back","length","map","index","to","onChange","required","href"],"sources":["D:/PeoplePixel1/src/Contacts.js"],"sourcesContent":["\r\n// // src/Contacts.js\r\n// import React from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n\r\n// const sampleContacts = {\r\n//   Family: [\r\n//     { name: 'Alice', avatar: 'A' },\r\n//     { name: 'Bob', avatar: 'B' },\r\n//     { name: 'Charlie', avatar: 'C' },\r\n//     { name: 'David', avatar: 'D' },\r\n//   ],\r\n//   Friends: [\r\n//     { name: 'Charlie', avatar: 'C' },\r\n//     { name: 'David', avatar: 'D' },\r\n//   ],\r\n//   Others: [\r\n//     { name: 'Eve', avatar: 'E' },\r\n//     { name: 'Frank', avatar: 'F' },\r\n//   ],\r\n// };\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n\r\n//   const contacts = sampleContacts[category] || [];\r\n\r\n//   return (\r\n//     <>\r\n//       <header className=\"header\">\r\n//         <div className=\"logo\">PeoplePixel</div>\r\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n//         <div className=\"profile-icon\">\r\n//           <i className=\"bi bi-person-circle\"></i>\r\n//         </div>\r\n//       </header>\r\n//       <h2>  <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button></h2>\r\n//       <h3><button className=\"add-contact\" >Add Contact</button></h3>\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//       <footer>\r\n//         <div className=\"footer-links\">\r\n//           <a href=\"#\">About</a>\r\n//           <a href=\"#\">Help</a>\r\n//           <a href=\"#\">Privacy Policy</a>\r\n//         </div>\r\n//         <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\r\n//       </footer>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       {/* ... your existing code ... */}\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//       {/* ... your existing code ... */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './styles.css';\r\n\r\n// function Contacts() {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [newContactName, setNewContactName] = useState('');\r\n//   const [newContactAvatar, setNewContactAvatar] = useState('');\r\n//   const [showForm, setShowForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchContacts = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/contacts');\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchContacts();\r\n//   }, []);\r\n\r\n//   const handleAddContact = async () => {\r\n//     try {\r\n//       const newContact = { name: newContactName, avatar: newContactAvatar };\r\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\r\n//       setContacts([...contacts, response.data]); // Update contacts state\r\n//       setNewContactName('');\r\n//       setNewContactAvatar('');\r\n//       setShowForm(false); // Hide the form after submission\r\n//     } catch (error) {\r\n//       console.error('Error adding contact:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={() => setShowForm(!showForm)}>\r\n//         {showForm ? 'Cancel' : 'Create New Contact'}\r\n//       </button>\r\n\r\n//       {showForm && (\r\n//         <div className=\"new-contact-form\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Contact Name\"\r\n//             value={newContactName}\r\n//             onChange={(e) => setNewContactName(e.target.value)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Avatar URL\"\r\n//             value={newContactAvatar}\r\n//             onChange={(e) => setNewContactAvatar(e.target.value)}\r\n//           />\r\n//           <button onClick={handleAddContact}>Save Contact</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p className=\"no-contacts\">No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/Contacts.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\n\r\nconst Contacts = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const category = params.get('category');\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newContact, setNewContact] = useState({\r\n    name: '',\r\n    avatar: '',\r\n    email: '',\r\n    contact: ''\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  // Fetch initial contacts\r\n  useEffect(() => {\r\n    // Replace with API call if fetching from server\r\n    setContacts(sampleContacts[category] || []);\r\n  }, [category]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewContact({ ...newContact, [name]: value });\r\n  };\r\n\r\n  const handleAddContact = () => {\r\n    if (!newContact.name || !newContact.avatar) {\r\n      alert('Please fill in the required fields.');\r\n      return;\r\n    }\r\n\r\n    // Replace with your backend endpoint\r\n    axios.post('http://localhost:5000/api/contacts', newContact)\r\n      .then(response => {\r\n        console.log('Contact added:', response.data);\r\n        // Update the UI by adding the new contact to the current list\r\n        setContacts([...contacts, newContact]);\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error adding the contact!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"logo\">PeoplePixel</div>\r\n        <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n        <div className=\"profile-icon\">\r\n          <i className=\"bi bi-person-circle\"></i>\r\n        </div>\r\n      </header>\r\n      <h2>\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n      </h2>\r\n      <h3>\r\n        <button className=\"add-contact\" onClick={() => {\r\n          setIsModalOpen(true);\r\n          console.log('Add Contact button clicked'); // Debugging line\r\n        }}>\r\n          Add Contact\r\n        </button>\r\n      </h3>\r\n      <div className=\"container\">\r\n        {contacts.length > 0 ? (\r\n          contacts.map((contact, index) => (\r\n            <Link\r\n              key={index}\r\n              className=\"card\"\r\n              to={`/contact?name=${contact.name}&avatar=${contact.avatar}`}\r\n            >\r\n              <div className=\"avatar\">{contact.avatar}</div>\r\n              <p className=\"name\">{contact.name}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p className=\"no-contacts\">No contacts found for this category.</p>\r\n        )}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Add New Contact</h2>\r\n            <form>\r\n              <label>Name:</label>\r\n              <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\r\n              <label>Avatar:</label>\r\n              <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} required />\r\n              <label>Email:</label>\r\n              <input type=\"email\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\r\n              <label>Contact:</label>\r\n              <input type=\"text\" name=\"contact\" value={newContact.contact} onChange={handleInputChange} />\r\n            </form>\r\n            <button onClick={handleAddContact}>Save</button>\r\n            <button onClick={() => {\r\n              setIsModalOpen(false);\r\n              console.log('Modal closed'); // Debugging line\r\n            }}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <footer>\r\n        <div className=\"footer-links\">\r\n          <a href=\"#\">About</a>\r\n          <a href=\"#\">Help</a>\r\n          <a href=\"#\">Privacy Policy</a>\r\n        </div>\r\n        <p className=\"copyright\">&copy; 2024 PeoplePixel. All rights reserved.</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}