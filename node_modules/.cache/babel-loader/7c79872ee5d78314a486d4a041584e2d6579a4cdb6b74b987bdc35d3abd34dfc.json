{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo } from './api';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name');\n//   const avatar = params.get('avatar');\n//   const contactId = params.get('contactId');\n\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [newTodoText, setNewTodoText] = useState('');\n//   const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n//   const [newTodoDueDate, setNewTodoDueDate] = useState('');\n//   const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n//   const [selectedTodo, setSelectedTodo] = useState(null);\n//   const [sortOption, setSortOption] = useState(\"\");\n// const [filterPriority, setFilterPriority] = useState(\"\");\n// const [filterStatus, setFilterStatus] = useState(\"\");\n\n//   useEffect(() => {\n//     const loadTodos = async () => {\n//       try {\n//         setLoading(true);\n//         const todoData = await fetchTodos(contactId);\n//         setTodos(todoData);\n//       } catch (err) {\n//         setError('Failed to load todos: ' + err.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     loadTodos();\n//   }, [contactId]);\n\n//   const handleAddTodo = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const newTodo = {\n//         text: newTodoText,\n//         priority: newTodoPriority,\n//         dueDate: newTodoDueDate\n//       };\n//       const response = await addTodo(contactId, newTodo);\n//       setTodos([...todos, response]);\n//       setNewTodoText('');\n//       setNewTodoPriority('Medium');\n//       setNewTodoDueDate('');\n//       setTodoFormVisible(false);\n//     } catch (err) {\n//       setError('Failed to add todo: ' + err.message);\n//     }\n//   };\n\n//   const filteredAndSortedTodos = todos\n//   .filter(todo => {\n//     if (filterPriority && todo.priority !== filterPriority) return false;\n//     if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\n//     return true;\n//   })\n//   .sort((a, b) => {\n//     if (sortOption === \"date\") {\n//       return new Date(a.dueDate) - new Date(b.dueDate);\n//     } else if (sortOption === \"priority\") {\n//       const priorities = { High: 1, Medium: 2, Low: 3 };\n//       return priorities[a.priority] - priorities[b.priority];\n//     } else if (sortOption === \"status\") {\n//       return (a.completed === b.completed) ? 0 : a.completed ? -1 : 1;\n//     }\n//     return 0;\n//   });\n\n//   const handleUpdateTodo = async (todoId) => {\n//     try {\n//       const updatedTodo = await updateTodo(todoId, {\n//         text: newTodoText,\n//         priority: newTodoPriority,\n//         dueDate: newTodoDueDate\n//       });\n//       setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\n//       setSelectedTodo(null); // Close the update form\n//     } catch (err) {\n//       setError('Failed to update todo: ' + err.message);\n//     }\n//   };\n\n//   const handleDeleteTodo = async (todoId) => {\n//     const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\n//     if (confirmDelete) {\n//       try {\n//         await deleteTodo(todoId);\n//         setTodos(todos.filter(todo => todo._id !== todoId));\n//       } catch (err) {\n//         setError('Failed to delete todo: ' + err.message);\n//       }\n//     }\n//   };\n\n//   const handleToggleTodo = async (todoId, completed) => {\n//         try {\n//           const updatedTodo = await toggleTodo(todoId, !completed);\n//           setTodos(prevTodos =>\n//             prevTodos.map(todo =>\n//               todo._id === todoId ? updatedTodo : todo\n//             )\n//           );\n//         } catch (err) {\n//           setError('Failed to update todo: ' + err.message);\n//         }\n//       };\n\n//   const showUpdateForm = (todo) => {\n//     setSelectedTodo(todo);\n//     setNewTodoText(todo.text);\n//     setNewTodoPriority(todo.priority);\n//     setNewTodoDueDate(todo.dueDate.split('T')[0]);\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//          <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\n//            <FaCheckSquare className=\"icon\" /> Todo\n//          </button>\n//          <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\n//            <FaBell className=\"icon\" /> Reminder\n//          </button>\n//          <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\n//            <FaMoneyBillWave className=\"icon\" /> Finance\n//          </button>\n//        </div>\n\n//       <div className=\"tab-content\">\n//       <div className=\"sorting-filtering\">\n//   <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\n//     <option value=\"\">Sort by</option>\n//     <option value=\"date\">Due Date</option>\n//     <option value=\"priority\">Priority</option>\n//     <option value=\"status\">Status</option>\n//   </select>\n\n//   <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\n//     <option value=\"\">Filter by Priority</option>\n//     <option value=\"High\">High</option>\n//     <option value=\"Medium\">Medium</option>\n//     <option value=\"Low\">Low</option>\n//   </select>\n\n//   <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\n//     <option value=\"\">Filter by Status</option>\n//     <option value=\"completed\">Completed</option>\n//     <option value=\"notCompleted\">Not Completed</option>\n//   </select>\n// </div>\n\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {error && <div className=\"error-message\">{error}</div>}\n\n//             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\n//               <FaPlusCircle className=\"icon\" /> Add New Todo\n//             </button>\n\n//             {isTodoFormVisible && (\n//               <div className=\"todo-form-overlay\">\n//               <form onSubmit={handleAddTodo} className=\"todo-form\">\n//                 <input\n//                   type=\"text\"\n//                   value={newTodoText}\n//                   onChange={(e) => setNewTodoText(e.target.value)}\n//                   placeholder=\"New todo text\"\n//                   required\n//                 />\n//                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\n//                   <option value=\"High\"> High </option>\n//                   <option value=\"Medium\">Medium</option>\n//                   <option value=\"Low\"> Low  </option>\n//                 </select>\n//                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\n//                 <button type=\"submit\">Save Todo</button>\n//                 <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\n//               </form>\n//               </div>\n//             )}\n\n//             <div className=\"todo-list\">\n//               {loading ? (\n//                 <p>Loading todos...</p>\n//               ) : todos.map(todo => (\n//                 <div key={todo._id} className=\"todo-item\">\n//                   <span>{todo.text}</span>\n//                   <span>{todo.priority}</span>\n//                   <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\n//                   <button onClick={() => showUpdateForm(todo)}>Update</button>\n//                   <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n//                   <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => handleToggleTodo(todo._id, todo.completed)}\n//                     />\n//                 </div>\n//               ))}\n//             </div>\n\n//             {selectedTodo && (\n//               <div className=\"centered-container\">\n//               <form onSubmit={(e) => {\n//                 e.preventDefault();\n//                 handleUpdateTodo(selectedTodo._id);\n//               }} className=\"update-form\">\n//                 <input\n//                   type=\"text\"\n//                   value={newTodoText}\n//                   onChange={(e) => setNewTodoText(e.target.value)}\n//                   required\n//                 />\n//                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\n//                   <option value=\"High\"> High </option>\n//                   <option value=\"Medium\">Medium</option>\n//                   <option value=\"Low\"> Low  </option>\n//                 </select>\n//                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\n//                 <button type=\"submit\">Update Todo</button>\n//                 <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\n//               </form>\n//               </div>\n//             )}\n//           </div>\n//         )}\n\n//       </div>\n//       {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n//src/IndividualContact.js\n//src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [sortOption, setSortOption] = useState(\"\");\n  const [filterPriority, setFilterPriority] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState(\"\");\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    try {\n      const newTodo = {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      };\n      const response = await addTodo(contactId, newTodo);\n      setTodos([...todos, response]);\n      setNewTodoText('');\n      setNewTodoPriority('Medium');\n      setNewTodoDueDate('');\n      setTodoFormVisible(false);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n    }\n  };\n  const filteredAndSortedTodos = todos.filter(todo => {\n    if (filterPriority && todo.priority !== filterPriority) return false;\n    if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\n    return true;\n  }).sort((a, b) => {\n    if (sortOption === \"date\") {\n      return new Date(a.dueDate) - new Date(b.dueDate);\n    } else if (sortOption === \"priority\") {\n      const priorities = {\n        High: 1,\n        Medium: 2,\n        Low: 3\n      };\n      return priorities[a.priority] - priorities[b.priority];\n    } else if (sortOption === \"status\") {\n      return a.completed === b.completed ? 0 : a.completed ? -1 : 1;\n    }\n    return 0;\n  });\n  const handleUpdateTodo = async todoId => {\n    try {\n      const updatedTodo = await updateTodo(todoId, {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      });\n      setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n      setSelectedTodo(null); // Close the update form\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const handleDeleteTodo = async todoId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\n    if (confirmDelete) {\n      try {\n        await deleteTodo(todoId);\n        setTodos(todos.filter(todo => todo._id !== todoId));\n      } catch (err) {\n        setError('Failed to delete todo: ' + err.message);\n      }\n    }\n  };\n  {\n    selectedTodo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleUpdateTodo(selectedTodo._id);\n        },\n        className: \"update-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTodoText,\n          onChange: e => setNewTodoText(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTodoPriority,\n          onChange: e => setNewTodoPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \" High \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \" Low  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newTodoDueDate,\n          onChange: e => setNewTodoDueDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setSelectedTodo(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 19\n    }, this);\n  }\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const showUpdateForm = todo => {\n    setSelectedTodo(todo);\n    setNewTodoText(todo.text);\n    setNewTodoPriority(todo.priority);\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\n  };\n  const resetFilters = () => {\n    setFilterPriority('');\n    setFilterStatus('');\n    setSortOption('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 79\n        }, this), \" Contacts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sorting-filtering\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortOption,\n          onChange: e => setSortOption(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Sort by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"status\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterPriority,\n          onChange: e => setFilterPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Filter by Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterStatus,\n          onChange: e => setFilterStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Filter by Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"notCompleted\",\n            children: \"Not Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetFilters,\n          className: \"cancel-filters-button\",\n          children: \"Cancel Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-todo-button\",\n          onClick: () => setTodoFormVisible(true),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), \" Add New Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), isTodoFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddTodo,\n            className: \"todo-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTodoText,\n              onChange: e => setNewTodoText(e.target.value),\n              placeholder: \"New todo text\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTodoPriority,\n              onChange: e => setNewTodoPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \" High \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \" Low  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTodoDueDate,\n              onChange: e => setNewTodoDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setTodoFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading todos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this) : filteredAndSortedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(todo.dueDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => showUpdateForm(todo),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTodo(todo._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToggleTodo(todo._id, todo.completed),\n              children: todo.completed ? \"Undo\" : \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"Oou41wy8D4qwudQ/UZ1bW2ySh9c=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","updateTodo","deleteTodo","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","FaChevronLeft","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","newTodoText","setNewTodoText","newTodoPriority","setNewTodoPriority","newTodoDueDate","setNewTodoDueDate","isTodoFormVisible","setTodoFormVisible","selectedTodo","setSelectedTodo","sortOption","setSortOption","filterPriority","setFilterPriority","filterStatus","setFilterStatus","loadTodos","todoData","err","message","handleAddTodo","e","preventDefault","newTodo","text","priority","dueDate","response","filteredAndSortedTodos","filter","todo","completed","sort","a","b","Date","priorities","High","Medium","Low","handleUpdateTodo","todoId","updatedTodo","map","_id","handleDeleteTodo","confirmDelete","window","confirm","className","children","onSubmit","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleToggleTodo","prevTodos","showUpdateForm","split","resetFilters","history","back","src","alt","placeholder","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n// //src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo } from './api';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name');\r\n//   const avatar = params.get('avatar');\r\n//   const contactId = params.get('contactId');\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [newTodoText, setNewTodoText] = useState('');\r\n//   const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n//   const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n//   const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n//   const [selectedTodo, setSelectedTodo] = useState(null);\r\n//   const [sortOption, setSortOption] = useState(\"\");\r\n// const [filterPriority, setFilterPriority] = useState(\"\");\r\n// const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n\r\n//   useEffect(() => {\r\n//     const loadTodos = async () => {\r\n//       try {\r\n//         setLoading(true);\r\n//         const todoData = await fetchTodos(contactId);\r\n//         setTodos(todoData);\r\n//       } catch (err) {\r\n//         setError('Failed to load todos: ' + err.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     loadTodos();\r\n//   }, [contactId]);\r\n\r\n//   const handleAddTodo = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const newTodo = {\r\n//         text: newTodoText,\r\n//         priority: newTodoPriority,\r\n//         dueDate: newTodoDueDate\r\n//       };\r\n//       const response = await addTodo(contactId, newTodo);\r\n//       setTodos([...todos, response]);\r\n//       setNewTodoText('');\r\n//       setNewTodoPriority('Medium');\r\n//       setNewTodoDueDate('');\r\n//       setTodoFormVisible(false);\r\n//     } catch (err) {\r\n//       setError('Failed to add todo: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n\r\n//   const filteredAndSortedTodos = todos\r\n//   .filter(todo => {\r\n//     if (filterPriority && todo.priority !== filterPriority) return false;\r\n//     if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\r\n//     return true;\r\n//   })\r\n//   .sort((a, b) => {\r\n//     if (sortOption === \"date\") {\r\n//       return new Date(a.dueDate) - new Date(b.dueDate);\r\n//     } else if (sortOption === \"priority\") {\r\n//       const priorities = { High: 1, Medium: 2, Low: 3 };\r\n//       return priorities[a.priority] - priorities[b.priority];\r\n//     } else if (sortOption === \"status\") {\r\n//       return (a.completed === b.completed) ? 0 : a.completed ? -1 : 1;\r\n//     }\r\n//     return 0;\r\n//   });\r\n\r\n\r\n//   const handleUpdateTodo = async (todoId) => {\r\n//     try {\r\n//       const updatedTodo = await updateTodo(todoId, {\r\n//         text: newTodoText,\r\n//         priority: newTodoPriority,\r\n//         dueDate: newTodoDueDate\r\n//       });\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n//       setSelectedTodo(null); // Close the update form\r\n//     } catch (err) {\r\n//       setError('Failed to update todo: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTodo = async (todoId) => {\r\n//     const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\r\n//     if (confirmDelete) {\r\n//       try {\r\n//         await deleteTodo(todoId);\r\n//         setTodos(todos.filter(todo => todo._id !== todoId));\r\n//       } catch (err) {\r\n//         setError('Failed to delete todo: ' + err.message);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleToggleTodo = async (todoId, completed) => {\r\n//         try {\r\n//           const updatedTodo = await toggleTodo(todoId, !completed);\r\n//           setTodos(prevTodos =>\r\n//             prevTodos.map(todo =>\r\n//               todo._id === todoId ? updatedTodo : todo\r\n//             )\r\n//           );\r\n//         } catch (err) {\r\n//           setError('Failed to update todo: ' + err.message);\r\n//         }\r\n//       };\r\n\r\n//   const showUpdateForm = (todo) => {\r\n//     setSelectedTodo(todo);\r\n//     setNewTodoText(todo.text);\r\n//     setNewTodoPriority(todo.priority);\r\n//     setNewTodoDueDate(todo.dueDate.split('T')[0]);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//          <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n//            <FaCheckSquare className=\"icon\" /> Todo\r\n//          </button>\r\n//          <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n//            <FaBell className=\"icon\" /> Reminder\r\n//          </button>\r\n//          <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n//            <FaMoneyBillWave className=\"icon\" /> Finance\r\n//          </button>\r\n//        </div>\r\n\r\n\r\n//       <div className=\"tab-content\">\r\n//       <div className=\"sorting-filtering\">\r\n//   <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n//     <option value=\"\">Sort by</option>\r\n//     <option value=\"date\">Due Date</option>\r\n//     <option value=\"priority\">Priority</option>\r\n//     <option value=\"status\">Status</option>\r\n//   </select>\r\n\r\n//   <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n//     <option value=\"\">Filter by Priority</option>\r\n//     <option value=\"High\">High</option>\r\n//     <option value=\"Medium\">Medium</option>\r\n//     <option value=\"Low\">Low</option>\r\n//   </select>\r\n\r\n//   <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n//     <option value=\"\">Filter by Status</option>\r\n//     <option value=\"completed\">Completed</option>\r\n//     <option value=\"notCompleted\">Not Completed</option>\r\n//   </select>\r\n// </div>\r\n\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n//               <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//             </button>\r\n\r\n//             {isTodoFormVisible && (\r\n//               <div className=\"todo-form-overlay\">\r\n//               <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={newTodoText}\r\n//                   onChange={(e) => setNewTodoText(e.target.value)}\r\n//                   placeholder=\"New todo text\"\r\n//                   required\r\n//                 />\r\n//                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n//                   <option value=\"High\"> High </option>\r\n//                   <option value=\"Medium\">Medium</option>\r\n//                   <option value=\"Low\"> Low  </option>\r\n//                 </select>\r\n//                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n//                 <button type=\"submit\">Save Todo</button>\r\n//                 <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n//               </form>\r\n//               </div>\r\n//             )}\r\n\r\n//             <div className=\"todo-list\">\r\n//               {loading ? (\r\n//                 <p>Loading todos...</p>\r\n//               ) : todos.map(todo => (\r\n//                 <div key={todo._id} className=\"todo-item\">\r\n//                   <span>{todo.text}</span>\r\n//                   <span>{todo.priority}</span>\r\n//                   <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n//                   <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n//                   <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n//                   <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n//                     />\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n\r\n\r\n//             {selectedTodo && (\r\n//               <div className=\"centered-container\">\r\n//               <form onSubmit={(e) => {\r\n//                 e.preventDefault();\r\n//                 handleUpdateTodo(selectedTodo._id);\r\n//               }} className=\"update-form\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={newTodoText}\r\n//                   onChange={(e) => setNewTodoText(e.target.value)}\r\n//                   required\r\n//                 />\r\n//                 <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n//                   <option value=\"High\"> High </option>\r\n//                   <option value=\"Medium\">Medium</option>\r\n//                   <option value=\"Low\"> Low  </option>\r\n//                 </select>\r\n//                 <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n//                 <button type=\"submit\">Update Todo</button>\r\n//                 <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n//               </form>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n          \r\n//       </div>\r\n//       {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//src/IndividualContact.js\r\n//src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n  const [sortOption, setSortOption] = useState(\"\");\r\n  const [filterPriority, setFilterPriority] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n  const handleAddTodo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTodo = {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      };\r\n      const response = await addTodo(contactId, newTodo);\r\n      setTodos([...todos, response]);\r\n      setNewTodoText('');\r\n      setNewTodoPriority('Medium');\r\n      setNewTodoDueDate('');\r\n      setTodoFormVisible(false);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const filteredAndSortedTodos = todos\r\n    .filter(todo => {\r\n      if (filterPriority && todo.priority !== filterPriority) return false;\r\n      if (filterStatus && (filterStatus === \"completed\" ? !todo.completed : todo.completed)) return false;\r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortOption === \"date\") {\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      } else if (sortOption === \"priority\") {\r\n        const priorities = { High: 1, Medium: 2, Low: 3 };\r\n        return priorities[a.priority] - priorities[b.priority];\r\n      } else if (sortOption === \"status\") {\r\n        return (a.completed === b.completed) ? 0 : a.completed ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  const handleUpdateTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = await updateTodo(todoId, {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      });\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n      setSelectedTodo(null); // Close the update form\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (todoId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteTodo(todoId);\r\n        setTodos(todos.filter(todo => todo._id !== todoId));\r\n      } catch (err) {\r\n        setError('Failed to delete todo: ' + err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  {selectedTodo && (\r\n                  <div className=\"centered-container\">\r\n                  <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleUpdateTodo(selectedTodo._id);\r\n                  }} className=\"update-form\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newTodoText}\r\n                      onChange={(e) => setNewTodoText(e.target.value)}\r\n                      required\r\n                    />\r\n                    <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                      <option value=\"High\"> High </option>\r\n                      <option value=\"Medium\">Medium</option>\r\n                      <option value=\"Low\"> Low  </option>\r\n                    </select>\r\n                    <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                    <button type=\"submit\">Update Todo</button>\r\n                    <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n                  </form>\r\n                  </div>\r\n                )}\r\n\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const showUpdateForm = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setNewTodoText(todo.text);\r\n    setNewTodoPriority(todo.priority);\r\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilterPriority('');\r\n    setFilterStatus('');\r\n    setSortOption('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        <div className=\"sorting-filtering\">\r\n          <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n            <option value=\"\">Sort by</option>\r\n            <option value=\"date\">Due Date</option>\r\n            <option value=\"priority\">Priority</option>\r\n            <option value=\"status\">Status</option>\r\n          </select>\r\n\r\n          <select value={filterPriority} onChange={(e) => setFilterPriority(e.target.value)}>\r\n            <option value=\"\">Filter by Priority</option>\r\n            <option value=\"High\">High</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"Low\">Low</option>\r\n          </select>\r\n\r\n          <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\r\n            <option value=\"\">Filter by Status</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"notCompleted\">Not Completed</option>\r\n          </select>\r\n\r\n          <button onClick={resetFilters} className=\"cancel-filters-button\">Cancel Filters</button>\r\n        </div>\r\n\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n              <FaPlusCircle className=\"icon\" /> Add New Todo\r\n            </button>\r\n\r\n            {isTodoFormVisible && (\r\n              <div className=\"todo-form-overlay\">\r\n                <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newTodoText}\r\n                    onChange={(e) => setNewTodoText(e.target.value)}\r\n                    placeholder=\"New todo text\"\r\n                    required\r\n                  />\r\n                  <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                    <option value=\"High\"> High </option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"Low\"> Low  </option>\r\n                  </select>\r\n                  <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                  <button type=\"submit\">Save Todo</button>\r\n                  <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"todo-list\">\r\n              {loading ? (\r\n                <p>Loading todos...</p>\r\n              ) : filteredAndSortedTodos.map(todo => (\r\n                <div key={todo._id} className=\"todo-item\">\r\n                  <span>{todo.text}</span>\r\n                  <span>{todo.priority}</span>\r\n                  <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n                  <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n                  <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n                  <button onClick={() => handleToggleTodo(todo._id, todo.completed)}>\r\n                    {todo.completed ? \"Undo\" : \"Complete\"}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}