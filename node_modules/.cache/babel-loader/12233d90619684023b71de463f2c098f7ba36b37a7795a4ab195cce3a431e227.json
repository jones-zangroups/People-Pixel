{"ast":null,"code":"//src/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nexport const fetchContacts = async category => {\n  try {\n    const response = await fetch(`${API_URL}/contacts/${category}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch contacts');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const addContact = async contactData => {\n  try {\n    const response = await fetch(`${API_URL}/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(contactData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add contact');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const deleteContact = async contactId => {\n  try {\n    const response = await axios.delete(`/api/contacts/${contactId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting contact:\", error);\n    throw error;\n  }\n};\nexport const updateContact = async (contactId, updatedContactData) => {\n  try {\n    const response = await axios.put(`/api/contacts/${contactId}`, updatedContactData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating contact:\", error);\n    throw error;\n  }\n};\nexport const fetchTodos = async contactId => {\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\n  return response.data;\n};\nexport const addTodo = async (contactId, newTodo) => {\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, newTodo);\n  return response.data;\n};\nexport const toggleTodo = async (todoId, completed) => {\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, {\n    completed\n  });\n  return response.data;\n};\nexport const updateTodo = async (todoId, updatedData) => {\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, updatedData);\n  return response.data;\n};\nexport const deleteTodo = async todoId => {\n  await axios.delete(`${API_URL}/todos/${todoId}`);\n};\n\n//for reminder\n\nexport const fetchReminders = async contactId => {\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/reminders`);\n  return response.data;\n};\nexport const addReminder = async (contactId, newReminder) => {\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/reminders`, newReminder);\n  return response.data;\n};\nexport const deleteReminder = async reminderId => {\n  await axios.delete(`${API_URL}/reminders/${reminderId}`);\n};\n\n// Finance API functions\n//src/api.js\nexport const fetchFinances = async contactId => {\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/finances`);\n  return response.data;\n};\nexport const addFinance = async (contactId, financeData) => {\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/finances`, financeData);\n  return response.data;\n};\nexport const updateFinance = async (financeId, updateData) => {\n  const response = await axios.put(`${API_URL}/finances/${financeId}`, updateData);\n  return response.data;\n};\nexport const deleteFinance = async financeId => {\n  await axios.delete(`${API_URL}/finances/${financeId}`);\n};","map":{"version":3,"names":["axios","API_URL","fetchContacts","category","response","fetch","ok","Error","json","error","console","addContact","contactData","method","headers","body","JSON","stringify","deleteContact","contactId","delete","data","updateContact","updatedContactData","put","fetchTodos","get","addTodo","newTodo","post","toggleTodo","todoId","completed","updateTodo","updatedData","deleteTodo","fetchReminders","addReminder","newReminder","deleteReminder","reminderId","fetchFinances","addFinance","financeData","updateFinance","financeId","updateData","deleteFinance"],"sources":["D:/PeoplePixel1/src/api.js"],"sourcesContent":["\r\n //src/api.js\r\nimport axios from 'axios';\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchContacts = async (category) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts/${category}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch contacts');\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async (contactData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/contacts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(contactData),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to add contact');\r\n    }\r\n    \r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const deleteContact = async (contactId) => {\r\n  try {\r\n    const response = await axios.delete(`/api/contacts/${contactId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting contact:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateContact = async (contactId, updatedContactData) => {\r\n  try {\r\n    const response = await axios.put(`/api/contacts/${contactId}`, updatedContactData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating contact:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const fetchTodos = async (contactId) => {\r\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/todos`);\r\n  return response.data;\r\n};\r\n\r\nexport const addTodo = async (contactId, newTodo) => {\r\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/todos`, newTodo);\r\n  return response.data;\r\n};\r\n\r\nexport const toggleTodo = async (todoId, completed) => {\r\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, { completed });\r\n  return response.data;\r\n};\r\n\r\nexport const updateTodo = async (todoId, updatedData) => {\r\n  const response = await axios.put(`${API_URL}/todos/${todoId}`, updatedData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteTodo = async (todoId) => {\r\n  await axios.delete(`${API_URL}/todos/${todoId}`);\r\n};\r\n\r\n\r\n//for reminder\r\n\r\nexport const fetchReminders = async (contactId) => {\r\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/reminders`);\r\n  return response.data;\r\n};\r\n\r\nexport const addReminder = async (contactId, newReminder) => {\r\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/reminders`, newReminder);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteReminder = async (reminderId) => {\r\n  await axios.delete(`${API_URL}/reminders/${reminderId}`);\r\n};\r\n\r\n\r\n\r\n// Finance API functions\r\n//src/api.js\r\nexport const fetchFinances = async (contactId) => {\r\n  const response = await axios.get(`${API_URL}/contacts/${contactId}/finances`);\r\n  return response.data;\r\n};\r\n\r\nexport const addFinance = async (contactId, financeData) => {\r\n  const response = await axios.post(`${API_URL}/contacts/${contactId}/finances`, financeData);\r\n  return response.data;\r\n};\r\n\r\nexport const updateFinance = async (financeId, updateData) => {\r\n  const response = await axios.put(`${API_URL}/finances/${financeId}`, updateData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteFinance = async (financeId) => {\r\n  await axios.delete(`${API_URL}/finances/${financeId}`);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}