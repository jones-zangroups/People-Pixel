{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\n\n// import Contacts from './Contacts';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name'); // Get the contact name from URL\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\n\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\n\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\n\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         const contactId = params.get('contactId');\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/todos`);\n//         setTodos(response.data);\n//       } catch (error) {\n//         console.error('Error fetching todos:', error);\n//       }\n//     };\n//     fetchTodos();\n//   }, [params.get('contactId')]);\n\n//   const addTodo = async (newTodoText) => {\n//     try {\n//       const contactId = params.get('contactId');\n//       const newTodo = { text: newTodoText, completed: false, contactId };\n//       const response = await axios.post(`http://localhost:5000/api/contacts/${contactId}/todos`, newTodo);\n//       setTodos([...todos, response.data]);\n//     } catch (error) {\n//       console.error('Error adding todo in contact:', error);\n//     }\n//   };\n\n//   // Handle toggling todo completion\n//   const toggleTodo = async (todoId) => {\n//     try {\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\n//       updatedTodo.completed = !updatedTodo.completed;\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\n//     } catch (error) {\n//       console.error('Error toggling todo completion:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('todo')}\n//         >\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('reminder')}\n//         >\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\n//           onClick={() => setActiveTab('finance')}\n//         >\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             <div className=\"todo-header\">\n//               <button\n//                 className=\"add-button\"\n//                 onClick={() => {\n//                   const newTodoText = prompt('Enter new todo:');\n//                   if (newTodoText) addTodo(newTodoText);\n//                 }}\n//               >\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\n//               </button>\n//             </div>\n//             <div className=\"todo-list\">\n//               {todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => toggleTodo(todo._id)}\n//                     />\n//                     <span>{todo.text}</span>\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n//src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  // const contactId = params.get('contactId');\n  const contactId = params.get('contactId');\n  const category = params.get('category');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  // const category = params.get('category');\n  const [contacts, setContacts] = useState([]);\n\n  //Fetch todos when component mounts or contactId changes\n  useEffect(() => {\n    debugger;\n    const loadTodos = async () => {\n      if (!contactId) {\n        setError('No contact ID provided');\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n        setError(null);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n\n  // Handle adding a new todo\n  const handleAddTodo = async todoText => {\n    debugger;\n    // if (!todoText.trim())\n    // {\n    //   alert(todoText)\n    //    return;\n    // }\n\n    try {\n      // const newTodo = {\n      //   text: todoText,\n      //   completed: false,\n      //   priority: 'Medium'\n      // };\n\n      const newTodo = {\n        text: \"todo\",\n        completed: false,\n        priority: 'Medium'\n      };\n      //   const contactId='672a4becc1daa37136fc5484';\n      console.log('Adding new todo:', newTodo); // Log the todo data before API call\n      const response = await addTodo(contactId, newTodo);\n      debugger;\n      // const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n      //const response = await axios.post('http://localhost:5000/api/todos', newTodo);\n      //const response = await axios.post(`http://localhost:5000/api/contacts/${contacts}/todos`, { name: \"test\" });\n      debugger;\n      setTodos([...todos, response]); // Add new category to state\n      //setNewCategory('');\n      //setShowModal(false);\n      //setContacts([...contacts, response.data]);\n      //setIsModalOpen(false);\n\n      //console.log('Added todo:', addedTodo);  // Log the response from API\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n      console.error('Error in handleAddTodo:', err); // Log the error\n    }\n  };\n\n  // Handle toggling todo completion\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: \"\\u2190 Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'todo' &&\n      /*#__PURE__*/\n      //  <div className=\"modal\">\n      // <div className=\"modal-content\">\n      //   <h2>Enter new todo:</h2>\n      //   <form>\n      //     <label>Enter new todo::</label>\n      //     <input type=\"text\" name=\"todo\"  required />\n      //   </form>\n      //   <button onClick={handleAddTodo}>Save</button>\n      // </div>\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-header\",\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            className: \"add-button\",\n            id: \"txttodo\",\n            onClick: () => {\n              const newTodoText = prompt('Enter new todo:');\n              if (newTodoText) handleAddTodo(newTodoText);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), \" Add New Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading todos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this) : todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No todos found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `list-item ${todo.completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id, todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          children: \"+ Add New Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"yYDRJO0vuKGXQbNGPHWtQ1L7k14=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["axios","React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","category","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","contacts","setContacts","loadTodos","todoData","err","message","handleAddTodo","todoText","newTodo","text","completed","priority","console","log","response","prevTodos","handleToggleTodo","todoId","updatedTodo","map","todo","_id","className","children","onClick","window","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","id","newTodoText","prompt","length","type","checked","onChange","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["// //src/IndividualContacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n import axios from 'axios';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n\r\n// import Contacts from './Contacts';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name'); // Get the contact name from URL\r\n//   const avatar = params.get('avatar'); // Get the contact avatar URL or ID\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo'); // State to track active tab\r\n  \r\n\r\n//   const [todos, setTodos] = useState([]); // State for todos (fetched from the backend)\r\n\r\n//   useEffect(() => {\r\n//     const fetchTodos = async () => {\r\n//       try {\r\n//         const contactId = params.get('contactId');\r\n//         const response = await axios.get(`http://localhost:5000/api/contacts/${contactId}/todos`);\r\n//         setTodos(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching todos:', error);\r\n//       }\r\n//     };\r\n//     fetchTodos();\r\n//   }, [params.get('contactId')]);\r\n  \r\n//   const addTodo = async (newTodoText) => {\r\n//     try {\r\n//       const contactId = params.get('contactId');\r\n//       const newTodo = { text: newTodoText, completed: false, contactId };\r\n//       const response = await axios.post(`http://localhost:5000/api/contacts/${contactId}/todos`, newTodo);\r\n//       setTodos([...todos, response.data]);\r\n//     } catch (error) {\r\n//       console.error('Error adding todo in contact:', error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // Handle toggling todo completion\r\n//   const toggleTodo = async (todoId) => {\r\n//     try {\r\n//       const updatedTodo = todos.find(todo => todo._id === todoId);\r\n//       updatedTodo.completed = !updatedTodo.completed;\r\n//       const response = await axios.put(`http://localhost:5000/api/todos/${todoId}`, updatedTodo);\r\n//       setTodos(todos.map(todo => (todo._id === todoId ? response.data : todo)));\r\n//     } catch (error) {\r\n//       console.error('Error toggling todo completion:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button\r\n//           className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('todo')}\r\n//         >\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('reminder')}\r\n//         >\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button\r\n//           className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n//           onClick={() => setActiveTab('finance')}\r\n//         >\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             <div className=\"todo-header\">\r\n//               <button\r\n//                 className=\"add-button\"\r\n//                 onClick={() => {\r\n//                   const newTodoText = prompt('Enter new todo:');\r\n//                   if (newTodoText) addTodo(newTodoText);\r\n//                 }}\r\n//               >\r\n//                 <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"todo-list\">\r\n//               {todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => toggleTodo(todo._id)}\r\n//                     />\r\n//                     <span>{todo.text}</span>\r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  // const contactId = params.get('contactId');\r\n  const contactId = params.get('contactId');\r\n  const category = params.get('category');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  // const category = params.get('category');\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  //Fetch todos when component mounts or contactId changes\r\n  useEffect(() => {\r\n    debugger;\r\n    const loadTodos = async () => {\r\n      if (!contactId) {\r\n        setError('No contact ID provided');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n\r\n  }, [contactId]);\r\n\r\n\r\n\r\n  // Handle adding a new todo\r\n  const handleAddTodo = async (todoText) => {\r\n    debugger;\r\n    // if (!todoText.trim())\r\n    // {\r\n    //   alert(todoText)\r\n    //    return;\r\n    // }\r\n  \r\n    try {\r\n      // const newTodo = {\r\n      //   text: todoText,\r\n      //   completed: false,\r\n      //   priority: 'Medium'\r\n      // };\r\n  \r\n      const newTodo = {\r\n        text: \"todo\",\r\n        completed: false,\r\n        priority: 'Medium'\r\n      };\r\n   //   const contactId='672a4becc1daa37136fc5484';\r\n      console.log('Adding new todo:', newTodo);  // Log the todo data before API call\r\n      const response = await addTodo(contactId, newTodo);\r\n\r\n      debugger;\r\n     // const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n      //const response = await axios.post('http://localhost:5000/api/todos', newTodo);\r\n      //const response = await axios.post(`http://localhost:5000/api/contacts/${contacts}/todos`, { name: \"test\" });\r\n      debugger;\r\n      setTodos([...todos, response]); // Add new category to state\r\n      //setNewCategory('');\r\n      //setShowModal(false);\r\n      //setContacts([...contacts, response.data]);\r\n      //setIsModalOpen(false);\r\n\r\n      //console.log('Added todo:', addedTodo);  // Log the response from API\r\n      setTodos(prevTodos => [...prevTodos, newTodo]);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n      console.error('Error in handleAddTodo:', err);  // Log the error\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle toggling todo completion\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n    try {\r\n      const updatedTodo = await toggleTodo(todoId, !completed);\r\n      setTodos(prevTodos =>\r\n        prevTodos.map(todo =>\r\n          todo._id === todoId ? updatedTodo : todo\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>‚Üê Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n        <button\r\n          className={`tab ${activeTab === 'todo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('todo')}\r\n        >\r\n          <FaCheckSquare className=\"icon\" /> Todo\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'reminder' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('reminder')}\r\n        >\r\n          <FaBell className=\"icon\" /> Reminder\r\n        </button>\r\n        <button\r\n          className={`tab ${activeTab === 'finance' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('finance')}\r\n        >\r\n          <FaMoneyBillWave className=\"icon\" /> Finance\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n\r\n//  <div className=\"modal\">\r\n// <div className=\"modal-content\">\r\n//   <h2>Enter new todo:</h2>\r\n//   <form>\r\n//     <label>Enter new todo::</label>\r\n//     <input type=\"text\" name=\"todo\"  required />\r\n//   </form>\r\n//   <button onClick={handleAddTodo}>Save</button>\r\n// </div>\r\n// </div>\r\n\r\n          <div className=\"todo-content\">\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n            <div className=\"todo-header\">\r\n              <text\r\n                className=\"add-button\" id = 'txttodo'\r\n                onClick={() => {\r\n                  const newTodoText = prompt('Enter new todo:');\r\n                  if (newTodoText) handleAddTodo(newTodoText);\r\n                }}\r\n              >\r\n                <FaPlusCircle className=\"icon\" /> Add New Todo\r\n              </text>\r\n            </div>\r\n\r\n            <div className=\"todo-list\">\r\n              {loading ? (\r\n                <p>Loading todos...</p>\r\n              ) : todos.length === 0 ? (\r\n                <p>No todos found</p>\r\n              ) : (\r\n                todos.map(todo => (\r\n                  <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n                    />\r\n                    <span>{todo.text}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;"],"mappings":";;AAAA;AACA;AACA;AACC,OAAOA,KAAK,MAAM,OAAO;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAO,cAAc;AACrB,SAASC,aAAa,EAAEC,MAAM,EAAEC,eAAe,EAAEC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC,QAAQ,CAAC;EACnC;EACA,MAAME,SAAS,GAAGN,MAAM,CAACI,GAAG,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}