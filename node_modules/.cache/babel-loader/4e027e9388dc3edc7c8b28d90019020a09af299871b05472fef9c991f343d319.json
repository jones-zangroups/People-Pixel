{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\Contacts.js\",\n  _s = $RefreshSig$();\n// // src/Contacts.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\n// import './styles.css';\n// import axios from 'axios';\n// import { FaChevronLeft,FaPlusCircle } from 'react-icons/fa';\n// import logo from './logo.png'; \n\n// const Contacts = () => {\n\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const category = params.get('category');\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [profileImage, setProfileImage] = useState(null);\n//   const [base64Image, setBase64Image] = useState('');\n//   const [newContact, setNewContact] = useState({\n//     name: '',\n//     avatar: '',\n//     email: '',\n//     phone:'',\n//     profile:'',\n//     category: category,\n//   });\n//   const [contacts, setContacts] = useState([]);\n\n//   // Fetch contacts by category\n//   useEffect(() => {\n\n//     const fetchContacts = async () => {\n\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/contacts?category=${category}`);\n//         setContacts(response.data);\n//       } catch (error) {\n//         console.error('Error fetching contacts:', error);\n//       }\n//     };\n//     fetchContacts();\n//   }, [category]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewContact({ ...newContact, [name]: value });\n//   };\n\n//   // const handleImageChange = (e) => {\n//   //   const file = e.target.files[0];\n//   //   if (file) {\n//   //     const reader = new FileReader();\n//   //     reader.onloadend = () => {\n//   //       setNewContact({\n//   //         ...newContact,\n//   //         profile: reader.result,  // base64 string\n//   //       });\n//   //     };\n//   //     reader.readAsDataURL(file);\n//   //   }\n//   // };\n\n// // Function to convert file to Base64 format\n// const handleFileToBase64Conversion = (file) => {\n//   return new Promise((resolve, reject) => {\n//     const reader = new FileReader();\n//     reader.readAsDataURL(file);\n//     reader.onload = () => resolve(reader.result);\n//     reader.onerror = (error) => reject(error);\n//   });\n// };\n\n// // React Component File Input Example\n\n//   const handleFileChange = async (e) => {\n//     const file = e.target.files[0]; \n//     if (file) {\n//       // const base64 = await handleFileToBase64Conversion(file);\n//       // console.log(base64);\n//       // Use base64 data (e.g., set it in state for uploading)\n\n//         try {\n//           const base64 = await handleFileToBase64Conversion(file);\n//           // Set the Base64 string to the profile field in newContact\n//           setNewContact((prevContact) => ({\n//             ...prevContact,\n//             profile: base64,\n//           }));\n//         } catch (error) {\n//           console.error('Error converting file to Base64:', error);\n//         }\n//       }\n//   };\n\n//   const handleAddContact = async () => {\n//     if (!newContact.name) {\n//       alert('Please enter a name for the contact.');\n//       return;\n//     }\n\n//     try {\n//       debugger;\n//       // newContact.profile= newContact.profile.replace(\"C:\\\\fakepath\\\\\",\"\");\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\n//       setContacts([...contacts, response.data]);\n//       setIsModalOpen(false);\n//     } catch (error) {\n//       console.error('Error adding contact:', error.response ? error.response.data : error.message);\n//       alert(`Failed to add contact. ${error.response ? error.response.data.message : 'Please try again.'}`);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <header className=\"header\">\n//         {/* //<div className=\"logo\">PeoplePixel - {category}</div> */}\n//         <div className=\"logo\">\n//         <img src={logo} alt=\"PeoplePixel Logo\" />\n//         </div>\n//         <div className=\"logo-text\">{category} </div>\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\n\n//       </header>\n//       <h2>\n//       <button className=\"back-button\" onClick={() => window.history.back()}>\n//         <FaChevronLeft className=\"icon\" /> Contacts\n//       </button>\n//         <button className=\"add-contact\" onClick={() => setIsModalOpen(true)}><FaPlusCircle className=\"icon\" />Add Contact</button>\n//       </h2>\n\n//       <div className=\"container\">\n//         {contacts.length > 0 ? (\n//           contacts.map((contact, index) => (\n//             <Link\n//               key={index}\n//               className=\"card\"\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}&phone=${contact.phone}&profile=${contact.profile}&email=${contact.email}&category=${contact.category}&contactId=${contact._id}`}\n//             >\n//               <div className=\"avatar\">{contact.avatar}</div>\n//               <p className=\"name\">{contact.name}</p>\n//             </Link>\n//           ))\n//         ) : (\n//           <p>No contacts found for this category.</p>\n//         )}\n//       </div>\n\n//       {isModalOpen && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <h2>Add New Contact</h2>\n//             <form>\n//               <label>Name:</label>\n//               <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\n//               <label>Avatar:</label>\n//               <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} maxLength=\"1\" />\n//               <label>Email:</label>\n//               <input type=\"text\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\n//               <label>Phone Number:</label>\n//               <input type=\"text\" name=\"phone\" value={newContact.phone} onChange={handleInputChange}  />\n//               <label>Profile Picture:</label>\n//               <input type=\"file\" name=\"profile\" onChange={handleFileChange} />\n\n//             </form>\n//             <button onClick={handleAddContact}>Save</button>\n//             <button onClick={() => setIsModalOpen(false)}>Cancel</button>\n//           </div>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default Contacts;\n\n// src/Contacts.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './styles.css';\nimport axios from 'axios';\nimport { FaChevronLeft, FaPlusCircle } from 'react-icons/fa';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const category = params.get('category');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [profileImage, setProfileImage] = useState(null);\n  const [base64Image, setBase64Image] = useState('');\n  const [newContact, setNewContact] = useState({\n    name: '',\n    avatar: '',\n    email: '',\n    phone: '',\n    profile: '',\n    category: category\n  });\n  const [contacts, setContacts] = useState([]);\n\n  // Fetch contacts by category\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/contacts?category=${category}`);\n        setContacts(response.data);\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchContacts();\n  }, [category]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewContact({\n      ...newContact,\n      [name]: value\n    });\n  };\n\n  // Function to convert file to Base64 format\n  const handleFileToBase64Conversion = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  // Handle file input change\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const base64 = await handleFileToBase64Conversion(file);\n        // Set the Base64 string to the profile field in newContact\n        setNewContact(prevContact => ({\n          ...prevContact,\n          profile: base64\n        }));\n      } catch (error) {\n        console.error('Error converting file to Base64:', error);\n      }\n    }\n  };\n  const handleAddContact = async () => {\n    if (!newContact.name) {\n      alert('Please enter a name for the contact.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/contacts', newContact);\n      setContacts([...contacts, response.data]);\n      setIsModalOpen(false);\n      // Reset the form after successful contact creation\n      setNewContact({\n        name: '',\n        avatar: '',\n        email: '',\n        phone: '',\n        profile: '',\n        category: category\n      });\n    } catch (error) {\n      console.error('Error adding contact:', error.response ? error.response.data : error.message);\n      alert(`Failed to add contact. ${error.response ? error.response.data.message : 'Please try again.'}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"PeoplePixel Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-text\",\n        children: [category, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), \" Contacts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-contact\",\n        onClick: () => setIsModalOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), \"Add Contact\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: contacts.length > 0 ? contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"card\",\n        to: `/contact?name=${contact.name}&avatar=${contact.avatar}&phone=${contact.phone}&profile=${contact.profile}&email=${contact.email}&category=${contact.category}&contactId=${contact._id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: contact.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No contacts found for this category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newContact.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Avatar (Single Character):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"avatar\",\n            value: newContact.avatar,\n            onChange: handleInputChange,\n            maxLength: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: newContact.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newContact.phone,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Profile Picture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"profile\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddContact,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Contacts, \"SDSrp64RatjX7fbiie1T6aT4kxs=\", false, function () {\n  return [useLocation];\n});\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","axios","FaChevronLeft","FaPlusCircle","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","Contacts","_s","location","params","URLSearchParams","search","category","get","isModalOpen","setIsModalOpen","profileImage","setProfileImage","base64Image","setBase64Image","newContact","setNewContact","name","avatar","email","phone","profile","contacts","setContacts","fetchContacts","response","data","error","console","handleInputChange","e","value","target","handleFileToBase64Conversion","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleFileChange","files","base64","prevContact","handleAddContact","alert","post","message","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","window","history","back","length","map","contact","index","to","_id","onChange","required","maxLength","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/Contacts.js"],"sourcesContent":["\r\n// // src/Contacts.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation, Link } from 'react-router-dom';\r\n// import './styles.css';\r\n// import axios from 'axios';\r\n// import { FaChevronLeft,FaPlusCircle } from 'react-icons/fa';\r\n// import logo from './logo.png'; \r\n\r\n// const Contacts = () => {\r\n \r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const category = params.get('category');\r\n\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [profileImage, setProfileImage] = useState(null);\r\n//   const [base64Image, setBase64Image] = useState('');\r\n//   const [newContact, setNewContact] = useState({\r\n//     name: '',\r\n//     avatar: '',\r\n//     email: '',\r\n//     phone:'',\r\n//     profile:'',\r\n//     category: category,\r\n//   });\r\n//   const [contacts, setContacts] = useState([]);\r\n\r\n//   // Fetch contacts by category\r\n//   useEffect(() => {\r\n  \r\n//     const fetchContacts = async () => {\r\n      \r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/contacts?category=${category}`);\r\n//         setContacts(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching contacts:', error);\r\n//       }\r\n//     };\r\n//     fetchContacts();\r\n//   }, [category]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewContact({ ...newContact, [name]: value });\r\n//   };\r\n\r\n\r\n//   // const handleImageChange = (e) => {\r\n//   //   const file = e.target.files[0];\r\n//   //   if (file) {\r\n//   //     const reader = new FileReader();\r\n//   //     reader.onloadend = () => {\r\n//   //       setNewContact({\r\n//   //         ...newContact,\r\n//   //         profile: reader.result,  // base64 string\r\n//   //       });\r\n//   //     };\r\n//   //     reader.readAsDataURL(file);\r\n//   //   }\r\n//   // };\r\n\r\n\r\n// // Function to convert file to Base64 format\r\n// const handleFileToBase64Conversion = (file) => {\r\n//   return new Promise((resolve, reject) => {\r\n//     const reader = new FileReader();\r\n//     reader.readAsDataURL(file);\r\n//     reader.onload = () => resolve(reader.result);\r\n//     reader.onerror = (error) => reject(error);\r\n//   });\r\n// };\r\n\r\n// // React Component File Input Example\r\n\r\n//   const handleFileChange = async (e) => {\r\n//     const file = e.target.files[0]; \r\n//     if (file) {\r\n//       // const base64 = await handleFileToBase64Conversion(file);\r\n//       // console.log(base64);\r\n//       // Use base64 data (e.g., set it in state for uploading)\r\n\r\n      \r\n//         try {\r\n//           const base64 = await handleFileToBase64Conversion(file);\r\n//           // Set the Base64 string to the profile field in newContact\r\n//           setNewContact((prevContact) => ({\r\n//             ...prevContact,\r\n//             profile: base64,\r\n//           }));\r\n//         } catch (error) {\r\n//           console.error('Error converting file to Base64:', error);\r\n//         }\r\n//       }\r\n//   };\r\n\r\n//   const handleAddContact = async () => {\r\n//     if (!newContact.name) {\r\n//       alert('Please enter a name for the contact.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       debugger;\r\n//       // newContact.profile= newContact.profile.replace(\"C:\\\\fakepath\\\\\",\"\");\r\n//       const response = await axios.post('http://localhost:5000/api/contacts', newContact);\r\n//       setContacts([...contacts, response.data]);\r\n//       setIsModalOpen(false);\r\n//     } catch (error) {\r\n//       console.error('Error adding contact:', error.response ? error.response.data : error.message);\r\n//       alert(`Failed to add contact. ${error.response ? error.response.data.message : 'Please try again.'}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <header className=\"header\">\r\n//         {/* //<div className=\"logo\">PeoplePixel - {category}</div> */}\r\n//         <div className=\"logo\">\r\n//         <img src={logo} alt=\"PeoplePixel Logo\" />\r\n//         </div>\r\n//         <div className=\"logo-text\">{category} </div>\r\n//         <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n\r\n//       </header>\r\n//       <h2>\r\n//       <button className=\"back-button\" onClick={() => window.history.back()}>\r\n//         <FaChevronLeft className=\"icon\" /> Contacts\r\n//       </button>\r\n//         <button className=\"add-contact\" onClick={() => setIsModalOpen(true)}><FaPlusCircle className=\"icon\" />Add Contact</button>\r\n//       </h2>\r\n     \r\n//       <div className=\"container\">\r\n//         {contacts.length > 0 ? (\r\n//           contacts.map((contact, index) => (\r\n//             <Link\r\n//               key={index}\r\n//               className=\"card\"\r\n//               to={`/contact?name=${contact.name}&avatar=${contact.avatar}&phone=${contact.phone}&profile=${contact.profile}&email=${contact.email}&category=${contact.category}&contactId=${contact._id}`}\r\n//             >\r\n//               <div className=\"avatar\">{contact.avatar}</div>\r\n//               <p className=\"name\">{contact.name}</p>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p>No contacts found for this category.</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       {isModalOpen && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h2>Add New Contact</h2>\r\n//             <form>\r\n//               <label>Name:</label>\r\n//               <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\r\n//               <label>Avatar:</label>\r\n//               <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} maxLength=\"1\" />\r\n//               <label>Email:</label>\r\n//               <input type=\"text\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\r\n//               <label>Phone Number:</label>\r\n//               <input type=\"text\" name=\"phone\" value={newContact.phone} onChange={handleInputChange}  />\r\n//               <label>Profile Picture:</label>\r\n//               <input type=\"file\" name=\"profile\" onChange={handleFileChange} />\r\n\r\n//             </form>\r\n//             <button onClick={handleAddContact}>Save</button>\r\n//             <button onClick={() => setIsModalOpen(false)}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Contacts;\r\n\r\n\r\n\r\n\r\n\r\n// src/Contacts.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\nimport { FaChevronLeft, FaPlusCircle } from 'react-icons/fa';\r\nimport logo from './logo.png';\r\n\r\nconst Contacts = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const category = params.get('category');\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [profileImage, setProfileImage] = useState(null);\r\n  const [base64Image, setBase64Image] = useState('');\r\n  const [newContact, setNewContact] = useState({\r\n    name: '',\r\n    avatar: '',\r\n    email: '',\r\n    phone: '',\r\n    profile: '',\r\n    category: category,\r\n  });\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  // Fetch contacts by category\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/contacts?category=${category}`);\r\n        setContacts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching contacts:', error);\r\n      }\r\n    };\r\n    fetchContacts();\r\n  }, [category]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewContact({ ...newContact, [name]: value });\r\n  };\r\n\r\n  // Function to convert file to Base64 format\r\n  const handleFileToBase64Conversion = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  // Handle file input change\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      try {\r\n        const base64 = await handleFileToBase64Conversion(file);\r\n        // Set the Base64 string to the profile field in newContact\r\n        setNewContact((prevContact) => ({\r\n          ...prevContact,\r\n          profile: base64,\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error converting file to Base64:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddContact = async () => {\r\n    if (!newContact.name) {\r\n      alert('Please enter a name for the contact.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/contacts', newContact);\r\n      setContacts([...contacts, response.data]);\r\n      setIsModalOpen(false);\r\n      // Reset the form after successful contact creation\r\n      setNewContact({\r\n        name: '',\r\n        avatar: '',\r\n        email: '',\r\n        phone: '',\r\n        profile: '',\r\n        category: category,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding contact:', error.response ? error.response.data : error.message);\r\n      alert(`Failed to add contact. ${error.response ? error.response.data.message : 'Please try again.'}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"PeoplePixel Logo\" />\r\n        </div>\r\n        <div className=\"logo-text\">{category} </div>\r\n        <input type=\"text\" placeholder=\"Search...\" className=\"search-bar\" />\r\n      </header>\r\n      <h2>\r\n        <button className=\"back-button\" onClick={() => window.history.back()}>\r\n          <FaChevronLeft className=\"icon\" /> Contacts\r\n        </button>\r\n        <button className=\"add-contact\" onClick={() => setIsModalOpen(true)}>\r\n          <FaPlusCircle className=\"icon\" />Add Contact\r\n        </button>\r\n      </h2>\r\n\r\n      <div className=\"container\">\r\n        {contacts.length > 0 ? (\r\n          contacts.map((contact, index) => (\r\n            <Link\r\n              key={index}\r\n              className=\"card\"\r\n              to={`/contact?name=${contact.name}&avatar=${contact.avatar}&phone=${contact.phone}&profile=${contact.profile}&email=${contact.email}&category=${contact.category}&contactId=${contact._id}`}\r\n            >\r\n              <div className=\"avatar\">{contact.avatar}</div>\r\n              <p className=\"name\">{contact.name}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p>No contacts found for this category.</p>\r\n        )}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Add New Contact</h2>\r\n            <form>\r\n              <label>Name:</label>\r\n              <input type=\"text\" name=\"name\" value={newContact.name} onChange={handleInputChange} required />\r\n              <label>Avatar (Single Character):</label>\r\n              <input type=\"text\" name=\"avatar\" value={newContact.avatar} onChange={handleInputChange} maxLength=\"1\" />\r\n              <label>Email:</label>\r\n              <input type=\"text\" name=\"email\" value={newContact.email} onChange={handleInputChange} />\r\n              <label>Phone Number:</label>\r\n              <input type=\"text\" name=\"phone\" value={newContact.phone} onChange={handleInputChange} />\r\n              <label>Profile Picture:</label>\r\n              <input type=\"file\" name=\"profile\" onChange={handleFileChange} />\r\n            </form>\r\n            <button onClick={handleAddContact}>Save</button>\r\n            <button onClick={() => setIsModalOpen(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,YAAY,QAAQ,gBAAgB;AAC5D,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,QAAQ,G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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}