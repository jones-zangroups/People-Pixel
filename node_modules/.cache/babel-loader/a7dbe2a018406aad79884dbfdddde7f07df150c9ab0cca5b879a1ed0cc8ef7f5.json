{"ast":null,"code":"var _jsxFileName = \"D:\\\\PeoplePixel1\\\\src\\\\IndividualContact.js\",\n  _s = $RefreshSig$();\n// //src/IndividualContact.js\n// import React, { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import { fetchTodos, addTodo, toggleTodo } from './api';\n// import './styles.css';\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\n\n// const IndividualContact = () => {\n//   const location = useLocation();\n//   const params = new URLSearchParams(location.search);\n//   const name = params.get('name');\n//   const avatar = params.get('avatar');\n//   const contactId = params.get('contactId');\n//   const category = params.get('category');\n\n//   const [activeTab, setActiveTab] = useState('todo');\n//   const [todos, setTodos] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [newTodoText, setNewTodoText] = useState('');\n//   const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n//   const [newTodoDueDate, setNewTodoDueDate] = useState('');\n//   const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n\n//   useEffect(() => {\n//     const loadTodos = async () => {\n//       if (!contactId) {\n//         setError('No contact ID provided');\n//         setLoading(false);\n//         return;\n//       }\n\n//       try {\n//         setLoading(true);\n//         const todoData = await fetchTodos(contactId);\n//         setTodos(todoData);\n//         setError(null);\n//       } catch (err) {\n//         setError('Failed to load todos: ' + err.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     loadTodos();\n//   }, [contactId]);\n\n//   const handleAddTodo = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const newTodo = {\n//         text: newTodoText,\n//         completed: false,\n//         priority: newTodoPriority,\n//         dueDate: newTodoDueDate\n//       };\n\n//       const response = await addTodo(contactId, newTodo);\n//       setTodos([...todos, response]);\n//       setNewTodoText('');\n//       setNewTodoPriority('Medium');\n//       setNewTodoDueDate('');\n//       setTodoFormVisible(false); // Hide form after saving\n//     } catch (err) {\n//       setError('Failed to add todo: ' + err.message);\n//       console.error('Error in handleAddTodo:', err);\n//     }\n//   };\n\n//   const handleToggleTodo = async (todoId, completed) => {\n//     try {\n//       const updatedTodo = await toggleTodo(todoId, !completed);\n//       setTodos(prevTodos =>\n//         prevTodos.map(todo =>\n//           todo._id === todoId ? updatedTodo : todo\n//         )\n//       );\n//     } catch (err) {\n//       setError('Failed to update todo: ' + err.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"individual-contact\">\n//       <header className=\"header\">\n//         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\n//       </header>\n\n//       <div className=\"contact-summary\">\n//         <div className=\"contact-photo\">\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\n//         </div>\n//         <h2>{name || \"Contact\"}</h2>\n//       </div>\n\n//       <div className=\"tab-bar\">\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\n//           <FaCheckSquare className=\"icon\" /> Todo\n//         </button>\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\n//           <FaBell className=\"icon\" /> Reminder\n//         </button>\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\n//           <FaMoneyBillWave className=\"icon\" /> Finance\n//         </button>\n//       </div>\n\n//       <div className=\"tab-content\">\n//         {activeTab === 'todo' && (\n//           <div className=\"todo-content\">\n//             {error && <div className=\"error-message\">{error}</div>}\n\n//             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\n//               <FaPlusCircle className=\"icon\" /> Add New Todo\n//             </button>\n\n//             {isTodoFormVisible && (\n//               <div className=\"todo-form-overlay\">\n//                 <div className=\"todo-form\">\n//                   <form onSubmit={handleAddTodo}>\n//                     <label>Todo:</label>\n//                     <input\n//                       type=\"text\"\n//                       value={newTodoText}\n//                       onChange={(e) => setNewTodoText(e.target.value)}\n//                       placeholder=\"New todo text\"\n//                       required\n//                     />\n//                     <label>Priority:</label>\n//                     <select\n//                       value={newTodoPriority}\n//                       onChange={(e) => setNewTodoPriority(e.target.value)}\n//                     >\n//                       <option value=\"High\">High</option>\n//                       <option value=\"Medium\">Medium</option>\n//                       <option value=\"Low\">Low</option>\n//                     </select>\n//                     <label>Due Date:</label>\n//                     <input\n//                       type=\"date\"\n//                       value={newTodoDueDate}\n//                       onChange={(e) => setNewTodoDueDate(e.target.value)}\n//                     />\n//                     <button type=\"submit\">Save Todo</button>\n//                     <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\n//                   </form>\n//                 </div>\n//               </div>\n//             )}\n\n//             <div className=\"todo-list\">\n//               {loading ? (\n//                 <p>Loading todos...</p>\n//               ) : todos.length === 0 ? (\n//                 <p>No todos found</p>\n//               ) : (\n//                 todos.map(todo => (\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\n//                     <span>{todo.text}</span>\n//                     <span>{new Date(todo.dueDate).toISOString().split('T')[0]}</span>\n//                     <span>{todo.priority}</span>\n//                     <input\n//                       type=\"checkbox\"\n//                       checked={todo.completed}\n//                       onChange={() => handleToggleTodo(todo._id, todo.completed)}\n//                     />\n//                   </div>\n//                 ))\n//               )}\n//             </div>\n//           </div>\n//         )}\n\n//         {activeTab === 'reminder' && (\n//           <div className=\"reminder-content\">\n//             <button className=\"add-button\">+ Add New Reminder</button>\n//           </div>\n//         )}\n\n//         {activeTab === 'finance' && (\n//           <div className=\"finance-content\">\n//             <button className=\"add-button\">+ Add New Transaction</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default IndividualContact;\n\n//src/IndividualContact.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo } from './api';\nimport './styles.css';\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualContact = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  const avatar = params.get('avatar');\n  const contactId = params.get('contactId');\n  const [activeTab, setActiveTab] = useState('todo');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        setLoading(true);\n        const todoData = await fetchTodos(contactId);\n        setTodos(todoData);\n      } catch (err) {\n        setError('Failed to load todos: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadTodos();\n  }, [contactId]);\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    try {\n      const newTodo = {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      };\n      const response = await addTodo(contactId, newTodo);\n      setTodos([...todos, response]);\n      setNewTodoText('');\n      setNewTodoPriority('Medium');\n      setNewTodoDueDate('');\n      setTodoFormVisible(false);\n    } catch (err) {\n      setError('Failed to add todo: ' + err.message);\n    }\n  };\n  const handleUpdateTodo = async todoId => {\n    try {\n      const updatedTodo = await updateTodo(todoId, {\n        text: newTodoText,\n        priority: newTodoPriority,\n        dueDate: newTodoDueDate\n      });\n      setTodos(todos.map(todo => todo._id === todoId ? updatedTodo : todo));\n      setSelectedTodo(null); // Close the update form\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const handleDeleteTodo = async todoId => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\n    if (confirmDelete) {\n      try {\n        await deleteTodo(todoId);\n        setTodos(todos.filter(todo => todo._id !== todoId));\n      } catch (err) {\n        setError('Failed to delete todo: ' + err.message);\n      }\n    }\n  };\n  const handleToggleTodo = async (todoId, completed) => {\n    try {\n      const updatedTodo = await toggleTodo(todoId, !completed);\n      setTodos(prevTodos => prevTodos.map(todo => todo._id === todoId ? updatedTodo : todo));\n    } catch (err) {\n      setError('Failed to update todo: ' + err.message);\n    }\n  };\n  const showUpdateForm = todo => {\n    setSelectedTodo(todo);\n    setNewTodoText(todo.text);\n    setNewTodoPriority(todo.priority);\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"individual-contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.history.back(),\n        children: [/*#__PURE__*/_jsxDEV(FaChevronLeft, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 79\n        }, this), \" Contacts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar || '/default-avatar.jpg',\n          alt: `${name}'s avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name || \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'todo' ? 'active' : ''}`,\n        onClick: () => setActiveTab('todo'),\n        children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 12\n        }, this), \" Todo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'reminder' ? 'active' : ''}`,\n        onClick: () => setActiveTab('reminder'),\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 12\n        }, this), \" Reminder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'finance' ? 'active' : ''}`,\n        onClick: () => setActiveTab('finance'),\n        children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 12\n        }, this), \" Finance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: activeTab === 'todo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-todo-button\",\n          onClick: () => setTodoFormVisible(true),\n          children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), \" Add New Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), isTodoFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-form-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddTodo,\n            className: \"todo-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTodoText,\n              onChange: e => setNewTodoText(e.target.value),\n              placeholder: \"New todo text\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newTodoPriority,\n              onChange: e => setNewTodoPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \" High \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \" Low  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newTodoDueDate,\n              onChange: e => setNewTodoDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setTodoFormVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading todos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(todo.dueDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => showUpdateForm(todo),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTodo(todo._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo._id, todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)]\n          }, todo._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), selectedTodo && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTodo(selectedTodo._id);\n          },\n          className: \"update-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTodoText,\n            onChange: e => setNewTodoText(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newTodoPriority,\n            onChange: e => setNewTodoPriority(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \" High \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \" Low  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newTodoDueDate,\n            onChange: e => setNewTodoDueDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSelectedTodo(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), activeTab === 'reminder' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-content\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        children: \"+ Add New Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }, this), activeTab === 'finance' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"finance-content\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        children: \"+ Add New Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualContact, \"lD2ffd9QS14PurXjxl1qCna8fOc=\", false, function () {\n  return [useLocation];\n});\n_c = IndividualContact;\nexport default IndividualContact;\nvar _c;\n$RefreshReg$(_c, \"IndividualContact\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","fetchTodos","addTodo","toggleTodo","updateTodo","deleteTodo","FaCheckSquare","FaBell","FaMoneyBillWave","FaPlusCircle","FaChevronLeft","jsxDEV","_jsxDEV","IndividualContact","_s","location","params","URLSearchParams","search","name","get","avatar","contactId","activeTab","setActiveTab","todos","setTodos","loading","setLoading","error","setError","newTodoText","setNewTodoText","newTodoPriority","setNewTodoPriority","newTodoDueDate","setNewTodoDueDate","isTodoFormVisible","setTodoFormVisible","selectedTodo","setSelectedTodo","loadTodos","todoData","err","message","handleAddTodo","e","preventDefault","newTodo","text","priority","dueDate","response","handleUpdateTodo","todoId","updatedTodo","map","todo","_id","handleDeleteTodo","confirmDelete","window","confirm","filter","handleToggleTodo","completed","prevTodos","showUpdateForm","split","className","children","onClick","history","back","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","value","onChange","target","placeholder","required","Date","toLocaleDateString","checked","_c","$RefreshReg$"],"sources":["D:/PeoplePixel1/src/IndividualContact.js"],"sourcesContent":["\r\n// //src/IndividualContact.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import { fetchTodos, addTodo, toggleTodo } from './api';\r\n// import './styles.css';\r\n// import { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\n\r\n// const IndividualContact = () => {\r\n//   const location = useLocation();\r\n//   const params = new URLSearchParams(location.search);\r\n//   const name = params.get('name');\r\n//   const avatar = params.get('avatar');\r\n//   const contactId = params.get('contactId');\r\n//   const category = params.get('category');\r\n\r\n//   const [activeTab, setActiveTab] = useState('todo');\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [newTodoText, setNewTodoText] = useState('');\r\n//   const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n//   const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n//   const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const loadTodos = async () => {\r\n//       if (!contactId) {\r\n//         setError('No contact ID provided');\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         setLoading(true);\r\n//         const todoData = await fetchTodos(contactId);\r\n//         setTodos(todoData);\r\n//         setError(null);\r\n//       } catch (err) {\r\n//         setError('Failed to load todos: ' + err.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     loadTodos();\r\n//   }, [contactId]);\r\n\r\n//   const handleAddTodo = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const newTodo = {\r\n//         text: newTodoText,\r\n//         completed: false,\r\n//         priority: newTodoPriority,\r\n//         dueDate: newTodoDueDate\r\n//       };\r\n\r\n//       const response = await addTodo(contactId, newTodo);\r\n//       setTodos([...todos, response]);\r\n//       setNewTodoText('');\r\n//       setNewTodoPriority('Medium');\r\n//       setNewTodoDueDate('');\r\n//       setTodoFormVisible(false); // Hide form after saving\r\n//     } catch (err) {\r\n//       setError('Failed to add todo: ' + err.message);\r\n//       console.error('Error in handleAddTodo:', err);\r\n//     }\r\n//   };\r\n\r\n//   const handleToggleTodo = async (todoId, completed) => {\r\n//     try {\r\n//       const updatedTodo = await toggleTodo(todoId, !completed);\r\n//       setTodos(prevTodos =>\r\n//         prevTodos.map(todo =>\r\n//           todo._id === todoId ? updatedTodo : todo\r\n//         )\r\n//       );\r\n//     } catch (err) {\r\n//       setError('Failed to update todo: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"individual-contact\">\r\n//       <header className=\"header\">\r\n//         <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n//       </header>\r\n\r\n//       <div className=\"contact-summary\">\r\n//         <div className=\"contact-photo\">\r\n//           <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n//         </div>\r\n//         <h2>{name || \"Contact\"}</h2>\r\n//       </div>\r\n\r\n//       <div className=\"tab-bar\">\r\n//         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n//           <FaCheckSquare className=\"icon\" /> Todo\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n//           <FaBell className=\"icon\" /> Reminder\r\n//         </button>\r\n//         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n//           <FaMoneyBillWave className=\"icon\" /> Finance\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"tab-content\">\r\n//         {activeTab === 'todo' && (\r\n//           <div className=\"todo-content\">\r\n//             {error && <div className=\"error-message\">{error}</div>}\r\n\r\n//             <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n//               <FaPlusCircle className=\"icon\" /> Add New Todo\r\n//             </button>\r\n\r\n//             {isTodoFormVisible && (\r\n//               <div className=\"todo-form-overlay\">\r\n//                 <div className=\"todo-form\">\r\n//                   <form onSubmit={handleAddTodo}>\r\n//                     <label>Todo:</label>\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={newTodoText}\r\n//                       onChange={(e) => setNewTodoText(e.target.value)}\r\n//                       placeholder=\"New todo text\"\r\n//                       required\r\n//                     />\r\n//                     <label>Priority:</label>\r\n//                     <select\r\n//                       value={newTodoPriority}\r\n//                       onChange={(e) => setNewTodoPriority(e.target.value)}\r\n//                     >\r\n//                       <option value=\"High\">High</option>\r\n//                       <option value=\"Medium\">Medium</option>\r\n//                       <option value=\"Low\">Low</option>\r\n//                     </select>\r\n//                     <label>Due Date:</label>\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       value={newTodoDueDate}\r\n//                       onChange={(e) => setNewTodoDueDate(e.target.value)}\r\n//                     />\r\n//                     <button type=\"submit\">Save Todo</button>\r\n//                     <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n//                   </form>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n\r\n//             <div className=\"todo-list\">\r\n//               {loading ? (\r\n//                 <p>Loading todos...</p>\r\n//               ) : todos.length === 0 ? (\r\n//                 <p>No todos found</p>\r\n//               ) : (\r\n//                 todos.map(todo => (\r\n//                   <div key={todo._id} className={`list-item ${todo.completed ? 'completed' : ''}`}>\r\n//                     <span>{todo.text}</span>\r\n//                     <span>{new Date(todo.dueDate).toISOString().split('T')[0]}</span>\r\n//                     <span>{todo.priority}</span>\r\n//                     <input\r\n//                       type=\"checkbox\"\r\n//                       checked={todo.completed}\r\n//                       onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n//                     />\r\n//                   </div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'reminder' && (\r\n//           <div className=\"reminder-content\">\r\n//             <button className=\"add-button\">+ Add New Reminder</button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {activeTab === 'finance' && (\r\n//           <div className=\"finance-content\">\r\n//             <button className=\"add-button\">+ Add New Transaction</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default IndividualContact;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//src/IndividualContact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchTodos, addTodo, toggleTodo, updateTodo, deleteTodo } from './api';\r\nimport './styles.css';\r\nimport { FaCheckSquare, FaBell, FaMoneyBillWave, FaPlusCircle, FaChevronLeft } from 'react-icons/fa';\r\n\r\nconst IndividualContact = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const name = params.get('name');\r\n  const avatar = params.get('avatar');\r\n  const contactId = params.get('contactId');\r\n\r\n  const [activeTab, setActiveTab] = useState('todo');\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [newTodoPriority, setNewTodoPriority] = useState('Medium');\r\n  const [newTodoDueDate, setNewTodoDueDate] = useState('');\r\n  const [isTodoFormVisible, setTodoFormVisible] = useState(false);\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadTodos = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const todoData = await fetchTodos(contactId);\r\n        setTodos(todoData);\r\n      } catch (err) {\r\n        setError('Failed to load todos: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTodos();\r\n  }, [contactId]);\r\n\r\n  const handleAddTodo = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newTodo = {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      };\r\n      const response = await addTodo(contactId, newTodo);\r\n      setTodos([...todos, response]);\r\n      setNewTodoText('');\r\n      setNewTodoPriority('Medium');\r\n      setNewTodoDueDate('');\r\n      setTodoFormVisible(false);\r\n    } catch (err) {\r\n      setError('Failed to add todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTodo = async (todoId) => {\r\n    try {\r\n      const updatedTodo = await updateTodo(todoId, {\r\n        text: newTodoText,\r\n        priority: newTodoPriority,\r\n        dueDate: newTodoDueDate\r\n      });\r\n      setTodos(todos.map(todo => (todo._id === todoId ? updatedTodo : todo)));\r\n      setSelectedTodo(null); // Close the update form\r\n    } catch (err) {\r\n      setError('Failed to update todo: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTodo = async (todoId) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this todo?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await deleteTodo(todoId);\r\n        setTodos(todos.filter(todo => todo._id !== todoId));\r\n      } catch (err) {\r\n        setError('Failed to delete todo: ' + err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = async (todoId, completed) => {\r\n        try {\r\n          const updatedTodo = await toggleTodo(todoId, !completed);\r\n          setTodos(prevTodos =>\r\n            prevTodos.map(todo =>\r\n              todo._id === todoId ? updatedTodo : todo\r\n            )\r\n          );\r\n        } catch (err) {\r\n          setError('Failed to update todo: ' + err.message);\r\n        }\r\n      };\r\n\r\n  const showUpdateForm = (todo) => {\r\n    setSelectedTodo(todo);\r\n    setNewTodoText(todo.text);\r\n    setNewTodoPriority(todo.priority);\r\n    setNewTodoDueDate(todo.dueDate.split('T')[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"individual-contact\">\r\n      <header className=\"header\">\r\n        <button className=\"back-button\" onClick={() => window.history.back()}><FaChevronLeft className=\"icon\" /> Contacts</button>\r\n      </header>\r\n\r\n      <div className=\"contact-summary\">\r\n        <div className=\"contact-photo\">\r\n          <img src={avatar || '/default-avatar.jpg'} alt={`${name}'s avatar`} />\r\n        </div>\r\n        <h2>{name || \"Contact\"}</h2>\r\n      </div>\r\n\r\n      <div className=\"tab-bar\">\r\n         <button className={`tab ${activeTab === 'todo' ? 'active' : ''}`} onClick={() => setActiveTab('todo')}>\r\n           <FaCheckSquare className=\"icon\" /> Todo\r\n         </button>\r\n         <button className={`tab ${activeTab === 'reminder' ? 'active' : ''}`} onClick={() => setActiveTab('reminder')}>\r\n           <FaBell className=\"icon\" /> Reminder\r\n         </button>\r\n         <button className={`tab ${activeTab === 'finance' ? 'active' : ''}`} onClick={() => setActiveTab('finance')}>\r\n           <FaMoneyBillWave className=\"icon\" /> Finance\r\n         </button>\r\n       </div>\r\n\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === 'todo' && (\r\n          <div className=\"todo-content\">\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <button className=\"add-todo-button\" onClick={() => setTodoFormVisible(true)}>\r\n              <FaPlusCircle className=\"icon\" /> Add New Todo\r\n            </button>\r\n\r\n            {isTodoFormVisible && (\r\n              <div className=\"todo-form-overlay\">\r\n              <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  placeholder=\"New todo text\"\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\"> High </option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\"> Low  </option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Save Todo</button>\r\n                <button type=\"button\" onClick={() => setTodoFormVisible(false)}>Cancel</button>\r\n              </form>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"todo-list\">\r\n              {loading ? (\r\n                <p>Loading todos...</p>\r\n              ) : todos.map(todo => (\r\n                <div key={todo._id} className=\"todo-item\">\r\n                  <span>{todo.text}</span>\r\n                  <span>{todo.priority}</span>\r\n                  <span>{new Date(todo.dueDate).toLocaleDateString()}</span>\r\n                  <button onClick={() => showUpdateForm(todo)}>Update</button>\r\n                  <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\r\n                  <input\r\n                      type=\"checkbox\"\r\n                      checked={todo.completed}\r\n                      onChange={() => handleToggleTodo(todo._id, todo.completed)}\r\n                    />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n\r\n\r\n            {selectedTodo && (\r\n              <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleUpdateTodo(selectedTodo._id);\r\n              }} className=\"update-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodoText}\r\n                  onChange={(e) => setNewTodoText(e.target.value)}\r\n                  required\r\n                />\r\n                <select value={newTodoPriority} onChange={(e) => setNewTodoPriority(e.target.value)}>\r\n                  <option value=\"High\"> High </option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Low\"> Low  </option>\r\n                </select>\r\n                <input type=\"date\" value={newTodoDueDate} onChange={(e) => setNewTodoDueDate(e.target.value)} />\r\n                <button type=\"submit\">Update Todo</button>\r\n                <button type=\"button\" onClick={() => setSelectedTodo(null)}>Cancel</button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        )}\r\n          \r\n      </div>\r\n      {activeTab === 'reminder' && (\r\n          <div className=\"reminder-content\">\r\n            <button className=\"add-button\">+ Add New Reminder</button>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'finance' && (\r\n          <div className=\"finance-content\">\r\n            <button className=\"add-button\">+ Add New Transaction</button>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualContact;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}